// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`avatar component should  return  source Image 1`] = `
<BlueBaseApp
  plugins={
    Array [
      Object {
        "categories": Array [],
        "defaultConfigs": Object {},
        "description": "React Native Paper comes to BlueBase!",
        "enabled": true,
        "key": "@bluebase/plugin-react-native-paper",
        "name": "React Native Paper",
        "value": Object {
          "assets": Object {
            "Material Icons": "test-file-stub",
          },
          "components": Object {
            "Avatar": [Function],
            "Button": [Function],
            "Card": [Function],
            "CardActions": [Function],
            "CardContent": [Function],
            "CardCover": [Function],
            "CardHeader": [Function],
            "Checkbox": [Function],
            "Dialog": [Function],
            "DialogActions": [Function],
            "DialogContent": [Function],
            "DialogTitle": [Function],
            "Divider": [Function],
            "DrawerItem": [Function],
            "DrawerSection": [Function],
            "FormControlLabel": [Function],
            "FormHelperText": [Function],
            "IconButton": [Function],
            "List": [Function],
            "ListAvatar": [Function],
            "ListIcon": [Function],
            "ListItem": [Function],
            "ListSubheader": [Function],
            "PickerComponent": [Function],
            "Radio": [Function],
            "RadioGroup": [Function],
            "Switch": [Function],
            "Table": [Function],
            "TableCell": [Function],
            "TableHead": [Function],
            "TablePagination": [Function],
            "TableRow": [Function],
            "TableTitle": [Function],
            "TextInput": [Function],
          },
          "filters": Object {
            "bluebase.boot.end": [Function],
          },
          "fonts": Object {},
          "routes": undefined,
          "themes": Object {},
        },
        "version": "1.0.0",
      },
    ]
  }
>
  <BlueBaseRoot>
    <ThemeProvider>
      <IntlProvider>
        <BlueBaseContent
          BB={
            BlueBase {
              "Analytics": Analytics {
                "BB": [Circular],
              },
              "Assets": AssetRegistry {
                "BB": [Circular],
                "data": Map {
                  "Logo" => Object {
                    "key": "Logo",
                    "preload": false,
                    "type": "unknown",
                    "value": Object {
                      "uri": "test-file-stub",
                    },
                  },
                  "LogoSquare" => Object {
                    "key": "LogoSquare",
                    "preload": false,
                    "type": "unknown",
                    "value": Object {
                      "uri": "test-file-stub",
                    },
                  },
                  "Material Icons" => Object {
                    "key": "Material Icons",
                    "preload": false,
                    "type": "unknown",
                    "value": Object {
                      "uri": "test-file-stub",
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Components": ComponentRegistry {
                "BB": [Circular],
                "data": Map {
                  "BlueBaseContent" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      [Function],
                    ],
                    "isAsync": false,
                    "key": "BlueBaseContent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "BlueBaseFilter" => Object {
                    "applyStyles": false,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "BlueBaseFilter",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "BlueBaseImage" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "BlueBaseImage",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ComponentState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ComponentState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DataObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DataObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DynamicIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DynamicIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "EmptyState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "EmptyState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "FormattedMessage" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "FormattedMessage",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HomeScreen" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HomeScreen",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HoverObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HoverObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Icon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Icon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Link" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Link",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "LoadingState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "LoadingState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Navigation" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      [Function],
                    ],
                    "isAsync": false,
                    "key": "Navigation",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "NavigationActions" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "NavigationActions",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Noop" => Object {
                    "applyStyles": false,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Noop",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "PluginIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "PluginIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Redirect" => Object {
                    "applyStyles": false,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Redirect",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "StatefulComponent" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "StatefulComponent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "TouchableItem" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "TouchableItem",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "WaitObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "WaitObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ActivityIndicator" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ActivityIndicator",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Button" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Button",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "FlatList" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "FlatList",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Image" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Image",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ImageBackground" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ImageBackground",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Picker" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Picker",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "SafeAreaView" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "SafeAreaView",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ScrollView" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ScrollView",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [MockFunction],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [MockFunction],
                    },
                  },
                  "Slider" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Slider",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "defaultProps": Object {
                          "disabled": false,
                          "maximumValue": 1,
                          "minimumValue": 0,
                          "step": 0,
                          "value": 0,
                        },
                        "render": [Function],
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "defaultProps": Object {
                          "disabled": false,
                          "maximumValue": 1,
                          "minimumValue": 0,
                          "step": 0,
                          "value": 0,
                        },
                        "render": [Function],
                      },
                    },
                  },
                  "Switch" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Switch",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Text" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Text",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "TextInput" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "TextInput",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "View" => Object {
                    "applyStyles": false,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "View",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H3" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H3",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H4" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H4",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H5" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H5",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H6" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H6",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Caption" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Caption",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Overline" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Overline",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Avatar" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Avatar",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Card" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Card",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "CardActions" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "CardActions",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "CardContent" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "CardContent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "CardCover" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "CardCover",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "CardHeader" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "CardHeader",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Checkbox" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Checkbox",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Dialog" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Dialog",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DialogActions" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DialogActions",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DialogContent" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DialogContent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DialogTitle" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DialogTitle",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Divider" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Divider",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DrawerItem" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DrawerItem",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DrawerSection" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DrawerSection",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "FormControlLabel" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "FormControlLabel",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "FormHelperText" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "FormHelperText",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "IconButton" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "IconButton",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "List" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "List",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ListAvatar" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ListAvatar",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ListIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ListIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ListItem" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ListItem",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ListSubheader" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ListSubheader",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "PickerComponent" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "PickerComponent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Radio" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Radio",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "RadioGroup" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "RadioGroup",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Table" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Table",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "TableCell" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "TableCell",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "TableHead" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "TableHead",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "TablePagination" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "TablePagination",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "TableRow" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "TableRow",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "TableTitle" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "TableTitle",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Configs": ConfigRegistry {
                "BB": [Circular],
                "data": Map {
                  "debug" => Object {
                    "key": "debug",
                    "value": true,
                  },
                  "development" => Object {
                    "key": "development",
                    "value": true,
                  },
                  "direction" => Object {
                    "key": "direction",
                    "value": "auto",
                  },
                  "locale" => Object {
                    "key": "locale",
                    "value": "en",
                  },
                  "locale.options" => Object {
                    "key": "locale.options",
                    "value": Object {
                      "en": "English",
                      "ur": "اُردُو",
                    },
                  },
                  "pluginRoutePathPrefix" => Object {
                    "key": "pluginRoutePathPrefix",
                    "value": "p",
                  },
                  "statusBarStyle" => Object {
                    "key": "statusBarStyle",
                    "value": "light-content",
                  },
                  "theme.mode" => Object {
                    "key": "theme.mode",
                    "value": "light",
                  },
                  "theme.name" => Object {
                    "key": "theme.name",
                    "value": "bluebase-light",
                  },
                  "theme.overrides" => Object {
                    "key": "theme.overrides",
                    "value": Object {},
                  },
                  "title" => Object {
                    "key": "title",
                    "value": "BlueBase",
                  },
                },
                "subscriptions": Map {
                  "theme.name" => Map {
                    "_2nwpv2o" => [Function],
                  },
                  "locale" => Map {
                    "_5sq20s5" => [Function],
                  },
                  "direction" => Map {
                    "_8q9vkhk" => [Function],
                  },
                },
              },
              "Filters": FilterRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-assets-register-internal-default" => Object {
                    "event": "bluebase.assets.register.internal",
                    "key": "bluebase-assets-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-assets-register-default" => Object {
                    "event": "bluebase.assets.register",
                    "key": "bluebase-assets-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-boot-default" => Object {
                    "event": "bluebase.boot",
                    "key": "bluebase-boot-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "system-boot-start-default" => Object {
                    "event": "bluebase.boot.start",
                    "key": "system-boot-start-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "system-preload-default" => Object {
                    "event": "bluebase.preload",
                    "key": "system-preload-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-internal-default" => Object {
                    "event": "bluebase.components.register.internal",
                    "key": "bluebase-components-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-default" => Object {
                    "event": "bluebase.components.register",
                    "key": "bluebase-components-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-configs-register-default" => Object {
                    "event": "bluebase.configs.register",
                    "key": "bluebase-configs-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-fonts-register-default" => Object {
                    "event": "bluebase.fonts.register",
                    "key": "bluebase-fonts-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-register-default" => Object {
                    "event": "bluebase.plugins.register",
                    "key": "bluebase-plugins-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-all-default" => Object {
                    "event": "bluebase.plugins.initialize.all",
                    "key": "bluebase-plugins-initialize-all-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-default" => Object {
                    "event": "bluebase.plugins.initialize",
                    "key": "bluebase-plugins-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-root-internal-default" => Object {
                    "event": "bluebase.navigator.root",
                    "key": "bluebase-navigator-root-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-main-internal-default" => Object {
                    "event": "bluebase.navigator.main",
                    "key": "bluebase-navigator-main-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-themes-register-internal-default" => Object {
                    "event": "bluebase.themes.register",
                    "key": "bluebase-themes-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "_1bi42j5" => Object {
                    "event": "bluebase.boot.end",
                    "key": "_1bi42j5",
                    "preload": false,
                    "priority": 10,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Fonts": FontRegistry {
                "BB": [Circular],
                "data": Map {},
                "subscriptions": Map {},
              },
              "Logger": Logger {
                "BB": [Circular],
              },
              "Plugins": PluginRegistry {
                "BB": [Circular],
                "data": Map {
                  "@bluebase/plugin-react-native-paper" => Object {
                    "categories": Array [],
                    "defaultConfigs": Object {},
                    "description": "React Native Paper comes to BlueBase!",
                    "enabled": true,
                    "key": "@bluebase/plugin-react-native-paper",
                    "name": "React Native Paper",
                    "path": undefined,
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "assets": Object {
                          "Material Icons": "test-file-stub",
                        },
                        "components": Object {
                          "Avatar": [Function],
                          "Button": [Function],
                          "Card": [Function],
                          "CardActions": [Function],
                          "CardContent": [Function],
                          "CardCover": [Function],
                          "CardHeader": [Function],
                          "Checkbox": [Function],
                          "Dialog": [Function],
                          "DialogActions": [Function],
                          "DialogContent": [Function],
                          "DialogTitle": [Function],
                          "Divider": [Function],
                          "DrawerItem": [Function],
                          "DrawerSection": [Function],
                          "FormControlLabel": [Function],
                          "FormHelperText": [Function],
                          "IconButton": [Function],
                          "List": [Function],
                          "ListAvatar": [Function],
                          "ListIcon": [Function],
                          "ListItem": [Function],
                          "ListSubheader": [Function],
                          "PickerComponent": [Function],
                          "Radio": [Function],
                          "RadioGroup": [Function],
                          "Switch": [Function],
                          "Table": [Function],
                          "TableCell": [Function],
                          "TableHead": [Function],
                          "TablePagination": [Function],
                          "TableRow": [Function],
                          "TableTitle": [Function],
                          "TextInput": [Function],
                        },
                        "filters": Object {
                          "bluebase.boot.end": [Function],
                        },
                        "fonts": Object {},
                        "routes": undefined,
                        "themes": Object {},
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "assets": Object {
                          "Material Icons": "test-file-stub",
                        },
                        "components": Object {
                          "Avatar": [Function],
                          "Button": [Function],
                          "Card": [Function],
                          "CardActions": [Function],
                          "CardContent": [Function],
                          "CardCover": [Function],
                          "CardHeader": [Function],
                          "Checkbox": [Function],
                          "Dialog": [Function],
                          "DialogActions": [Function],
                          "DialogContent": [Function],
                          "DialogTitle": [Function],
                          "Divider": [Function],
                          "DrawerItem": [Function],
                          "DrawerSection": [Function],
                          "FormControlLabel": [Function],
                          "FormHelperText": [Function],
                          "IconButton": [Function],
                          "List": [Function],
                          "ListAvatar": [Function],
                          "ListIcon": [Function],
                          "ListItem": [Function],
                          "ListSubheader": [Function],
                          "PickerComponent": [Function],
                          "Radio": [Function],
                          "RadioGroup": [Function],
                          "Switch": [Function],
                          "Table": [Function],
                          "TableCell": [Function],
                          "TableHead": [Function],
                          "TablePagination": [Function],
                          "TableRow": [Function],
                          "TableTitle": [Function],
                          "TextInput": [Function],
                        },
                        "filters": Object {
                          "bluebase.boot.end": [Function],
                        },
                        "fonts": Object {},
                        "routes": undefined,
                        "themes": Object {},
                      },
                    },
                    "version": "1.0.0",
                  },
                },
                "subscriptions": Map {},
              },
              "Themes": ThemeRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-light" => Object {
                    "alternate": "bluebase-dark",
                    "key": "bluebase-light",
                    "mode": "light",
                    "name": "BlueBase Light",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "dark": "#eeeeee",
                            "default": "#f5f5f5",
                            "light": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "success": Object {
                            "contrastText": "#fff",
                            "dark": "#388e3c",
                            "light": "#81c784",
                            "main": "#4caf50",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                          "warning": Object {
                            "contrastText": "#fff",
                            "dark": "#ffa000",
                            "light": "#ffd54f",
                            "main": "#ffc107",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "dark": "#eeeeee",
                            "default": "#f5f5f5",
                            "light": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "success": Object {
                            "contrastText": "#fff",
                            "dark": "#388e3c",
                            "light": "#81c784",
                            "main": "#4caf50",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                          "warning": Object {
                            "contrastText": "#fff",
                            "dark": "#ffa000",
                            "light": "#ffd54f",
                            "main": "#ffc107",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                  "bluebase-dark" => Object {
                    "alternate": "bluebase-light",
                    "key": "bluebase-dark",
                    "mode": "dark",
                    "name": "BlueBase Dark",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "dark": "#202020",
                            "default": "#303030",
                            "light": "#404040",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "success": Object {
                            "contrastText": "#fff",
                            "dark": "#388e3c",
                            "light": "#81c784",
                            "main": "#4caf50",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                          "warning": Object {
                            "contrastText": "#fff",
                            "dark": "#ffa000",
                            "light": "#ffd54f",
                            "main": "#ffc107",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "dark": "#202020",
                            "default": "#303030",
                            "light": "#404040",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "success": Object {
                            "contrastText": "#fff",
                            "dark": "#388e3c",
                            "light": "#81c784",
                            "main": "#4caf50",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                          "warning": Object {
                            "contrastText": "#fff",
                            "dark": "#ffa000",
                            "light": "#ffd54f",
                            "main": "#ffc107",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "bootOptions": Object {
                "assets": Object {},
                "children": <PickerComponent
                  items={
                    Array [
                      Object {
                        "label": "SanPyaeLin",
                        "value": "SanPyaeLin",
                      },
                      Object {
                        "label": "Jhon",
                        "value": "Jhon",
                      },
                      Object {
                        "label": "Marry",
                        "value": "Marry",
                      },
                    ]
                  }
                  label="enter label"
                  onValueChange={[Function]}
                  selectedValue="sample"
                />,
                "components": Object {},
                "configs": Object {},
                "filters": Object {},
                "fonts": Object {},
                "plugins": Array [
                  Object {
                    "categories": Array [],
                    "defaultConfigs": Object {},
                    "description": "React Native Paper comes to BlueBase!",
                    "enabled": true,
                    "key": "@bluebase/plugin-react-native-paper",
                    "name": "React Native Paper",
                    "value": Object {
                      "assets": Object {
                        "Material Icons": "test-file-stub",
                      },
                      "components": Object {
                        "Avatar": [Function],
                        "Button": [Function],
                        "Card": [Function],
                        "CardActions": [Function],
                        "CardContent": [Function],
                        "CardCover": [Function],
                        "CardHeader": [Function],
                        "Checkbox": [Function],
                        "Dialog": [Function],
                        "DialogActions": [Function],
                        "DialogContent": [Function],
                        "DialogTitle": [Function],
                        "Divider": [Function],
                        "DrawerItem": [Function],
                        "DrawerSection": [Function],
                        "FormControlLabel": [Function],
                        "FormHelperText": [Function],
                        "IconButton": [Function],
                        "List": [Function],
                        "ListAvatar": [Function],
                        "ListIcon": [Function],
                        "ListItem": [Function],
                        "ListSubheader": [Function],
                        "PickerComponent": [Function],
                        "Radio": [Function],
                        "RadioGroup": [Function],
                        "Switch": [Function],
                        "Table": [Function],
                        "TableCell": [Function],
                        "TableHead": [Function],
                        "TablePagination": [Function],
                        "TableRow": [Function],
                        "TableTitle": [Function],
                        "TextInput": [Function],
                      },
                      "filters": Object {
                        "bluebase.boot.end": [Function],
                      },
                      "fonts": Object {},
                      "routes": undefined,
                      "themes": Object {},
                    },
                    "version": "1.0.0",
                  },
                ],
                "themes": Array [],
              },
              "booted": true,
            }
          }
          navigator={
            Object {
              "initialRouteName": "Root",
              "routes": Array [
                Object {
                  "name": "Root",
                  "navigationOptions": Object {
                    "header": null,
                  },
                  "navigator": Object {
                    "initialRouteName": "Home",
                    "routes": Array [
                      Object {
                        "exact": true,
                        "name": "Home",
                        "navigationOptions": Object {
                          "headerLeft": null,
                          "title": "BlueBase",
                        },
                        "path": "",
                        "screen": "HomeScreen",
                      },
                    ],
                    "type": "stack",
                  },
                  "path": "",
                },
              ],
              "type": "switch",
            }
          }
        >
          <ReactNativePaperProvider
            BB={
              BlueBase {
                "Analytics": Analytics {
                  "BB": [Circular],
                },
                "Assets": AssetRegistry {
                  "BB": [Circular],
                  "data": Map {
                    "Logo" => Object {
                      "key": "Logo",
                      "preload": false,
                      "type": "unknown",
                      "value": Object {
                        "uri": "test-file-stub",
                      },
                    },
                    "LogoSquare" => Object {
                      "key": "LogoSquare",
                      "preload": false,
                      "type": "unknown",
                      "value": Object {
                        "uri": "test-file-stub",
                      },
                    },
                    "Material Icons" => Object {
                      "key": "Material Icons",
                      "preload": false,
                      "type": "unknown",
                      "value": Object {
                        "uri": "test-file-stub",
                      },
                    },
                  },
                  "subscriptions": Map {},
                },
                "Components": ComponentRegistry {
                  "BB": [Circular],
                  "data": Map {
                    "BlueBaseContent" => Object {
                      "applyStyles": true,
                      "hocs": Array [
                        [Function],
                      ],
                      "isAsync": false,
                      "key": "BlueBaseContent",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "BlueBaseFilter" => Object {
                      "applyStyles": false,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "BlueBaseFilter",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "BlueBaseImage" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "BlueBaseImage",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "ComponentState" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "ComponentState",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "DataObserver" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "DataObserver",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "DynamicIcon" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "DynamicIcon",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "EmptyState" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "EmptyState",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "ErrorObserver" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "ErrorObserver",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "ErrorState" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "ErrorState",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "FormattedMessage" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "FormattedMessage",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "HomeScreen" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "HomeScreen",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "HoverObserver" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "HoverObserver",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "Icon" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "Icon",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "Link" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "Link",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "LoadingState" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "LoadingState",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "Navigation" => Object {
                      "applyStyles": true,
                      "hocs": Array [
                        [Function],
                      ],
                      "isAsync": false,
                      "key": "Navigation",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "NavigationActions" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "NavigationActions",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "Noop" => Object {
                      "applyStyles": false,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "Noop",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "PluginIcon" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "PluginIcon",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "Redirect" => Object {
                      "applyStyles": false,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "Redirect",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "StatefulComponent" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "StatefulComponent",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "TouchableItem" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "TouchableItem",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "WaitObserver" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "WaitObserver",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "ActivityIndicator" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "ActivityIndicator",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "Button" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "Button",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "FlatList" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "FlatList",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "Image" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "Image",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "ImageBackground" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "ImageBackground",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "Picker" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "Picker",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "SafeAreaView" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "SafeAreaView",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "ScrollView" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "ScrollView",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [MockFunction],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [MockFunction],
                      },
                    },
                    "Slider" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "Slider",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "defaultProps": Object {
                            "disabled": false,
                            "maximumValue": 1,
                            "minimumValue": 0,
                            "step": 0,
                            "value": 0,
                          },
                          "render": [Function],
                        },
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "defaultProps": Object {
                            "disabled": false,
                            "maximumValue": 1,
                            "minimumValue": 0,
                            "step": 0,
                            "value": 0,
                          },
                          "render": [Function],
                        },
                      },
                    },
                    "Switch" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "Switch",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "Text" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "Text",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "TextInput" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "TextInput",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "View" => Object {
                      "applyStyles": false,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "View",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "H1" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "H1",
                      "preload": false,
                      "styles": [Function],
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "H2" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "H2",
                      "preload": false,
                      "styles": [Function],
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "H3" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "H3",
                      "preload": false,
                      "styles": [Function],
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "H4" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "H4",
                      "preload": false,
                      "styles": [Function],
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "H5" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "H5",
                      "preload": false,
                      "styles": [Function],
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "H6" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "H6",
                      "preload": false,
                      "styles": [Function],
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "Subtitle1" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "Subtitle1",
                      "preload": false,
                      "styles": [Function],
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "Subtitle2" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "Subtitle2",
                      "preload": false,
                      "styles": [Function],
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "Body1" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "Body1",
                      "preload": false,
                      "styles": [Function],
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "Body2" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "Body2",
                      "preload": false,
                      "styles": [Function],
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "Caption" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "Caption",
                      "preload": false,
                      "styles": [Function],
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "Overline" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "Overline",
                      "preload": false,
                      "styles": [Function],
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "Avatar" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "Avatar",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "Card" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "Card",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "CardActions" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "CardActions",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "CardContent" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "CardContent",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "CardCover" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "CardCover",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "CardHeader" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "CardHeader",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "Checkbox" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "Checkbox",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "Dialog" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "Dialog",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "DialogActions" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "DialogActions",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "DialogContent" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "DialogContent",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "DialogTitle" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "DialogTitle",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "Divider" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "Divider",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "DrawerItem" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "DrawerItem",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "DrawerSection" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "DrawerSection",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "FormControlLabel" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "FormControlLabel",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "FormHelperText" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "FormHelperText",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "IconButton" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "IconButton",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "List" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "List",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "ListAvatar" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "ListAvatar",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "ListIcon" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "ListIcon",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "ListItem" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "ListItem",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "ListSubheader" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "ListSubheader",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "PickerComponent" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "PickerComponent",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "Radio" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "Radio",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "RadioGroup" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "RadioGroup",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "Table" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "Table",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "TableCell" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "TableCell",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "TableHead" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "TableHead",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "TablePagination" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "TablePagination",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "TableRow" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "TableRow",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "TableTitle" => Object {
                      "applyStyles": true,
                      "hocs": Array [],
                      "isAsync": false,
                      "key": "TableTitle",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                  },
                  "subscriptions": Map {},
                },
                "Configs": ConfigRegistry {
                  "BB": [Circular],
                  "data": Map {
                    "debug" => Object {
                      "key": "debug",
                      "value": true,
                    },
                    "development" => Object {
                      "key": "development",
                      "value": true,
                    },
                    "direction" => Object {
                      "key": "direction",
                      "value": "auto",
                    },
                    "locale" => Object {
                      "key": "locale",
                      "value": "en",
                    },
                    "locale.options" => Object {
                      "key": "locale.options",
                      "value": Object {
                        "en": "English",
                        "ur": "اُردُو",
                      },
                    },
                    "pluginRoutePathPrefix" => Object {
                      "key": "pluginRoutePathPrefix",
                      "value": "p",
                    },
                    "statusBarStyle" => Object {
                      "key": "statusBarStyle",
                      "value": "light-content",
                    },
                    "theme.mode" => Object {
                      "key": "theme.mode",
                      "value": "light",
                    },
                    "theme.name" => Object {
                      "key": "theme.name",
                      "value": "bluebase-light",
                    },
                    "theme.overrides" => Object {
                      "key": "theme.overrides",
                      "value": Object {},
                    },
                    "title" => Object {
                      "key": "title",
                      "value": "BlueBase",
                    },
                  },
                  "subscriptions": Map {
                    "theme.name" => Map {
                      "_2nwpv2o" => [Function],
                    },
                    "locale" => Map {
                      "_5sq20s5" => [Function],
                    },
                    "direction" => Map {
                      "_8q9vkhk" => [Function],
                    },
                  },
                },
                "Filters": FilterRegistry {
                  "BB": [Circular],
                  "data": Map {
                    "bluebase-assets-register-internal-default" => Object {
                      "event": "bluebase.assets.register.internal",
                      "key": "bluebase-assets-register-internal-default",
                      "preload": false,
                      "priority": 5,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "bluebase-assets-register-default" => Object {
                      "event": "bluebase.assets.register",
                      "key": "bluebase-assets-register-default",
                      "preload": false,
                      "priority": 5,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "bluebase-boot-default" => Object {
                      "event": "bluebase.boot",
                      "key": "bluebase-boot-default",
                      "preload": false,
                      "priority": 5,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "system-boot-start-default" => Object {
                      "event": "bluebase.boot.start",
                      "key": "system-boot-start-default",
                      "preload": false,
                      "priority": 5,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "system-preload-default" => Object {
                      "event": "bluebase.preload",
                      "key": "system-preload-default",
                      "preload": false,
                      "priority": 5,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "bluebase-components-register-internal-default" => Object {
                      "event": "bluebase.components.register.internal",
                      "key": "bluebase-components-register-internal-default",
                      "preload": false,
                      "priority": 5,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "bluebase-components-register-default" => Object {
                      "event": "bluebase.components.register",
                      "key": "bluebase-components-register-default",
                      "preload": false,
                      "priority": 5,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "bluebase-configs-register-default" => Object {
                      "event": "bluebase.configs.register",
                      "key": "bluebase-configs-register-default",
                      "preload": false,
                      "priority": 5,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "bluebase-fonts-register-default" => Object {
                      "event": "bluebase.fonts.register",
                      "key": "bluebase-fonts-register-default",
                      "preload": false,
                      "priority": 5,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "bluebase-plugins-register-default" => Object {
                      "event": "bluebase.plugins.register",
                      "key": "bluebase-plugins-register-default",
                      "preload": false,
                      "priority": 5,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "bluebase-plugins-initialize-all-default" => Object {
                      "event": "bluebase.plugins.initialize.all",
                      "key": "bluebase-plugins-initialize-all-default",
                      "preload": false,
                      "priority": 5,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "bluebase-plugins-initialize-default" => Object {
                      "event": "bluebase.plugins.initialize",
                      "key": "bluebase-plugins-initialize-default",
                      "preload": false,
                      "priority": 5,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "bluebase-navigator-root-internal-default" => Object {
                      "event": "bluebase.navigator.root",
                      "key": "bluebase-navigator-root-internal-default",
                      "preload": false,
                      "priority": 5,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "bluebase-navigator-main-internal-default" => Object {
                      "event": "bluebase.navigator.main",
                      "key": "bluebase-navigator-main-internal-default",
                      "preload": false,
                      "priority": 5,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "bluebase-themes-register-internal-default" => Object {
                      "event": "bluebase.themes.register",
                      "key": "bluebase-themes-register-internal-default",
                      "preload": false,
                      "priority": 5,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                    "_1bi42j5" => Object {
                      "event": "bluebase.boot.end",
                      "key": "_1bi42j5",
                      "preload": false,
                      "priority": 10,
                      "value": Promise {
                        "_40": 0,
                        "_55": [Function],
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": [Function],
                      },
                    },
                  },
                  "subscriptions": Map {},
                },
                "Fonts": FontRegistry {
                  "BB": [Circular],
                  "data": Map {},
                  "subscriptions": Map {},
                },
                "Logger": Logger {
                  "BB": [Circular],
                },
                "Plugins": PluginRegistry {
                  "BB": [Circular],
                  "data": Map {
                    "@bluebase/plugin-react-native-paper" => Object {
                      "categories": Array [],
                      "defaultConfigs": Object {},
                      "description": "React Native Paper comes to BlueBase!",
                      "enabled": true,
                      "key": "@bluebase/plugin-react-native-paper",
                      "name": "React Native Paper",
                      "path": undefined,
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": Object {
                          "assets": Object {
                            "Material Icons": "test-file-stub",
                          },
                          "components": Object {
                            "Avatar": [Function],
                            "Button": [Function],
                            "Card": [Function],
                            "CardActions": [Function],
                            "CardContent": [Function],
                            "CardCover": [Function],
                            "CardHeader": [Function],
                            "Checkbox": [Function],
                            "Dialog": [Function],
                            "DialogActions": [Function],
                            "DialogContent": [Function],
                            "DialogTitle": [Function],
                            "Divider": [Function],
                            "DrawerItem": [Function],
                            "DrawerSection": [Function],
                            "FormControlLabel": [Function],
                            "FormHelperText": [Function],
                            "IconButton": [Function],
                            "List": [Function],
                            "ListAvatar": [Function],
                            "ListIcon": [Function],
                            "ListItem": [Function],
                            "ListSubheader": [Function],
                            "PickerComponent": [Function],
                            "Radio": [Function],
                            "RadioGroup": [Function],
                            "Switch": [Function],
                            "Table": [Function],
                            "TableCell": [Function],
                            "TableHead": [Function],
                            "TablePagination": [Function],
                            "TableRow": [Function],
                            "TableTitle": [Function],
                            "TextInput": [Function],
                          },
                          "filters": Object {
                            "bluebase.boot.end": [Function],
                          },
                          "fonts": Object {},
                          "routes": undefined,
                          "themes": Object {},
                        },
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": Object {
                          "assets": Object {
                            "Material Icons": "test-file-stub",
                          },
                          "components": Object {
                            "Avatar": [Function],
                            "Button": [Function],
                            "Card": [Function],
                            "CardActions": [Function],
                            "CardContent": [Function],
                            "CardCover": [Function],
                            "CardHeader": [Function],
                            "Checkbox": [Function],
                            "Dialog": [Function],
                            "DialogActions": [Function],
                            "DialogContent": [Function],
                            "DialogTitle": [Function],
                            "Divider": [Function],
                            "DrawerItem": [Function],
                            "DrawerSection": [Function],
                            "FormControlLabel": [Function],
                            "FormHelperText": [Function],
                            "IconButton": [Function],
                            "List": [Function],
                            "ListAvatar": [Function],
                            "ListIcon": [Function],
                            "ListItem": [Function],
                            "ListSubheader": [Function],
                            "PickerComponent": [Function],
                            "Radio": [Function],
                            "RadioGroup": [Function],
                            "Switch": [Function],
                            "Table": [Function],
                            "TableCell": [Function],
                            "TableHead": [Function],
                            "TablePagination": [Function],
                            "TableRow": [Function],
                            "TableTitle": [Function],
                            "TextInput": [Function],
                          },
                          "filters": Object {
                            "bluebase.boot.end": [Function],
                          },
                          "fonts": Object {},
                          "routes": undefined,
                          "themes": Object {},
                        },
                      },
                      "version": "1.0.0",
                    },
                  },
                  "subscriptions": Map {},
                },
                "Themes": ThemeRegistry {
                  "BB": [Circular],
                  "data": Map {
                    "bluebase-light" => Object {
                      "alternate": "bluebase-dark",
                      "key": "bluebase-light",
                      "mode": "light",
                      "name": "BlueBase Light",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": Object {
                          "components": Object {},
                          "elevation": [Function],
                          "palette": Object {
                            "action": Object {
                              "active": "rgba(0, 0, 0, 0.54)",
                              "disabled": "rgba(0, 0, 0, 0.26)",
                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                              "hover": "rgba(0, 0, 0, 0.08)",
                              "hoverOpacity": 0.08,
                              "selected": "rgba(0, 0, 0, 0.14)",
                            },
                            "background": Object {
                              "card": "#ffffff",
                              "dark": "#eeeeee",
                              "default": "#f5f5f5",
                              "light": "#fafafa",
                            },
                            "divider": "rgba(0, 0, 0, 0.12)",
                            "error": Object {
                              "contrastText": "#fff",
                              "dark": "#d32f2f",
                              "light": "#e57373",
                              "main": "#f44336",
                            },
                            "primary": Object {
                              "contrastText": "#fff",
                              "dark": "#303f9f",
                              "light": "#7986cb",
                              "main": "#3f51b5",
                            },
                            "secondary": Object {
                              "contrastText": "#fff",
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "success": Object {
                              "contrastText": "#fff",
                              "dark": "#388e3c",
                              "light": "#81c784",
                              "main": "#4caf50",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "hint": "rgba(0, 0, 0, 0.38)",
                              "icon": "rgba(0, 0, 0, 0.38)",
                              "primary": "rgba(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                            "warning": Object {
                              "contrastText": "#fff",
                              "dark": "#ffa000",
                              "light": "#ffd54f",
                              "main": "#ffc107",
                            },
                          },
                          "shape": Object {
                            "borderRadius": 4,
                          },
                          "spacing": Object {
                            "unit": 8,
                          },
                          "typography": Object {
                            "body1": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": undefined,
                              "fontSize": 16,
                              "fontWeight": "400",
                            },
                            "body2": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": undefined,
                              "fontSize": 14,
                              "fontWeight": "400",
                            },
                            "button": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": undefined,
                              "fontSize": 14,
                              "fontWeight": "500",
                              "textTransform": "uppercase",
                            },
                            "caption": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": undefined,
                              "fontSize": 12,
                              "fontWeight": "400",
                            },
                            "h1": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": undefined,
                              "fontSize": 96,
                              "fontWeight": "300",
                            },
                            "h2": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": undefined,
                              "fontSize": 60,
                              "fontWeight": "300",
                            },
                            "h3": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": undefined,
                              "fontSize": 48,
                              "fontWeight": "400",
                            },
                            "h4": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": undefined,
                              "fontSize": 34,
                              "fontWeight": "400",
                            },
                            "h5": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": undefined,
                              "fontSize": 24,
                              "fontWeight": "400",
                            },
                            "h6": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": undefined,
                              "fontSize": 20,
                              "fontWeight": "500",
                            },
                            "overline": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": undefined,
                              "fontSize": 12,
                              "fontWeight": "400",
                              "textTransform": "uppercase",
                            },
                            "subtitle1": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": undefined,
                              "fontSize": 16,
                              "fontWeight": "400",
                            },
                            "subtitle2": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": undefined,
                              "fontSize": 14,
                              "fontWeight": "500",
                            },
                          },
                        },
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": Object {
                          "components": Object {},
                          "elevation": [Function],
                          "palette": Object {
                            "action": Object {
                              "active": "rgba(0, 0, 0, 0.54)",
                              "disabled": "rgba(0, 0, 0, 0.26)",
                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                              "hover": "rgba(0, 0, 0, 0.08)",
                              "hoverOpacity": 0.08,
                              "selected": "rgba(0, 0, 0, 0.14)",
                            },
                            "background": Object {
                              "card": "#ffffff",
                              "dark": "#eeeeee",
                              "default": "#f5f5f5",
                              "light": "#fafafa",
                            },
                            "divider": "rgba(0, 0, 0, 0.12)",
                            "error": Object {
                              "contrastText": "#fff",
                              "dark": "#d32f2f",
                              "light": "#e57373",
                              "main": "#f44336",
                            },
                            "primary": Object {
                              "contrastText": "#fff",
                              "dark": "#303f9f",
                              "light": "#7986cb",
                              "main": "#3f51b5",
                            },
                            "secondary": Object {
                              "contrastText": "#fff",
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "success": Object {
                              "contrastText": "#fff",
                              "dark": "#388e3c",
                              "light": "#81c784",
                              "main": "#4caf50",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "hint": "rgba(0, 0, 0, 0.38)",
                              "icon": "rgba(0, 0, 0, 0.38)",
                              "primary": "rgba(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                            "warning": Object {
                              "contrastText": "#fff",
                              "dark": "#ffa000",
                              "light": "#ffd54f",
                              "main": "#ffc107",
                            },
                          },
                          "shape": Object {
                            "borderRadius": 4,
                          },
                          "spacing": Object {
                            "unit": 8,
                          },
                          "typography": Object {
                            "body1": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": undefined,
                              "fontSize": 16,
                              "fontWeight": "400",
                            },
                            "body2": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": undefined,
                              "fontSize": 14,
                              "fontWeight": "400",
                            },
                            "button": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": undefined,
                              "fontSize": 14,
                              "fontWeight": "500",
                              "textTransform": "uppercase",
                            },
                            "caption": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": undefined,
                              "fontSize": 12,
                              "fontWeight": "400",
                            },
                            "h1": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": undefined,
                              "fontSize": 96,
                              "fontWeight": "300",
                            },
                            "h2": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": undefined,
                              "fontSize": 60,
                              "fontWeight": "300",
                            },
                            "h3": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": undefined,
                              "fontSize": 48,
                              "fontWeight": "400",
                            },
                            "h4": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": undefined,
                              "fontSize": 34,
                              "fontWeight": "400",
                            },
                            "h5": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": undefined,
                              "fontSize": 24,
                              "fontWeight": "400",
                            },
                            "h6": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": undefined,
                              "fontSize": 20,
                              "fontWeight": "500",
                            },
                            "overline": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": undefined,
                              "fontSize": 12,
                              "fontWeight": "400",
                              "textTransform": "uppercase",
                            },
                            "subtitle1": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": undefined,
                              "fontSize": 16,
                              "fontWeight": "400",
                            },
                            "subtitle2": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": undefined,
                              "fontSize": 14,
                              "fontWeight": "500",
                            },
                          },
                        },
                      },
                    },
                    "bluebase-dark" => Object {
                      "alternate": "bluebase-light",
                      "key": "bluebase-dark",
                      "mode": "dark",
                      "name": "BlueBase Dark",
                      "preload": false,
                      "value": Promise {
                        "_40": 0,
                        "_55": Object {
                          "components": Object {},
                          "elevation": [Function],
                          "palette": Object {
                            "action": Object {
                              "active": "#ffffff",
                              "disabled": "rgba(255, 255, 255, 0.3)",
                              "disabledBackground": "rgba(255, 255, 255, 0.12)",
                              "hover": "rgba(255, 255, 255, 0.1)",
                              "hoverOpacity": 0.1,
                              "selected": "rgba(255, 255, 255, 0.2)",
                            },
                            "background": Object {
                              "card": "#424242",
                              "dark": "#202020",
                              "default": "#303030",
                              "light": "#404040",
                            },
                            "divider": "rgba(255, 255, 255, 0.12)",
                            "error": Object {
                              "contrastText": "#fff",
                              "dark": "#d32f2f",
                              "light": "#e57373",
                              "main": "#f44336",
                            },
                            "primary": Object {
                              "contrastText": "#fff",
                              "dark": "#303f9f",
                              "light": "#7986cb",
                              "main": "#3f51b5",
                            },
                            "secondary": Object {
                              "contrastText": "#fff",
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "success": Object {
                              "contrastText": "#fff",
                              "dark": "#388e3c",
                              "light": "#81c784",
                              "main": "#4caf50",
                            },
                            "text": Object {
                              "disabled": "rgba(255, 255, 255, 0.5)",
                              "hint": "rgba(255, 255, 255, 0.5)",
                              "icon": "rgba(255, 255, 255, 0.5)",
                              "primary": "#ffffff",
                              "secondary": "rgba(255, 255, 255, 0.7)",
                            },
                            "warning": Object {
                              "contrastText": "#fff",
                              "dark": "#ffa000",
                              "light": "#ffd54f",
                              "main": "#ffc107",
                            },
                          },
                          "shape": Object {
                            "borderRadius": 4,
                          },
                          "spacing": Object {
                            "unit": 8,
                          },
                          "typography": Object {
                            "body1": Object {
                              "color": "#ffffff",
                              "fontFamily": undefined,
                              "fontSize": 16,
                              "fontWeight": "400",
                            },
                            "body2": Object {
                              "color": "#ffffff",
                              "fontFamily": undefined,
                              "fontSize": 14,
                              "fontWeight": "400",
                            },
                            "button": Object {
                              "color": "#ffffff",
                              "fontFamily": undefined,
                              "fontSize": 14,
                              "fontWeight": "500",
                              "textTransform": "uppercase",
                            },
                            "caption": Object {
                              "color": "#ffffff",
                              "fontFamily": undefined,
                              "fontSize": 12,
                              "fontWeight": "400",
                            },
                            "h1": Object {
                              "color": "#ffffff",
                              "fontFamily": undefined,
                              "fontSize": 96,
                              "fontWeight": "300",
                            },
                            "h2": Object {
                              "color": "#ffffff",
                              "fontFamily": undefined,
                              "fontSize": 60,
                              "fontWeight": "300",
                            },
                            "h3": Object {
                              "color": "#ffffff",
                              "fontFamily": undefined,
                              "fontSize": 48,
                              "fontWeight": "400",
                            },
                            "h4": Object {
                              "color": "#ffffff",
                              "fontFamily": undefined,
                              "fontSize": 34,
                              "fontWeight": "400",
                            },
                            "h5": Object {
                              "color": "#ffffff",
                              "fontFamily": undefined,
                              "fontSize": 24,
                              "fontWeight": "400",
                            },
                            "h6": Object {
                              "color": "#ffffff",
                              "fontFamily": undefined,
                              "fontSize": 20,
                              "fontWeight": "500",
                            },
                            "overline": Object {
                              "color": "#ffffff",
                              "fontFamily": undefined,
                              "fontSize": 12,
                              "fontWeight": "400",
                              "textTransform": "uppercase",
                            },
                            "subtitle1": Object {
                              "color": "#ffffff",
                              "fontFamily": undefined,
                              "fontSize": 16,
                              "fontWeight": "400",
                            },
                            "subtitle2": Object {
                              "color": "#ffffff",
                              "fontFamily": undefined,
                              "fontSize": 14,
                              "fontWeight": "500",
                            },
                          },
                        },
                        "_65": 1,
                        "_72": null,
                        "isAsync": false,
                        "loaded": true,
                        "module": Object {
                          "components": Object {},
                          "elevation": [Function],
                          "palette": Object {
                            "action": Object {
                              "active": "#ffffff",
                              "disabled": "rgba(255, 255, 255, 0.3)",
                              "disabledBackground": "rgba(255, 255, 255, 0.12)",
                              "hover": "rgba(255, 255, 255, 0.1)",
                              "hoverOpacity": 0.1,
                              "selected": "rgba(255, 255, 255, 0.2)",
                            },
                            "background": Object {
                              "card": "#424242",
                              "dark": "#202020",
                              "default": "#303030",
                              "light": "#404040",
                            },
                            "divider": "rgba(255, 255, 255, 0.12)",
                            "error": Object {
                              "contrastText": "#fff",
                              "dark": "#d32f2f",
                              "light": "#e57373",
                              "main": "#f44336",
                            },
                            "primary": Object {
                              "contrastText": "#fff",
                              "dark": "#303f9f",
                              "light": "#7986cb",
                              "main": "#3f51b5",
                            },
                            "secondary": Object {
                              "contrastText": "#fff",
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "success": Object {
                              "contrastText": "#fff",
                              "dark": "#388e3c",
                              "light": "#81c784",
                              "main": "#4caf50",
                            },
                            "text": Object {
                              "disabled": "rgba(255, 255, 255, 0.5)",
                              "hint": "rgba(255, 255, 255, 0.5)",
                              "icon": "rgba(255, 255, 255, 0.5)",
                              "primary": "#ffffff",
                              "secondary": "rgba(255, 255, 255, 0.7)",
                            },
                            "warning": Object {
                              "contrastText": "#fff",
                              "dark": "#ffa000",
                              "light": "#ffd54f",
                              "main": "#ffc107",
                            },
                          },
                          "shape": Object {
                            "borderRadius": 4,
                          },
                          "spacing": Object {
                            "unit": 8,
                          },
                          "typography": Object {
                            "body1": Object {
                              "color": "#ffffff",
                              "fontFamily": undefined,
                              "fontSize": 16,
                              "fontWeight": "400",
                            },
                            "body2": Object {
                              "color": "#ffffff",
                              "fontFamily": undefined,
                              "fontSize": 14,
                              "fontWeight": "400",
                            },
                            "button": Object {
                              "color": "#ffffff",
                              "fontFamily": undefined,
                              "fontSize": 14,
                              "fontWeight": "500",
                              "textTransform": "uppercase",
                            },
                            "caption": Object {
                              "color": "#ffffff",
                              "fontFamily": undefined,
                              "fontSize": 12,
                              "fontWeight": "400",
                            },
                            "h1": Object {
                              "color": "#ffffff",
                              "fontFamily": undefined,
                              "fontSize": 96,
                              "fontWeight": "300",
                            },
                            "h2": Object {
                              "color": "#ffffff",
                              "fontFamily": undefined,
                              "fontSize": 60,
                              "fontWeight": "300",
                            },
                            "h3": Object {
                              "color": "#ffffff",
                              "fontFamily": undefined,
                              "fontSize": 48,
                              "fontWeight": "400",
                            },
                            "h4": Object {
                              "color": "#ffffff",
                              "fontFamily": undefined,
                              "fontSize": 34,
                              "fontWeight": "400",
                            },
                            "h5": Object {
                              "color": "#ffffff",
                              "fontFamily": undefined,
                              "fontSize": 24,
                              "fontWeight": "400",
                            },
                            "h6": Object {
                              "color": "#ffffff",
                              "fontFamily": undefined,
                              "fontSize": 20,
                              "fontWeight": "500",
                            },
                            "overline": Object {
                              "color": "#ffffff",
                              "fontFamily": undefined,
                              "fontSize": 12,
                              "fontWeight": "400",
                              "textTransform": "uppercase",
                            },
                            "subtitle1": Object {
                              "color": "#ffffff",
                              "fontFamily": undefined,
                              "fontSize": 16,
                              "fontWeight": "400",
                            },
                            "subtitle2": Object {
                              "color": "#ffffff",
                              "fontFamily": undefined,
                              "fontSize": 14,
                              "fontWeight": "500",
                            },
                          },
                        },
                      },
                    },
                  },
                  "subscriptions": Map {},
                },
                "bootOptions": Object {
                  "assets": Object {},
                  "children": <PickerComponent
                    items={
                      Array [
                        Object {
                          "label": "SanPyaeLin",
                          "value": "SanPyaeLin",
                        },
                        Object {
                          "label": "Jhon",
                          "value": "Jhon",
                        },
                        Object {
                          "label": "Marry",
                          "value": "Marry",
                        },
                      ]
                    }
                    label="enter label"
                    onValueChange={[Function]}
                    selectedValue="sample"
                  />,
                  "components": Object {},
                  "configs": Object {},
                  "filters": Object {},
                  "fonts": Object {},
                  "plugins": Array [
                    Object {
                      "categories": Array [],
                      "defaultConfigs": Object {},
                      "description": "React Native Paper comes to BlueBase!",
                      "enabled": true,
                      "key": "@bluebase/plugin-react-native-paper",
                      "name": "React Native Paper",
                      "value": Object {
                        "assets": Object {
                          "Material Icons": "test-file-stub",
                        },
                        "components": Object {
                          "Avatar": [Function],
                          "Button": [Function],
                          "Card": [Function],
                          "CardActions": [Function],
                          "CardContent": [Function],
                          "CardCover": [Function],
                          "CardHeader": [Function],
                          "Checkbox": [Function],
                          "Dialog": [Function],
                          "DialogActions": [Function],
                          "DialogContent": [Function],
                          "DialogTitle": [Function],
                          "Divider": [Function],
                          "DrawerItem": [Function],
                          "DrawerSection": [Function],
                          "FormControlLabel": [Function],
                          "FormHelperText": [Function],
                          "IconButton": [Function],
                          "List": [Function],
                          "ListAvatar": [Function],
                          "ListIcon": [Function],
                          "ListItem": [Function],
                          "ListSubheader": [Function],
                          "PickerComponent": [Function],
                          "Radio": [Function],
                          "RadioGroup": [Function],
                          "Switch": [Function],
                          "Table": [Function],
                          "TableCell": [Function],
                          "TableHead": [Function],
                          "TablePagination": [Function],
                          "TableRow": [Function],
                          "TableTitle": [Function],
                          "TextInput": [Function],
                        },
                        "filters": Object {
                          "bluebase.boot.end": [Function],
                        },
                        "fonts": Object {},
                        "routes": undefined,
                        "themes": Object {},
                      },
                      "version": "1.0.0",
                    },
                  ],
                  "themes": Array [],
                },
                "booted": true,
              }
            }
            navigator={
              Object {
                "initialRouteName": "Root",
                "routes": Array [
                  Object {
                    "name": "Root",
                    "navigationOptions": Object {
                      "header": null,
                    },
                    "navigator": Object {
                      "initialRouteName": "Home",
                      "routes": Array [
                        Object {
                          "exact": true,
                          "name": "Home",
                          "navigationOptions": Object {
                            "headerLeft": null,
                            "title": "BlueBase",
                          },
                          "path": "",
                          "screen": "HomeScreen",
                        },
                      ],
                      "type": "stack",
                    },
                    "path": "",
                  },
                ],
                "type": "switch",
              }
            }
          >
            <Provider
              theme={
                Object {
                  "colors": Object {
                    "accent": "#f50057",
                    "backdrop": "rgba(0, 0, 0, 0.5)",
                    "background": "#f5f5f5",
                    "disabled": "rgba(0, 0, 0, 0.38)",
                    "error": "#B00020",
                    "notification": "#f50057",
                    "placeholder": "rgba(0, 0, 0, 0.38)",
                    "primary": "#3f51b5",
                    "surface": "#ffffff",
                    "text": "rgba(0, 0, 0, 0.87)",
                  },
                  "dark": false,
                  "fonts": Object {
                    "light": "HelveticaNeue-Light",
                    "medium": "HelveticaNeue-Medium",
                    "regular": "Helvetica Neue",
                    "thin": "HelveticaNeue-Thin",
                  },
                  "roundness": 4,
                }
              }
            >
              <Portal.Host>
                <View
                  collapsable={false}
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <ThemeProvider
                      theme={
                        Object {
                          "colors": Object {
                            "accent": "#f50057",
                            "backdrop": "rgba(0, 0, 0, 0.5)",
                            "background": "#f5f5f5",
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "error": "#B00020",
                            "notification": "#f50057",
                            "placeholder": "rgba(0, 0, 0, 0.38)",
                            "primary": "#3f51b5",
                            "surface": "#ffffff",
                            "text": "rgba(0, 0, 0, 0.87)",
                          },
                          "dark": false,
                          "fonts": Object {
                            "light": "HelveticaNeue-Light",
                            "medium": "HelveticaNeue-Medium",
                            "regular": "Helvetica Neue",
                            "thin": "HelveticaNeue-Thin",
                          },
                          "roundness": 4,
                        }
                      }
                    >
                      <ThemedComponent
                        BB={
                          BlueBase {
                            "Analytics": Analytics {
                              "BB": [Circular],
                            },
                            "Assets": AssetRegistry {
                              "BB": [Circular],
                              "data": Map {
                                "Logo" => Object {
                                  "key": "Logo",
                                  "preload": false,
                                  "type": "unknown",
                                  "value": Object {
                                    "uri": "test-file-stub",
                                  },
                                },
                                "LogoSquare" => Object {
                                  "key": "LogoSquare",
                                  "preload": false,
                                  "type": "unknown",
                                  "value": Object {
                                    "uri": "test-file-stub",
                                  },
                                },
                                "Material Icons" => Object {
                                  "key": "Material Icons",
                                  "preload": false,
                                  "type": "unknown",
                                  "value": Object {
                                    "uri": "test-file-stub",
                                  },
                                },
                              },
                              "subscriptions": Map {},
                            },
                            "Components": ComponentRegistry {
                              "BB": [Circular],
                              "data": Map {
                                "BlueBaseContent" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [
                                    [Function],
                                  ],
                                  "isAsync": false,
                                  "key": "BlueBaseContent",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "BlueBaseFilter" => Object {
                                  "applyStyles": false,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "BlueBaseFilter",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "BlueBaseImage" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "BlueBaseImage",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "ComponentState" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "ComponentState",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "DataObserver" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "DataObserver",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "DynamicIcon" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "DynamicIcon",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "EmptyState" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "EmptyState",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "ErrorObserver" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "ErrorObserver",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "ErrorState" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "ErrorState",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "FormattedMessage" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "FormattedMessage",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "HomeScreen" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "HomeScreen",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "HoverObserver" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "HoverObserver",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "Icon" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "Icon",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "Link" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "Link",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "LoadingState" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "LoadingState",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "Navigation" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [
                                    [Function],
                                  ],
                                  "isAsync": false,
                                  "key": "Navigation",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "NavigationActions" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "NavigationActions",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "Noop" => Object {
                                  "applyStyles": false,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "Noop",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "PluginIcon" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "PluginIcon",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "Redirect" => Object {
                                  "applyStyles": false,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "Redirect",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "StatefulComponent" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "StatefulComponent",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "TouchableItem" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "TouchableItem",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "WaitObserver" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "WaitObserver",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "ActivityIndicator" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "ActivityIndicator",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "Button" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "Button",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "FlatList" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "FlatList",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "Image" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "Image",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "ImageBackground" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "ImageBackground",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "Picker" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "Picker",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "SafeAreaView" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "SafeAreaView",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "ScrollView" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "ScrollView",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [MockFunction],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [MockFunction],
                                  },
                                },
                                "Slider" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "Slider",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "defaultProps": Object {
                                        "disabled": false,
                                        "maximumValue": 1,
                                        "minimumValue": 0,
                                        "step": 0,
                                        "value": 0,
                                      },
                                      "render": [Function],
                                    },
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "defaultProps": Object {
                                        "disabled": false,
                                        "maximumValue": 1,
                                        "minimumValue": 0,
                                        "step": 0,
                                        "value": 0,
                                      },
                                      "render": [Function],
                                    },
                                  },
                                },
                                "Switch" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "Switch",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "Text" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "Text",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "TextInput" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "TextInput",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "View" => Object {
                                  "applyStyles": false,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "View",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "H1" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "H1",
                                  "preload": false,
                                  "styles": [Function],
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "H2" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "H2",
                                  "preload": false,
                                  "styles": [Function],
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "H3" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "H3",
                                  "preload": false,
                                  "styles": [Function],
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "H4" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "H4",
                                  "preload": false,
                                  "styles": [Function],
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "H5" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "H5",
                                  "preload": false,
                                  "styles": [Function],
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "H6" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "H6",
                                  "preload": false,
                                  "styles": [Function],
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "Subtitle1" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "Subtitle1",
                                  "preload": false,
                                  "styles": [Function],
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "Subtitle2" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "Subtitle2",
                                  "preload": false,
                                  "styles": [Function],
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "Body1" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "Body1",
                                  "preload": false,
                                  "styles": [Function],
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "Body2" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "Body2",
                                  "preload": false,
                                  "styles": [Function],
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "Caption" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "Caption",
                                  "preload": false,
                                  "styles": [Function],
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "Overline" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "Overline",
                                  "preload": false,
                                  "styles": [Function],
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "Avatar" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "Avatar",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "Card" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "Card",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "CardActions" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "CardActions",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "CardContent" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "CardContent",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "CardCover" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "CardCover",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "CardHeader" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "CardHeader",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "Checkbox" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "Checkbox",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "Dialog" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "Dialog",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "DialogActions" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "DialogActions",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "DialogContent" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "DialogContent",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "DialogTitle" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "DialogTitle",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "Divider" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "Divider",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "DrawerItem" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "DrawerItem",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "DrawerSection" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "DrawerSection",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "FormControlLabel" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "FormControlLabel",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "FormHelperText" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "FormHelperText",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "IconButton" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "IconButton",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "List" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "List",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "ListAvatar" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "ListAvatar",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "ListIcon" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "ListIcon",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "ListItem" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "ListItem",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "ListSubheader" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "ListSubheader",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "PickerComponent" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "PickerComponent",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "Radio" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "Radio",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "RadioGroup" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "RadioGroup",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "Table" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "Table",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "TableCell" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "TableCell",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "TableHead" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "TableHead",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "TablePagination" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "TablePagination",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "TableRow" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "TableRow",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "TableTitle" => Object {
                                  "applyStyles": true,
                                  "hocs": Array [],
                                  "isAsync": false,
                                  "key": "TableTitle",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                              },
                              "subscriptions": Map {},
                            },
                            "Configs": ConfigRegistry {
                              "BB": [Circular],
                              "data": Map {
                                "debug" => Object {
                                  "key": "debug",
                                  "value": true,
                                },
                                "development" => Object {
                                  "key": "development",
                                  "value": true,
                                },
                                "direction" => Object {
                                  "key": "direction",
                                  "value": "auto",
                                },
                                "locale" => Object {
                                  "key": "locale",
                                  "value": "en",
                                },
                                "locale.options" => Object {
                                  "key": "locale.options",
                                  "value": Object {
                                    "en": "English",
                                    "ur": "اُردُو",
                                  },
                                },
                                "pluginRoutePathPrefix" => Object {
                                  "key": "pluginRoutePathPrefix",
                                  "value": "p",
                                },
                                "statusBarStyle" => Object {
                                  "key": "statusBarStyle",
                                  "value": "light-content",
                                },
                                "theme.mode" => Object {
                                  "key": "theme.mode",
                                  "value": "light",
                                },
                                "theme.name" => Object {
                                  "key": "theme.name",
                                  "value": "bluebase-light",
                                },
                                "theme.overrides" => Object {
                                  "key": "theme.overrides",
                                  "value": Object {},
                                },
                                "title" => Object {
                                  "key": "title",
                                  "value": "BlueBase",
                                },
                              },
                              "subscriptions": Map {
                                "theme.name" => Map {
                                  "_2nwpv2o" => [Function],
                                },
                                "locale" => Map {
                                  "_5sq20s5" => [Function],
                                },
                                "direction" => Map {
                                  "_8q9vkhk" => [Function],
                                },
                              },
                            },
                            "Filters": FilterRegistry {
                              "BB": [Circular],
                              "data": Map {
                                "bluebase-assets-register-internal-default" => Object {
                                  "event": "bluebase.assets.register.internal",
                                  "key": "bluebase-assets-register-internal-default",
                                  "preload": false,
                                  "priority": 5,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "bluebase-assets-register-default" => Object {
                                  "event": "bluebase.assets.register",
                                  "key": "bluebase-assets-register-default",
                                  "preload": false,
                                  "priority": 5,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "bluebase-boot-default" => Object {
                                  "event": "bluebase.boot",
                                  "key": "bluebase-boot-default",
                                  "preload": false,
                                  "priority": 5,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "system-boot-start-default" => Object {
                                  "event": "bluebase.boot.start",
                                  "key": "system-boot-start-default",
                                  "preload": false,
                                  "priority": 5,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "system-preload-default" => Object {
                                  "event": "bluebase.preload",
                                  "key": "system-preload-default",
                                  "preload": false,
                                  "priority": 5,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "bluebase-components-register-internal-default" => Object {
                                  "event": "bluebase.components.register.internal",
                                  "key": "bluebase-components-register-internal-default",
                                  "preload": false,
                                  "priority": 5,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "bluebase-components-register-default" => Object {
                                  "event": "bluebase.components.register",
                                  "key": "bluebase-components-register-default",
                                  "preload": false,
                                  "priority": 5,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "bluebase-configs-register-default" => Object {
                                  "event": "bluebase.configs.register",
                                  "key": "bluebase-configs-register-default",
                                  "preload": false,
                                  "priority": 5,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "bluebase-fonts-register-default" => Object {
                                  "event": "bluebase.fonts.register",
                                  "key": "bluebase-fonts-register-default",
                                  "preload": false,
                                  "priority": 5,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "bluebase-plugins-register-default" => Object {
                                  "event": "bluebase.plugins.register",
                                  "key": "bluebase-plugins-register-default",
                                  "preload": false,
                                  "priority": 5,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "bluebase-plugins-initialize-all-default" => Object {
                                  "event": "bluebase.plugins.initialize.all",
                                  "key": "bluebase-plugins-initialize-all-default",
                                  "preload": false,
                                  "priority": 5,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "bluebase-plugins-initialize-default" => Object {
                                  "event": "bluebase.plugins.initialize",
                                  "key": "bluebase-plugins-initialize-default",
                                  "preload": false,
                                  "priority": 5,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "bluebase-navigator-root-internal-default" => Object {
                                  "event": "bluebase.navigator.root",
                                  "key": "bluebase-navigator-root-internal-default",
                                  "preload": false,
                                  "priority": 5,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "bluebase-navigator-main-internal-default" => Object {
                                  "event": "bluebase.navigator.main",
                                  "key": "bluebase-navigator-main-internal-default",
                                  "preload": false,
                                  "priority": 5,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "bluebase-themes-register-internal-default" => Object {
                                  "event": "bluebase.themes.register",
                                  "key": "bluebase-themes-register-internal-default",
                                  "preload": false,
                                  "priority": 5,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                                "_1bi42j5" => Object {
                                  "event": "bluebase.boot.end",
                                  "key": "_1bi42j5",
                                  "preload": false,
                                  "priority": 10,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": [Function],
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": [Function],
                                  },
                                },
                              },
                              "subscriptions": Map {},
                            },
                            "Fonts": FontRegistry {
                              "BB": [Circular],
                              "data": Map {},
                              "subscriptions": Map {},
                            },
                            "Logger": Logger {
                              "BB": [Circular],
                            },
                            "Plugins": PluginRegistry {
                              "BB": [Circular],
                              "data": Map {
                                "@bluebase/plugin-react-native-paper" => Object {
                                  "categories": Array [],
                                  "defaultConfigs": Object {},
                                  "description": "React Native Paper comes to BlueBase!",
                                  "enabled": true,
                                  "key": "@bluebase/plugin-react-native-paper",
                                  "name": "React Native Paper",
                                  "path": undefined,
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": Object {
                                      "assets": Object {
                                        "Material Icons": "test-file-stub",
                                      },
                                      "components": Object {
                                        "Avatar": [Function],
                                        "Button": [Function],
                                        "Card": [Function],
                                        "CardActions": [Function],
                                        "CardContent": [Function],
                                        "CardCover": [Function],
                                        "CardHeader": [Function],
                                        "Checkbox": [Function],
                                        "Dialog": [Function],
                                        "DialogActions": [Function],
                                        "DialogContent": [Function],
                                        "DialogTitle": [Function],
                                        "Divider": [Function],
                                        "DrawerItem": [Function],
                                        "DrawerSection": [Function],
                                        "FormControlLabel": [Function],
                                        "FormHelperText": [Function],
                                        "IconButton": [Function],
                                        "List": [Function],
                                        "ListAvatar": [Function],
                                        "ListIcon": [Function],
                                        "ListItem": [Function],
                                        "ListSubheader": [Function],
                                        "PickerComponent": [Function],
                                        "Radio": [Function],
                                        "RadioGroup": [Function],
                                        "Switch": [Function],
                                        "Table": [Function],
                                        "TableCell": [Function],
                                        "TableHead": [Function],
                                        "TablePagination": [Function],
                                        "TableRow": [Function],
                                        "TableTitle": [Function],
                                        "TextInput": [Function],
                                      },
                                      "filters": Object {
                                        "bluebase.boot.end": [Function],
                                      },
                                      "fonts": Object {},
                                      "routes": undefined,
                                      "themes": Object {},
                                    },
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": Object {
                                      "assets": Object {
                                        "Material Icons": "test-file-stub",
                                      },
                                      "components": Object {
                                        "Avatar": [Function],
                                        "Button": [Function],
                                        "Card": [Function],
                                        "CardActions": [Function],
                                        "CardContent": [Function],
                                        "CardCover": [Function],
                                        "CardHeader": [Function],
                                        "Checkbox": [Function],
                                        "Dialog": [Function],
                                        "DialogActions": [Function],
                                        "DialogContent": [Function],
                                        "DialogTitle": [Function],
                                        "Divider": [Function],
                                        "DrawerItem": [Function],
                                        "DrawerSection": [Function],
                                        "FormControlLabel": [Function],
                                        "FormHelperText": [Function],
                                        "IconButton": [Function],
                                        "List": [Function],
                                        "ListAvatar": [Function],
                                        "ListIcon": [Function],
                                        "ListItem": [Function],
                                        "ListSubheader": [Function],
                                        "PickerComponent": [Function],
                                        "Radio": [Function],
                                        "RadioGroup": [Function],
                                        "Switch": [Function],
                                        "Table": [Function],
                                        "TableCell": [Function],
                                        "TableHead": [Function],
                                        "TablePagination": [Function],
                                        "TableRow": [Function],
                                        "TableTitle": [Function],
                                        "TextInput": [Function],
                                      },
                                      "filters": Object {
                                        "bluebase.boot.end": [Function],
                                      },
                                      "fonts": Object {},
                                      "routes": undefined,
                                      "themes": Object {},
                                    },
                                  },
                                  "version": "1.0.0",
                                },
                              },
                              "subscriptions": Map {},
                            },
                            "Themes": ThemeRegistry {
                              "BB": [Circular],
                              "data": Map {
                                "bluebase-light" => Object {
                                  "alternate": "bluebase-dark",
                                  "key": "bluebase-light",
                                  "mode": "light",
                                  "name": "BlueBase Light",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": Object {
                                      "components": Object {},
                                      "elevation": [Function],
                                      "palette": Object {
                                        "action": Object {
                                          "active": "rgba(0, 0, 0, 0.54)",
                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                          "hover": "rgba(0, 0, 0, 0.08)",
                                          "hoverOpacity": 0.08,
                                          "selected": "rgba(0, 0, 0, 0.14)",
                                        },
                                        "background": Object {
                                          "card": "#ffffff",
                                          "dark": "#eeeeee",
                                          "default": "#f5f5f5",
                                          "light": "#fafafa",
                                        },
                                        "divider": "rgba(0, 0, 0, 0.12)",
                                        "error": Object {
                                          "contrastText": "#fff",
                                          "dark": "#d32f2f",
                                          "light": "#e57373",
                                          "main": "#f44336",
                                        },
                                        "primary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#303f9f",
                                          "light": "#7986cb",
                                          "main": "#3f51b5",
                                        },
                                        "secondary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#c51162",
                                          "light": "#ff4081",
                                          "main": "#f50057",
                                        },
                                        "success": Object {
                                          "contrastText": "#fff",
                                          "dark": "#388e3c",
                                          "light": "#81c784",
                                          "main": "#4caf50",
                                        },
                                        "text": Object {
                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                          "hint": "rgba(0, 0, 0, 0.38)",
                                          "icon": "rgba(0, 0, 0, 0.38)",
                                          "primary": "rgba(0, 0, 0, 0.87)",
                                          "secondary": "rgba(0, 0, 0, 0.54)",
                                        },
                                        "warning": Object {
                                          "contrastText": "#fff",
                                          "dark": "#ffa000",
                                          "light": "#ffd54f",
                                          "main": "#ffc107",
                                        },
                                      },
                                      "shape": Object {
                                        "borderRadius": 4,
                                      },
                                      "spacing": Object {
                                        "unit": 8,
                                      },
                                      "typography": Object {
                                        "body1": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": undefined,
                                          "fontSize": 16,
                                          "fontWeight": "400",
                                        },
                                        "body2": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": undefined,
                                          "fontSize": 14,
                                          "fontWeight": "400",
                                        },
                                        "button": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": undefined,
                                          "fontSize": 14,
                                          "fontWeight": "500",
                                          "textTransform": "uppercase",
                                        },
                                        "caption": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": undefined,
                                          "fontSize": 12,
                                          "fontWeight": "400",
                                        },
                                        "h1": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": undefined,
                                          "fontSize": 96,
                                          "fontWeight": "300",
                                        },
                                        "h2": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": undefined,
                                          "fontSize": 60,
                                          "fontWeight": "300",
                                        },
                                        "h3": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": undefined,
                                          "fontSize": 48,
                                          "fontWeight": "400",
                                        },
                                        "h4": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": undefined,
                                          "fontSize": 34,
                                          "fontWeight": "400",
                                        },
                                        "h5": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": undefined,
                                          "fontSize": 24,
                                          "fontWeight": "400",
                                        },
                                        "h6": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": undefined,
                                          "fontSize": 20,
                                          "fontWeight": "500",
                                        },
                                        "overline": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": undefined,
                                          "fontSize": 12,
                                          "fontWeight": "400",
                                          "textTransform": "uppercase",
                                        },
                                        "subtitle1": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": undefined,
                                          "fontSize": 16,
                                          "fontWeight": "400",
                                        },
                                        "subtitle2": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": undefined,
                                          "fontSize": 14,
                                          "fontWeight": "500",
                                        },
                                      },
                                    },
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": Object {
                                      "components": Object {},
                                      "elevation": [Function],
                                      "palette": Object {
                                        "action": Object {
                                          "active": "rgba(0, 0, 0, 0.54)",
                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                          "hover": "rgba(0, 0, 0, 0.08)",
                                          "hoverOpacity": 0.08,
                                          "selected": "rgba(0, 0, 0, 0.14)",
                                        },
                                        "background": Object {
                                          "card": "#ffffff",
                                          "dark": "#eeeeee",
                                          "default": "#f5f5f5",
                                          "light": "#fafafa",
                                        },
                                        "divider": "rgba(0, 0, 0, 0.12)",
                                        "error": Object {
                                          "contrastText": "#fff",
                                          "dark": "#d32f2f",
                                          "light": "#e57373",
                                          "main": "#f44336",
                                        },
                                        "primary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#303f9f",
                                          "light": "#7986cb",
                                          "main": "#3f51b5",
                                        },
                                        "secondary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#c51162",
                                          "light": "#ff4081",
                                          "main": "#f50057",
                                        },
                                        "success": Object {
                                          "contrastText": "#fff",
                                          "dark": "#388e3c",
                                          "light": "#81c784",
                                          "main": "#4caf50",
                                        },
                                        "text": Object {
                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                          "hint": "rgba(0, 0, 0, 0.38)",
                                          "icon": "rgba(0, 0, 0, 0.38)",
                                          "primary": "rgba(0, 0, 0, 0.87)",
                                          "secondary": "rgba(0, 0, 0, 0.54)",
                                        },
                                        "warning": Object {
                                          "contrastText": "#fff",
                                          "dark": "#ffa000",
                                          "light": "#ffd54f",
                                          "main": "#ffc107",
                                        },
                                      },
                                      "shape": Object {
                                        "borderRadius": 4,
                                      },
                                      "spacing": Object {
                                        "unit": 8,
                                      },
                                      "typography": Object {
                                        "body1": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": undefined,
                                          "fontSize": 16,
                                          "fontWeight": "400",
                                        },
                                        "body2": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": undefined,
                                          "fontSize": 14,
                                          "fontWeight": "400",
                                        },
                                        "button": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": undefined,
                                          "fontSize": 14,
                                          "fontWeight": "500",
                                          "textTransform": "uppercase",
                                        },
                                        "caption": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": undefined,
                                          "fontSize": 12,
                                          "fontWeight": "400",
                                        },
                                        "h1": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": undefined,
                                          "fontSize": 96,
                                          "fontWeight": "300",
                                        },
                                        "h2": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": undefined,
                                          "fontSize": 60,
                                          "fontWeight": "300",
                                        },
                                        "h3": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": undefined,
                                          "fontSize": 48,
                                          "fontWeight": "400",
                                        },
                                        "h4": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": undefined,
                                          "fontSize": 34,
                                          "fontWeight": "400",
                                        },
                                        "h5": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": undefined,
                                          "fontSize": 24,
                                          "fontWeight": "400",
                                        },
                                        "h6": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": undefined,
                                          "fontSize": 20,
                                          "fontWeight": "500",
                                        },
                                        "overline": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": undefined,
                                          "fontSize": 12,
                                          "fontWeight": "400",
                                          "textTransform": "uppercase",
                                        },
                                        "subtitle1": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": undefined,
                                          "fontSize": 16,
                                          "fontWeight": "400",
                                        },
                                        "subtitle2": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "fontFamily": undefined,
                                          "fontSize": 14,
                                          "fontWeight": "500",
                                        },
                                      },
                                    },
                                  },
                                },
                                "bluebase-dark" => Object {
                                  "alternate": "bluebase-light",
                                  "key": "bluebase-dark",
                                  "mode": "dark",
                                  "name": "BlueBase Dark",
                                  "preload": false,
                                  "value": Promise {
                                    "_40": 0,
                                    "_55": Object {
                                      "components": Object {},
                                      "elevation": [Function],
                                      "palette": Object {
                                        "action": Object {
                                          "active": "#ffffff",
                                          "disabled": "rgba(255, 255, 255, 0.3)",
                                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                                          "hover": "rgba(255, 255, 255, 0.1)",
                                          "hoverOpacity": 0.1,
                                          "selected": "rgba(255, 255, 255, 0.2)",
                                        },
                                        "background": Object {
                                          "card": "#424242",
                                          "dark": "#202020",
                                          "default": "#303030",
                                          "light": "#404040",
                                        },
                                        "divider": "rgba(255, 255, 255, 0.12)",
                                        "error": Object {
                                          "contrastText": "#fff",
                                          "dark": "#d32f2f",
                                          "light": "#e57373",
                                          "main": "#f44336",
                                        },
                                        "primary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#303f9f",
                                          "light": "#7986cb",
                                          "main": "#3f51b5",
                                        },
                                        "secondary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#c51162",
                                          "light": "#ff4081",
                                          "main": "#f50057",
                                        },
                                        "success": Object {
                                          "contrastText": "#fff",
                                          "dark": "#388e3c",
                                          "light": "#81c784",
                                          "main": "#4caf50",
                                        },
                                        "text": Object {
                                          "disabled": "rgba(255, 255, 255, 0.5)",
                                          "hint": "rgba(255, 255, 255, 0.5)",
                                          "icon": "rgba(255, 255, 255, 0.5)",
                                          "primary": "#ffffff",
                                          "secondary": "rgba(255, 255, 255, 0.7)",
                                        },
                                        "warning": Object {
                                          "contrastText": "#fff",
                                          "dark": "#ffa000",
                                          "light": "#ffd54f",
                                          "main": "#ffc107",
                                        },
                                      },
                                      "shape": Object {
                                        "borderRadius": 4,
                                      },
                                      "spacing": Object {
                                        "unit": 8,
                                      },
                                      "typography": Object {
                                        "body1": Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 16,
                                          "fontWeight": "400",
                                        },
                                        "body2": Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 14,
                                          "fontWeight": "400",
                                        },
                                        "button": Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 14,
                                          "fontWeight": "500",
                                          "textTransform": "uppercase",
                                        },
                                        "caption": Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 12,
                                          "fontWeight": "400",
                                        },
                                        "h1": Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 96,
                                          "fontWeight": "300",
                                        },
                                        "h2": Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 60,
                                          "fontWeight": "300",
                                        },
                                        "h3": Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 48,
                                          "fontWeight": "400",
                                        },
                                        "h4": Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 34,
                                          "fontWeight": "400",
                                        },
                                        "h5": Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 24,
                                          "fontWeight": "400",
                                        },
                                        "h6": Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 20,
                                          "fontWeight": "500",
                                        },
                                        "overline": Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 12,
                                          "fontWeight": "400",
                                          "textTransform": "uppercase",
                                        },
                                        "subtitle1": Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 16,
                                          "fontWeight": "400",
                                        },
                                        "subtitle2": Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 14,
                                          "fontWeight": "500",
                                        },
                                      },
                                    },
                                    "_65": 1,
                                    "_72": null,
                                    "isAsync": false,
                                    "loaded": true,
                                    "module": Object {
                                      "components": Object {},
                                      "elevation": [Function],
                                      "palette": Object {
                                        "action": Object {
                                          "active": "#ffffff",
                                          "disabled": "rgba(255, 255, 255, 0.3)",
                                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                                          "hover": "rgba(255, 255, 255, 0.1)",
                                          "hoverOpacity": 0.1,
                                          "selected": "rgba(255, 255, 255, 0.2)",
                                        },
                                        "background": Object {
                                          "card": "#424242",
                                          "dark": "#202020",
                                          "default": "#303030",
                                          "light": "#404040",
                                        },
                                        "divider": "rgba(255, 255, 255, 0.12)",
                                        "error": Object {
                                          "contrastText": "#fff",
                                          "dark": "#d32f2f",
                                          "light": "#e57373",
                                          "main": "#f44336",
                                        },
                                        "primary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#303f9f",
                                          "light": "#7986cb",
                                          "main": "#3f51b5",
                                        },
                                        "secondary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#c51162",
                                          "light": "#ff4081",
                                          "main": "#f50057",
                                        },
                                        "success": Object {
                                          "contrastText": "#fff",
                                          "dark": "#388e3c",
                                          "light": "#81c784",
                                          "main": "#4caf50",
                                        },
                                        "text": Object {
                                          "disabled": "rgba(255, 255, 255, 0.5)",
                                          "hint": "rgba(255, 255, 255, 0.5)",
                                          "icon": "rgba(255, 255, 255, 0.5)",
                                          "primary": "#ffffff",
                                          "secondary": "rgba(255, 255, 255, 0.7)",
                                        },
                                        "warning": Object {
                                          "contrastText": "#fff",
                                          "dark": "#ffa000",
                                          "light": "#ffd54f",
                                          "main": "#ffc107",
                                        },
                                      },
                                      "shape": Object {
                                        "borderRadius": 4,
                                      },
                                      "spacing": Object {
                                        "unit": 8,
                                      },
                                      "typography": Object {
                                        "body1": Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 16,
                                          "fontWeight": "400",
                                        },
                                        "body2": Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 14,
                                          "fontWeight": "400",
                                        },
                                        "button": Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 14,
                                          "fontWeight": "500",
                                          "textTransform": "uppercase",
                                        },
                                        "caption": Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 12,
                                          "fontWeight": "400",
                                        },
                                        "h1": Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 96,
                                          "fontWeight": "300",
                                        },
                                        "h2": Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 60,
                                          "fontWeight": "300",
                                        },
                                        "h3": Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 48,
                                          "fontWeight": "400",
                                        },
                                        "h4": Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 34,
                                          "fontWeight": "400",
                                        },
                                        "h5": Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 24,
                                          "fontWeight": "400",
                                        },
                                        "h6": Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 20,
                                          "fontWeight": "500",
                                        },
                                        "overline": Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 12,
                                          "fontWeight": "400",
                                          "textTransform": "uppercase",
                                        },
                                        "subtitle1": Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 16,
                                          "fontWeight": "400",
                                        },
                                        "subtitle2": Object {
                                          "color": "#ffffff",
                                          "fontFamily": undefined,
                                          "fontSize": 14,
                                          "fontWeight": "500",
                                        },
                                      },
                                    },
                                  },
                                },
                              },
                              "subscriptions": Map {},
                            },
                            "bootOptions": Object {
                              "assets": Object {},
                              "children": <PickerComponent
                                items={
                                  Array [
                                    Object {
                                      "label": "SanPyaeLin",
                                      "value": "SanPyaeLin",
                                    },
                                    Object {
                                      "label": "Jhon",
                                      "value": "Jhon",
                                    },
                                    Object {
                                      "label": "Marry",
                                      "value": "Marry",
                                    },
                                  ]
                                }
                                label="enter label"
                                onValueChange={[Function]}
                                selectedValue="sample"
                              />,
                              "components": Object {},
                              "configs": Object {},
                              "filters": Object {},
                              "fonts": Object {},
                              "plugins": Array [
                                Object {
                                  "categories": Array [],
                                  "defaultConfigs": Object {},
                                  "description": "React Native Paper comes to BlueBase!",
                                  "enabled": true,
                                  "key": "@bluebase/plugin-react-native-paper",
                                  "name": "React Native Paper",
                                  "value": Object {
                                    "assets": Object {
                                      "Material Icons": "test-file-stub",
                                    },
                                    "components": Object {
                                      "Avatar": [Function],
                                      "Button": [Function],
                                      "Card": [Function],
                                      "CardActions": [Function],
                                      "CardContent": [Function],
                                      "CardCover": [Function],
                                      "CardHeader": [Function],
                                      "Checkbox": [Function],
                                      "Dialog": [Function],
                                      "DialogActions": [Function],
                                      "DialogContent": [Function],
                                      "DialogTitle": [Function],
                                      "Divider": [Function],
                                      "DrawerItem": [Function],
                                      "DrawerSection": [Function],
                                      "FormControlLabel": [Function],
                                      "FormHelperText": [Function],
                                      "IconButton": [Function],
                                      "List": [Function],
                                      "ListAvatar": [Function],
                                      "ListIcon": [Function],
                                      "ListItem": [Function],
                                      "ListSubheader": [Function],
                                      "PickerComponent": [Function],
                                      "Radio": [Function],
                                      "RadioGroup": [Function],
                                      "Switch": [Function],
                                      "Table": [Function],
                                      "TableCell": [Function],
                                      "TableHead": [Function],
                                      "TablePagination": [Function],
                                      "TableRow": [Function],
                                      "TableTitle": [Function],
                                      "TextInput": [Function],
                                    },
                                    "filters": Object {
                                      "bluebase.boot.end": [Function],
                                    },
                                    "fonts": Object {},
                                    "routes": undefined,
                                    "themes": Object {},
                                  },
                                  "version": "1.0.0",
                                },
                              ],
                              "themes": Array [],
                            },
                            "booted": true,
                          }
                        }
                        navigator={
                          Object {
                            "initialRouteName": "Root",
                            "routes": Array [
                              Object {
                                "name": "Root",
                                "navigationOptions": Object {
                                  "header": null,
                                },
                                "navigator": Object {
                                  "initialRouteName": "Home",
                                  "routes": Array [
                                    Object {
                                      "exact": true,
                                      "name": "Home",
                                      "navigationOptions": Object {
                                        "headerLeft": null,
                                        "title": "BlueBase",
                                      },
                                      "path": "",
                                      "screen": "HomeScreen",
                                    },
                                  ],
                                  "type": "stack",
                                },
                                "path": "",
                              },
                            ],
                            "type": "switch",
                          }
                        }
                      >
                        <Component
                          BB={
                            BlueBase {
                              "Analytics": Analytics {
                                "BB": [Circular],
                              },
                              "Assets": AssetRegistry {
                                "BB": [Circular],
                                "data": Map {
                                  "Logo" => Object {
                                    "key": "Logo",
                                    "preload": false,
                                    "type": "unknown",
                                    "value": Object {
                                      "uri": "test-file-stub",
                                    },
                                  },
                                  "LogoSquare" => Object {
                                    "key": "LogoSquare",
                                    "preload": false,
                                    "type": "unknown",
                                    "value": Object {
                                      "uri": "test-file-stub",
                                    },
                                  },
                                  "Material Icons" => Object {
                                    "key": "Material Icons",
                                    "preload": false,
                                    "type": "unknown",
                                    "value": Object {
                                      "uri": "test-file-stub",
                                    },
                                  },
                                },
                                "subscriptions": Map {},
                              },
                              "Components": ComponentRegistry {
                                "BB": [Circular],
                                "data": Map {
                                  "BlueBaseContent" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [
                                      [Function],
                                    ],
                                    "isAsync": false,
                                    "key": "BlueBaseContent",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "BlueBaseFilter" => Object {
                                    "applyStyles": false,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "BlueBaseFilter",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "BlueBaseImage" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "BlueBaseImage",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "ComponentState" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "ComponentState",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "DataObserver" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "DataObserver",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "DynamicIcon" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "DynamicIcon",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "EmptyState" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "EmptyState",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "ErrorObserver" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "ErrorObserver",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "ErrorState" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "ErrorState",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "FormattedMessage" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "FormattedMessage",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "HomeScreen" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "HomeScreen",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "HoverObserver" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "HoverObserver",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "Icon" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "Icon",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "Link" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "Link",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "LoadingState" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "LoadingState",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "Navigation" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [
                                      [Function],
                                    ],
                                    "isAsync": false,
                                    "key": "Navigation",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "NavigationActions" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "NavigationActions",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "Noop" => Object {
                                    "applyStyles": false,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "Noop",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "PluginIcon" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "PluginIcon",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "Redirect" => Object {
                                    "applyStyles": false,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "Redirect",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "StatefulComponent" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "StatefulComponent",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "TouchableItem" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "TouchableItem",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "WaitObserver" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "WaitObserver",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "ActivityIndicator" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "ActivityIndicator",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "Button" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "Button",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "FlatList" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "FlatList",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "Image" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "Image",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "ImageBackground" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "ImageBackground",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "Picker" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "Picker",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "SafeAreaView" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "SafeAreaView",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "ScrollView" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "ScrollView",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [MockFunction],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [MockFunction],
                                    },
                                  },
                                  "Slider" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "Slider",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "defaultProps": Object {
                                          "disabled": false,
                                          "maximumValue": 1,
                                          "minimumValue": 0,
                                          "step": 0,
                                          "value": 0,
                                        },
                                        "render": [Function],
                                      },
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "defaultProps": Object {
                                          "disabled": false,
                                          "maximumValue": 1,
                                          "minimumValue": 0,
                                          "step": 0,
                                          "value": 0,
                                        },
                                        "render": [Function],
                                      },
                                    },
                                  },
                                  "Switch" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "Switch",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "Text" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "Text",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "TextInput" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "TextInput",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "View" => Object {
                                    "applyStyles": false,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "View",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "H1" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "H1",
                                    "preload": false,
                                    "styles": [Function],
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "H2" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "H2",
                                    "preload": false,
                                    "styles": [Function],
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "H3" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "H3",
                                    "preload": false,
                                    "styles": [Function],
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "H4" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "H4",
                                    "preload": false,
                                    "styles": [Function],
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "H5" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "H5",
                                    "preload": false,
                                    "styles": [Function],
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "H6" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "H6",
                                    "preload": false,
                                    "styles": [Function],
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "Subtitle1" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "Subtitle1",
                                    "preload": false,
                                    "styles": [Function],
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "Subtitle2" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "Subtitle2",
                                    "preload": false,
                                    "styles": [Function],
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "Body1" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "Body1",
                                    "preload": false,
                                    "styles": [Function],
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "Body2" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "Body2",
                                    "preload": false,
                                    "styles": [Function],
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "Caption" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "Caption",
                                    "preload": false,
                                    "styles": [Function],
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "Overline" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "Overline",
                                    "preload": false,
                                    "styles": [Function],
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "Avatar" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "Avatar",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "Card" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "Card",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "CardActions" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "CardActions",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "CardContent" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "CardContent",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "CardCover" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "CardCover",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "CardHeader" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "CardHeader",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "Checkbox" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "Checkbox",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "Dialog" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "Dialog",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "DialogActions" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "DialogActions",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "DialogContent" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "DialogContent",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "DialogTitle" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "DialogTitle",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "Divider" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "Divider",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "DrawerItem" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "DrawerItem",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "DrawerSection" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "DrawerSection",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "FormControlLabel" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "FormControlLabel",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "FormHelperText" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "FormHelperText",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "IconButton" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "IconButton",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "List" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "List",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "ListAvatar" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "ListAvatar",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "ListIcon" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "ListIcon",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "ListItem" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "ListItem",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "ListSubheader" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "ListSubheader",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "PickerComponent" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "PickerComponent",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "Radio" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "Radio",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "RadioGroup" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "RadioGroup",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "Table" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "Table",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "TableCell" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "TableCell",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "TableHead" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "TableHead",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "TablePagination" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "TablePagination",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "TableRow" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "TableRow",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "TableTitle" => Object {
                                    "applyStyles": true,
                                    "hocs": Array [],
                                    "isAsync": false,
                                    "key": "TableTitle",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                },
                                "subscriptions": Map {},
                              },
                              "Configs": ConfigRegistry {
                                "BB": [Circular],
                                "data": Map {
                                  "debug" => Object {
                                    "key": "debug",
                                    "value": true,
                                  },
                                  "development" => Object {
                                    "key": "development",
                                    "value": true,
                                  },
                                  "direction" => Object {
                                    "key": "direction",
                                    "value": "auto",
                                  },
                                  "locale" => Object {
                                    "key": "locale",
                                    "value": "en",
                                  },
                                  "locale.options" => Object {
                                    "key": "locale.options",
                                    "value": Object {
                                      "en": "English",
                                      "ur": "اُردُو",
                                    },
                                  },
                                  "pluginRoutePathPrefix" => Object {
                                    "key": "pluginRoutePathPrefix",
                                    "value": "p",
                                  },
                                  "statusBarStyle" => Object {
                                    "key": "statusBarStyle",
                                    "value": "light-content",
                                  },
                                  "theme.mode" => Object {
                                    "key": "theme.mode",
                                    "value": "light",
                                  },
                                  "theme.name" => Object {
                                    "key": "theme.name",
                                    "value": "bluebase-light",
                                  },
                                  "theme.overrides" => Object {
                                    "key": "theme.overrides",
                                    "value": Object {},
                                  },
                                  "title" => Object {
                                    "key": "title",
                                    "value": "BlueBase",
                                  },
                                },
                                "subscriptions": Map {
                                  "theme.name" => Map {
                                    "_2nwpv2o" => [Function],
                                  },
                                  "locale" => Map {
                                    "_5sq20s5" => [Function],
                                  },
                                  "direction" => Map {
                                    "_8q9vkhk" => [Function],
                                  },
                                },
                              },
                              "Filters": FilterRegistry {
                                "BB": [Circular],
                                "data": Map {
                                  "bluebase-assets-register-internal-default" => Object {
                                    "event": "bluebase.assets.register.internal",
                                    "key": "bluebase-assets-register-internal-default",
                                    "preload": false,
                                    "priority": 5,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "bluebase-assets-register-default" => Object {
                                    "event": "bluebase.assets.register",
                                    "key": "bluebase-assets-register-default",
                                    "preload": false,
                                    "priority": 5,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "bluebase-boot-default" => Object {
                                    "event": "bluebase.boot",
                                    "key": "bluebase-boot-default",
                                    "preload": false,
                                    "priority": 5,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "system-boot-start-default" => Object {
                                    "event": "bluebase.boot.start",
                                    "key": "system-boot-start-default",
                                    "preload": false,
                                    "priority": 5,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "system-preload-default" => Object {
                                    "event": "bluebase.preload",
                                    "key": "system-preload-default",
                                    "preload": false,
                                    "priority": 5,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "bluebase-components-register-internal-default" => Object {
                                    "event": "bluebase.components.register.internal",
                                    "key": "bluebase-components-register-internal-default",
                                    "preload": false,
                                    "priority": 5,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "bluebase-components-register-default" => Object {
                                    "event": "bluebase.components.register",
                                    "key": "bluebase-components-register-default",
                                    "preload": false,
                                    "priority": 5,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "bluebase-configs-register-default" => Object {
                                    "event": "bluebase.configs.register",
                                    "key": "bluebase-configs-register-default",
                                    "preload": false,
                                    "priority": 5,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "bluebase-fonts-register-default" => Object {
                                    "event": "bluebase.fonts.register",
                                    "key": "bluebase-fonts-register-default",
                                    "preload": false,
                                    "priority": 5,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "bluebase-plugins-register-default" => Object {
                                    "event": "bluebase.plugins.register",
                                    "key": "bluebase-plugins-register-default",
                                    "preload": false,
                                    "priority": 5,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "bluebase-plugins-initialize-all-default" => Object {
                                    "event": "bluebase.plugins.initialize.all",
                                    "key": "bluebase-plugins-initialize-all-default",
                                    "preload": false,
                                    "priority": 5,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "bluebase-plugins-initialize-default" => Object {
                                    "event": "bluebase.plugins.initialize",
                                    "key": "bluebase-plugins-initialize-default",
                                    "preload": false,
                                    "priority": 5,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "bluebase-navigator-root-internal-default" => Object {
                                    "event": "bluebase.navigator.root",
                                    "key": "bluebase-navigator-root-internal-default",
                                    "preload": false,
                                    "priority": 5,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "bluebase-navigator-main-internal-default" => Object {
                                    "event": "bluebase.navigator.main",
                                    "key": "bluebase-navigator-main-internal-default",
                                    "preload": false,
                                    "priority": 5,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "bluebase-themes-register-internal-default" => Object {
                                    "event": "bluebase.themes.register",
                                    "key": "bluebase-themes-register-internal-default",
                                    "preload": false,
                                    "priority": 5,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                  "_1bi42j5" => Object {
                                    "event": "bluebase.boot.end",
                                    "key": "_1bi42j5",
                                    "preload": false,
                                    "priority": 10,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": [Function],
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": [Function],
                                    },
                                  },
                                },
                                "subscriptions": Map {},
                              },
                              "Fonts": FontRegistry {
                                "BB": [Circular],
                                "data": Map {},
                                "subscriptions": Map {},
                              },
                              "Logger": Logger {
                                "BB": [Circular],
                              },
                              "Plugins": PluginRegistry {
                                "BB": [Circular],
                                "data": Map {
                                  "@bluebase/plugin-react-native-paper" => Object {
                                    "categories": Array [],
                                    "defaultConfigs": Object {},
                                    "description": "React Native Paper comes to BlueBase!",
                                    "enabled": true,
                                    "key": "@bluebase/plugin-react-native-paper",
                                    "name": "React Native Paper",
                                    "path": undefined,
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": Object {
                                        "assets": Object {
                                          "Material Icons": "test-file-stub",
                                        },
                                        "components": Object {
                                          "Avatar": [Function],
                                          "Button": [Function],
                                          "Card": [Function],
                                          "CardActions": [Function],
                                          "CardContent": [Function],
                                          "CardCover": [Function],
                                          "CardHeader": [Function],
                                          "Checkbox": [Function],
                                          "Dialog": [Function],
                                          "DialogActions": [Function],
                                          "DialogContent": [Function],
                                          "DialogTitle": [Function],
                                          "Divider": [Function],
                                          "DrawerItem": [Function],
                                          "DrawerSection": [Function],
                                          "FormControlLabel": [Function],
                                          "FormHelperText": [Function],
                                          "IconButton": [Function],
                                          "List": [Function],
                                          "ListAvatar": [Function],
                                          "ListIcon": [Function],
                                          "ListItem": [Function],
                                          "ListSubheader": [Function],
                                          "PickerComponent": [Function],
                                          "Radio": [Function],
                                          "RadioGroup": [Function],
                                          "Switch": [Function],
                                          "Table": [Function],
                                          "TableCell": [Function],
                                          "TableHead": [Function],
                                          "TablePagination": [Function],
                                          "TableRow": [Function],
                                          "TableTitle": [Function],
                                          "TextInput": [Function],
                                        },
                                        "filters": Object {
                                          "bluebase.boot.end": [Function],
                                        },
                                        "fonts": Object {},
                                        "routes": undefined,
                                        "themes": Object {},
                                      },
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": Object {
                                        "assets": Object {
                                          "Material Icons": "test-file-stub",
                                        },
                                        "components": Object {
                                          "Avatar": [Function],
                                          "Button": [Function],
                                          "Card": [Function],
                                          "CardActions": [Function],
                                          "CardContent": [Function],
                                          "CardCover": [Function],
                                          "CardHeader": [Function],
                                          "Checkbox": [Function],
                                          "Dialog": [Function],
                                          "DialogActions": [Function],
                                          "DialogContent": [Function],
                                          "DialogTitle": [Function],
                                          "Divider": [Function],
                                          "DrawerItem": [Function],
                                          "DrawerSection": [Function],
                                          "FormControlLabel": [Function],
                                          "FormHelperText": [Function],
                                          "IconButton": [Function],
                                          "List": [Function],
                                          "ListAvatar": [Function],
                                          "ListIcon": [Function],
                                          "ListItem": [Function],
                                          "ListSubheader": [Function],
                                          "PickerComponent": [Function],
                                          "Radio": [Function],
                                          "RadioGroup": [Function],
                                          "Switch": [Function],
                                          "Table": [Function],
                                          "TableCell": [Function],
                                          "TableHead": [Function],
                                          "TablePagination": [Function],
                                          "TableRow": [Function],
                                          "TableTitle": [Function],
                                          "TextInput": [Function],
                                        },
                                        "filters": Object {
                                          "bluebase.boot.end": [Function],
                                        },
                                        "fonts": Object {},
                                        "routes": undefined,
                                        "themes": Object {},
                                      },
                                    },
                                    "version": "1.0.0",
                                  },
                                },
                                "subscriptions": Map {},
                              },
                              "Themes": ThemeRegistry {
                                "BB": [Circular],
                                "data": Map {
                                  "bluebase-light" => Object {
                                    "alternate": "bluebase-dark",
                                    "key": "bluebase-light",
                                    "mode": "light",
                                    "name": "BlueBase Light",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": Object {
                                        "components": Object {},
                                        "elevation": [Function],
                                        "palette": Object {
                                          "action": Object {
                                            "active": "rgba(0, 0, 0, 0.54)",
                                            "disabled": "rgba(0, 0, 0, 0.26)",
                                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                            "hover": "rgba(0, 0, 0, 0.08)",
                                            "hoverOpacity": 0.08,
                                            "selected": "rgba(0, 0, 0, 0.14)",
                                          },
                                          "background": Object {
                                            "card": "#ffffff",
                                            "dark": "#eeeeee",
                                            "default": "#f5f5f5",
                                            "light": "#fafafa",
                                          },
                                          "divider": "rgba(0, 0, 0, 0.12)",
                                          "error": Object {
                                            "contrastText": "#fff",
                                            "dark": "#d32f2f",
                                            "light": "#e57373",
                                            "main": "#f44336",
                                          },
                                          "primary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#303f9f",
                                            "light": "#7986cb",
                                            "main": "#3f51b5",
                                          },
                                          "secondary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#c51162",
                                            "light": "#ff4081",
                                            "main": "#f50057",
                                          },
                                          "success": Object {
                                            "contrastText": "#fff",
                                            "dark": "#388e3c",
                                            "light": "#81c784",
                                            "main": "#4caf50",
                                          },
                                          "text": Object {
                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                            "hint": "rgba(0, 0, 0, 0.38)",
                                            "icon": "rgba(0, 0, 0, 0.38)",
                                            "primary": "rgba(0, 0, 0, 0.87)",
                                            "secondary": "rgba(0, 0, 0, 0.54)",
                                          },
                                          "warning": Object {
                                            "contrastText": "#fff",
                                            "dark": "#ffa000",
                                            "light": "#ffd54f",
                                            "main": "#ffc107",
                                          },
                                        },
                                        "shape": Object {
                                          "borderRadius": 4,
                                        },
                                        "spacing": Object {
                                          "unit": 8,
                                        },
                                        "typography": Object {
                                          "body1": Object {
                                            "color": "rgba(0, 0, 0, 0.87)",
                                            "fontFamily": undefined,
                                            "fontSize": 16,
                                            "fontWeight": "400",
                                          },
                                          "body2": Object {
                                            "color": "rgba(0, 0, 0, 0.87)",
                                            "fontFamily": undefined,
                                            "fontSize": 14,
                                            "fontWeight": "400",
                                          },
                                          "button": Object {
                                            "color": "rgba(0, 0, 0, 0.87)",
                                            "fontFamily": undefined,
                                            "fontSize": 14,
                                            "fontWeight": "500",
                                            "textTransform": "uppercase",
                                          },
                                          "caption": Object {
                                            "color": "rgba(0, 0, 0, 0.87)",
                                            "fontFamily": undefined,
                                            "fontSize": 12,
                                            "fontWeight": "400",
                                          },
                                          "h1": Object {
                                            "color": "rgba(0, 0, 0, 0.87)",
                                            "fontFamily": undefined,
                                            "fontSize": 96,
                                            "fontWeight": "300",
                                          },
                                          "h2": Object {
                                            "color": "rgba(0, 0, 0, 0.87)",
                                            "fontFamily": undefined,
                                            "fontSize": 60,
                                            "fontWeight": "300",
                                          },
                                          "h3": Object {
                                            "color": "rgba(0, 0, 0, 0.87)",
                                            "fontFamily": undefined,
                                            "fontSize": 48,
                                            "fontWeight": "400",
                                          },
                                          "h4": Object {
                                            "color": "rgba(0, 0, 0, 0.87)",
                                            "fontFamily": undefined,
                                            "fontSize": 34,
                                            "fontWeight": "400",
                                          },
                                          "h5": Object {
                                            "color": "rgba(0, 0, 0, 0.87)",
                                            "fontFamily": undefined,
                                            "fontSize": 24,
                                            "fontWeight": "400",
                                          },
                                          "h6": Object {
                                            "color": "rgba(0, 0, 0, 0.87)",
                                            "fontFamily": undefined,
                                            "fontSize": 20,
                                            "fontWeight": "500",
                                          },
                                          "overline": Object {
                                            "color": "rgba(0, 0, 0, 0.87)",
                                            "fontFamily": undefined,
                                            "fontSize": 12,
                                            "fontWeight": "400",
                                            "textTransform": "uppercase",
                                          },
                                          "subtitle1": Object {
                                            "color": "rgba(0, 0, 0, 0.87)",
                                            "fontFamily": undefined,
                                            "fontSize": 16,
                                            "fontWeight": "400",
                                          },
                                          "subtitle2": Object {
                                            "color": "rgba(0, 0, 0, 0.87)",
                                            "fontFamily": undefined,
                                            "fontSize": 14,
                                            "fontWeight": "500",
                                          },
                                        },
                                      },
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": Object {
                                        "components": Object {},
                                        "elevation": [Function],
                                        "palette": Object {
                                          "action": Object {
                                            "active": "rgba(0, 0, 0, 0.54)",
                                            "disabled": "rgba(0, 0, 0, 0.26)",
                                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                            "hover": "rgba(0, 0, 0, 0.08)",
                                            "hoverOpacity": 0.08,
                                            "selected": "rgba(0, 0, 0, 0.14)",
                                          },
                                          "background": Object {
                                            "card": "#ffffff",
                                            "dark": "#eeeeee",
                                            "default": "#f5f5f5",
                                            "light": "#fafafa",
                                          },
                                          "divider": "rgba(0, 0, 0, 0.12)",
                                          "error": Object {
                                            "contrastText": "#fff",
                                            "dark": "#d32f2f",
                                            "light": "#e57373",
                                            "main": "#f44336",
                                          },
                                          "primary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#303f9f",
                                            "light": "#7986cb",
                                            "main": "#3f51b5",
                                          },
                                          "secondary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#c51162",
                                            "light": "#ff4081",
                                            "main": "#f50057",
                                          },
                                          "success": Object {
                                            "contrastText": "#fff",
                                            "dark": "#388e3c",
                                            "light": "#81c784",
                                            "main": "#4caf50",
                                          },
                                          "text": Object {
                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                            "hint": "rgba(0, 0, 0, 0.38)",
                                            "icon": "rgba(0, 0, 0, 0.38)",
                                            "primary": "rgba(0, 0, 0, 0.87)",
                                            "secondary": "rgba(0, 0, 0, 0.54)",
                                          },
                                          "warning": Object {
                                            "contrastText": "#fff",
                                            "dark": "#ffa000",
                                            "light": "#ffd54f",
                                            "main": "#ffc107",
                                          },
                                        },
                                        "shape": Object {
                                          "borderRadius": 4,
                                        },
                                        "spacing": Object {
                                          "unit": 8,
                                        },
                                        "typography": Object {
                                          "body1": Object {
                                            "color": "rgba(0, 0, 0, 0.87)",
                                            "fontFamily": undefined,
                                            "fontSize": 16,
                                            "fontWeight": "400",
                                          },
                                          "body2": Object {
                                            "color": "rgba(0, 0, 0, 0.87)",
                                            "fontFamily": undefined,
                                            "fontSize": 14,
                                            "fontWeight": "400",
                                          },
                                          "button": Object {
                                            "color": "rgba(0, 0, 0, 0.87)",
                                            "fontFamily": undefined,
                                            "fontSize": 14,
                                            "fontWeight": "500",
                                            "textTransform": "uppercase",
                                          },
                                          "caption": Object {
                                            "color": "rgba(0, 0, 0, 0.87)",
                                            "fontFamily": undefined,
                                            "fontSize": 12,
                                            "fontWeight": "400",
                                          },
                                          "h1": Object {
                                            "color": "rgba(0, 0, 0, 0.87)",
                                            "fontFamily": undefined,
                                            "fontSize": 96,
                                            "fontWeight": "300",
                                          },
                                          "h2": Object {
                                            "color": "rgba(0, 0, 0, 0.87)",
                                            "fontFamily": undefined,
                                            "fontSize": 60,
                                            "fontWeight": "300",
                                          },
                                          "h3": Object {
                                            "color": "rgba(0, 0, 0, 0.87)",
                                            "fontFamily": undefined,
                                            "fontSize": 48,
                                            "fontWeight": "400",
                                          },
                                          "h4": Object {
                                            "color": "rgba(0, 0, 0, 0.87)",
                                            "fontFamily": undefined,
                                            "fontSize": 34,
                                            "fontWeight": "400",
                                          },
                                          "h5": Object {
                                            "color": "rgba(0, 0, 0, 0.87)",
                                            "fontFamily": undefined,
                                            "fontSize": 24,
                                            "fontWeight": "400",
                                          },
                                          "h6": Object {
                                            "color": "rgba(0, 0, 0, 0.87)",
                                            "fontFamily": undefined,
                                            "fontSize": 20,
                                            "fontWeight": "500",
                                          },
                                          "overline": Object {
                                            "color": "rgba(0, 0, 0, 0.87)",
                                            "fontFamily": undefined,
                                            "fontSize": 12,
                                            "fontWeight": "400",
                                            "textTransform": "uppercase",
                                          },
                                          "subtitle1": Object {
                                            "color": "rgba(0, 0, 0, 0.87)",
                                            "fontFamily": undefined,
                                            "fontSize": 16,
                                            "fontWeight": "400",
                                          },
                                          "subtitle2": Object {
                                            "color": "rgba(0, 0, 0, 0.87)",
                                            "fontFamily": undefined,
                                            "fontSize": 14,
                                            "fontWeight": "500",
                                          },
                                        },
                                      },
                                    },
                                  },
                                  "bluebase-dark" => Object {
                                    "alternate": "bluebase-light",
                                    "key": "bluebase-dark",
                                    "mode": "dark",
                                    "name": "BlueBase Dark",
                                    "preload": false,
                                    "value": Promise {
                                      "_40": 0,
                                      "_55": Object {
                                        "components": Object {},
                                        "elevation": [Function],
                                        "palette": Object {
                                          "action": Object {
                                            "active": "#ffffff",
                                            "disabled": "rgba(255, 255, 255, 0.3)",
                                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                                            "hover": "rgba(255, 255, 255, 0.1)",
                                            "hoverOpacity": 0.1,
                                            "selected": "rgba(255, 255, 255, 0.2)",
                                          },
                                          "background": Object {
                                            "card": "#424242",
                                            "dark": "#202020",
                                            "default": "#303030",
                                            "light": "#404040",
                                          },
                                          "divider": "rgba(255, 255, 255, 0.12)",
                                          "error": Object {
                                            "contrastText": "#fff",
                                            "dark": "#d32f2f",
                                            "light": "#e57373",
                                            "main": "#f44336",
                                          },
                                          "primary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#303f9f",
                                            "light": "#7986cb",
                                            "main": "#3f51b5",
                                          },
                                          "secondary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#c51162",
                                            "light": "#ff4081",
                                            "main": "#f50057",
                                          },
                                          "success": Object {
                                            "contrastText": "#fff",
                                            "dark": "#388e3c",
                                            "light": "#81c784",
                                            "main": "#4caf50",
                                          },
                                          "text": Object {
                                            "disabled": "rgba(255, 255, 255, 0.5)",
                                            "hint": "rgba(255, 255, 255, 0.5)",
                                            "icon": "rgba(255, 255, 255, 0.5)",
                                            "primary": "#ffffff",
                                            "secondary": "rgba(255, 255, 255, 0.7)",
                                          },
                                          "warning": Object {
                                            "contrastText": "#fff",
                                            "dark": "#ffa000",
                                            "light": "#ffd54f",
                                            "main": "#ffc107",
                                          },
                                        },
                                        "shape": Object {
                                          "borderRadius": 4,
                                        },
                                        "spacing": Object {
                                          "unit": 8,
                                        },
                                        "typography": Object {
                                          "body1": Object {
                                            "color": "#ffffff",
                                            "fontFamily": undefined,
                                            "fontSize": 16,
                                            "fontWeight": "400",
                                          },
                                          "body2": Object {
                                            "color": "#ffffff",
                                            "fontFamily": undefined,
                                            "fontSize": 14,
                                            "fontWeight": "400",
                                          },
                                          "button": Object {
                                            "color": "#ffffff",
                                            "fontFamily": undefined,
                                            "fontSize": 14,
                                            "fontWeight": "500",
                                            "textTransform": "uppercase",
                                          },
                                          "caption": Object {
                                            "color": "#ffffff",
                                            "fontFamily": undefined,
                                            "fontSize": 12,
                                            "fontWeight": "400",
                                          },
                                          "h1": Object {
                                            "color": "#ffffff",
                                            "fontFamily": undefined,
                                            "fontSize": 96,
                                            "fontWeight": "300",
                                          },
                                          "h2": Object {
                                            "color": "#ffffff",
                                            "fontFamily": undefined,
                                            "fontSize": 60,
                                            "fontWeight": "300",
                                          },
                                          "h3": Object {
                                            "color": "#ffffff",
                                            "fontFamily": undefined,
                                            "fontSize": 48,
                                            "fontWeight": "400",
                                          },
                                          "h4": Object {
                                            "color": "#ffffff",
                                            "fontFamily": undefined,
                                            "fontSize": 34,
                                            "fontWeight": "400",
                                          },
                                          "h5": Object {
                                            "color": "#ffffff",
                                            "fontFamily": undefined,
                                            "fontSize": 24,
                                            "fontWeight": "400",
                                          },
                                          "h6": Object {
                                            "color": "#ffffff",
                                            "fontFamily": undefined,
                                            "fontSize": 20,
                                            "fontWeight": "500",
                                          },
                                          "overline": Object {
                                            "color": "#ffffff",
                                            "fontFamily": undefined,
                                            "fontSize": 12,
                                            "fontWeight": "400",
                                            "textTransform": "uppercase",
                                          },
                                          "subtitle1": Object {
                                            "color": "#ffffff",
                                            "fontFamily": undefined,
                                            "fontSize": 16,
                                            "fontWeight": "400",
                                          },
                                          "subtitle2": Object {
                                            "color": "#ffffff",
                                            "fontFamily": undefined,
                                            "fontSize": 14,
                                            "fontWeight": "500",
                                          },
                                        },
                                      },
                                      "_65": 1,
                                      "_72": null,
                                      "isAsync": false,
                                      "loaded": true,
                                      "module": Object {
                                        "components": Object {},
                                        "elevation": [Function],
                                        "palette": Object {
                                          "action": Object {
                                            "active": "#ffffff",
                                            "disabled": "rgba(255, 255, 255, 0.3)",
                                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                                            "hover": "rgba(255, 255, 255, 0.1)",
                                            "hoverOpacity": 0.1,
                                            "selected": "rgba(255, 255, 255, 0.2)",
                                          },
                                          "background": Object {
                                            "card": "#424242",
                                            "dark": "#202020",
                                            "default": "#303030",
                                            "light": "#404040",
                                          },
                                          "divider": "rgba(255, 255, 255, 0.12)",
                                          "error": Object {
                                            "contrastText": "#fff",
                                            "dark": "#d32f2f",
                                            "light": "#e57373",
                                            "main": "#f44336",
                                          },
                                          "primary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#303f9f",
                                            "light": "#7986cb",
                                            "main": "#3f51b5",
                                          },
                                          "secondary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#c51162",
                                            "light": "#ff4081",
                                            "main": "#f50057",
                                          },
                                          "success": Object {
                                            "contrastText": "#fff",
                                            "dark": "#388e3c",
                                            "light": "#81c784",
                                            "main": "#4caf50",
                                          },
                                          "text": Object {
                                            "disabled": "rgba(255, 255, 255, 0.5)",
                                            "hint": "rgba(255, 255, 255, 0.5)",
                                            "icon": "rgba(255, 255, 255, 0.5)",
                                            "primary": "#ffffff",
                                            "secondary": "rgba(255, 255, 255, 0.7)",
                                          },
                                          "warning": Object {
                                            "contrastText": "#fff",
                                            "dark": "#ffa000",
                                            "light": "#ffd54f",
                                            "main": "#ffc107",
                                          },
                                        },
                                        "shape": Object {
                                          "borderRadius": 4,
                                        },
                                        "spacing": Object {
                                          "unit": 8,
                                        },
                                        "typography": Object {
                                          "body1": Object {
                                            "color": "#ffffff",
                                            "fontFamily": undefined,
                                            "fontSize": 16,
                                            "fontWeight": "400",
                                          },
                                          "body2": Object {
                                            "color": "#ffffff",
                                            "fontFamily": undefined,
                                            "fontSize": 14,
                                            "fontWeight": "400",
                                          },
                                          "button": Object {
                                            "color": "#ffffff",
                                            "fontFamily": undefined,
                                            "fontSize": 14,
                                            "fontWeight": "500",
                                            "textTransform": "uppercase",
                                          },
                                          "caption": Object {
                                            "color": "#ffffff",
                                            "fontFamily": undefined,
                                            "fontSize": 12,
                                            "fontWeight": "400",
                                          },
                                          "h1": Object {
                                            "color": "#ffffff",
                                            "fontFamily": undefined,
                                            "fontSize": 96,
                                            "fontWeight": "300",
                                          },
                                          "h2": Object {
                                            "color": "#ffffff",
                                            "fontFamily": undefined,
                                            "fontSize": 60,
                                            "fontWeight": "300",
                                          },
                                          "h3": Object {
                                            "color": "#ffffff",
                                            "fontFamily": undefined,
                                            "fontSize": 48,
                                            "fontWeight": "400",
                                          },
                                          "h4": Object {
                                            "color": "#ffffff",
                                            "fontFamily": undefined,
                                            "fontSize": 34,
                                            "fontWeight": "400",
                                          },
                                          "h5": Object {
                                            "color": "#ffffff",
                                            "fontFamily": undefined,
                                            "fontSize": 24,
                                            "fontWeight": "400",
                                          },
                                          "h6": Object {
                                            "color": "#ffffff",
                                            "fontFamily": undefined,
                                            "fontSize": 20,
                                            "fontWeight": "500",
                                          },
                                          "overline": Object {
                                            "color": "#ffffff",
                                            "fontFamily": undefined,
                                            "fontSize": 12,
                                            "fontWeight": "400",
                                            "textTransform": "uppercase",
                                          },
                                          "subtitle1": Object {
                                            "color": "#ffffff",
                                            "fontFamily": undefined,
                                            "fontSize": 16,
                                            "fontWeight": "400",
                                          },
                                          "subtitle2": Object {
                                            "color": "#ffffff",
                                            "fontFamily": undefined,
                                            "fontSize": 14,
                                            "fontWeight": "500",
                                          },
                                        },
                                      },
                                    },
                                  },
                                },
                                "subscriptions": Map {},
                              },
                              "bootOptions": Object {
                                "assets": Object {},
                                "children": <PickerComponent
                                  items={
                                    Array [
                                      Object {
                                        "label": "SanPyaeLin",
                                        "value": "SanPyaeLin",
                                      },
                                      Object {
                                        "label": "Jhon",
                                        "value": "Jhon",
                                      },
                                      Object {
                                        "label": "Marry",
                                        "value": "Marry",
                                      },
                                    ]
                                  }
                                  label="enter label"
                                  onValueChange={[Function]}
                                  selectedValue="sample"
                                />,
                                "components": Object {},
                                "configs": Object {},
                                "filters": Object {},
                                "fonts": Object {},
                                "plugins": Array [
                                  Object {
                                    "categories": Array [],
                                    "defaultConfigs": Object {},
                                    "description": "React Native Paper comes to BlueBase!",
                                    "enabled": true,
                                    "key": "@bluebase/plugin-react-native-paper",
                                    "name": "React Native Paper",
                                    "value": Object {
                                      "assets": Object {
                                        "Material Icons": "test-file-stub",
                                      },
                                      "components": Object {
                                        "Avatar": [Function],
                                        "Button": [Function],
                                        "Card": [Function],
                                        "CardActions": [Function],
                                        "CardContent": [Function],
                                        "CardCover": [Function],
                                        "CardHeader": [Function],
                                        "Checkbox": [Function],
                                        "Dialog": [Function],
                                        "DialogActions": [Function],
                                        "DialogContent": [Function],
                                        "DialogTitle": [Function],
                                        "Divider": [Function],
                                        "DrawerItem": [Function],
                                        "DrawerSection": [Function],
                                        "FormControlLabel": [Function],
                                        "FormHelperText": [Function],
                                        "IconButton": [Function],
                                        "List": [Function],
                                        "ListAvatar": [Function],
                                        "ListIcon": [Function],
                                        "ListItem": [Function],
                                        "ListSubheader": [Function],
                                        "PickerComponent": [Function],
                                        "Radio": [Function],
                                        "RadioGroup": [Function],
                                        "Switch": [Function],
                                        "Table": [Function],
                                        "TableCell": [Function],
                                        "TableHead": [Function],
                                        "TablePagination": [Function],
                                        "TableRow": [Function],
                                        "TableTitle": [Function],
                                        "TextInput": [Function],
                                      },
                                      "filters": Object {
                                        "bluebase.boot.end": [Function],
                                      },
                                      "fonts": Object {},
                                      "routes": undefined,
                                      "themes": Object {},
                                    },
                                    "version": "1.0.0",
                                  },
                                ],
                                "themes": Array [],
                              },
                              "booted": true,
                            }
                          }
                          navigator={
                            Object {
                              "initialRouteName": "Root",
                              "routes": Array [
                                Object {
                                  "name": "Root",
                                  "navigationOptions": Object {
                                    "header": null,
                                  },
                                  "navigator": Object {
                                    "initialRouteName": "Home",
                                    "routes": Array [
                                      Object {
                                        "exact": true,
                                        "name": "Home",
                                        "navigationOptions": Object {
                                          "headerLeft": null,
                                          "title": "BlueBase",
                                        },
                                        "path": "",
                                        "screen": "HomeScreen",
                                      },
                                    ],
                                    "type": "stack",
                                  },
                                  "path": "",
                                },
                              ],
                              "type": "switch",
                            }
                          }
                          styles={
                            Object {
                              "backdrop": Object {
                                "backgroundColor": "#f5f5f5",
                                "flex": 1,
                              },
                            }
                          }
                        >
                          <PickerComponent
                            items={
                              Array [
                                Object {
                                  "label": "SanPyaeLin",
                                  "value": "SanPyaeLin",
                                },
                                Object {
                                  "label": "Jhon",
                                  "value": "Jhon",
                                },
                                Object {
                                  "label": "Marry",
                                  "value": "Marry",
                                },
                              ]
                            }
                            label="enter label"
                            onValueChange={[Function]}
                            selectedValue="sample"
                          >
                            <ThemedComponent
                              items={
                                Array [
                                  Object {
                                    "label": "SanPyaeLin",
                                    "value": "SanPyaeLin",
                                  },
                                  Object {
                                    "label": "Jhon",
                                    "value": "Jhon",
                                  },
                                  Object {
                                    "label": "Marry",
                                    "value": "Marry",
                                  },
                                ]
                              }
                              label="enter label"
                              onValueChange={[Function]}
                              selectedValue="sample"
                            >
                              <PickerComponent
                                items={
                                  Array [
                                    Object {
                                      "label": "SanPyaeLin",
                                      "value": "SanPyaeLin",
                                    },
                                    Object {
                                      "label": "Jhon",
                                      "value": "Jhon",
                                    },
                                    Object {
                                      "label": "Marry",
                                      "value": "Marry",
                                    },
                                  ]
                                }
                                label="enter label"
                                onValueChange={[Function]}
                                selectedValue="sample"
                                styles={
                                  Object {
                                    "container": Object {
                                      "backgroundColor": "#fff",
                                      "borderColor": "#ddd",
                                      "borderTopWidth": 0.5,
                                      "justifyContent": "center",
                                      "minHeight": 40,
                                      "padding": 5,
                                    },
                                    "overlay": Object {
                                      "backgroundColor": "rgba(0,0,0,0.5)",
                                      "flex": 1,
                                      "justifyContent": "flex-end",
                                      "width": null,
                                    },
                                    "picker": Object {
                                      "backgroundColor": "white",
                                      "borderColor": "#aaa",
                                      "borderTopWidth": 0.5,
                                      "padding": 10,
                                    },
                                    "picker2": Object {
                                      "backgroundColor": "white",
                                    },
                                  }
                                }
                              >
                                <View
                                  testID="list-id"
                                >
                                  <View
                                    testID="list-id"
                                  >
                                    <View
                                      testID="list-id"
                                    >
                                      <List>
                                        <ThemedComponent>
                                          <withTheme(List.Section)>
                                            <ThemeProvider
                                              theme={
                                                Object {
                                                  "colors": Object {
                                                    "accent": "#f50057",
                                                    "backdrop": "rgba(0, 0, 0, 0.5)",
                                                    "background": "#f5f5f5",
                                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                                    "error": "#B00020",
                                                    "notification": "#f50057",
                                                    "placeholder": "rgba(0, 0, 0, 0.38)",
                                                    "primary": "#3f51b5",
                                                    "surface": "#ffffff",
                                                    "text": "rgba(0, 0, 0, 0.87)",
                                                  },
                                                  "dark": false,
                                                  "fonts": Object {
                                                    "light": "HelveticaNeue-Light",
                                                    "medium": "HelveticaNeue-Medium",
                                                    "regular": "Helvetica Neue",
                                                    "thin": "HelveticaNeue-Thin",
                                                  },
                                                  "roundness": 4,
                                                }
                                              }
                                            >
                                              <List.Section
                                                theme={
                                                  Object {
                                                    "colors": Object {
                                                      "accent": "#f50057",
                                                      "backdrop": "rgba(0, 0, 0, 0.5)",
                                                      "background": "#f5f5f5",
                                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                                      "error": "#B00020",
                                                      "notification": "#f50057",
                                                      "placeholder": "rgba(0, 0, 0, 0.38)",
                                                      "primary": "#3f51b5",
                                                      "surface": "#ffffff",
                                                      "text": "rgba(0, 0, 0, 0.87)",
                                                    },
                                                    "dark": false,
                                                    "fonts": Object {
                                                      "light": "HelveticaNeue-Light",
                                                      "medium": "HelveticaNeue-Medium",
                                                      "regular": "Helvetica Neue",
                                                      "thin": "HelveticaNeue-Thin",
                                                    },
                                                    "roundness": 4,
                                                  }
                                                }
                                              >
                                                <View
                                                  style={
                                                    Array [
                                                      Object {
                                                        "marginVertical": 8,
                                                      },
                                                      undefined,
                                                    ]
                                                  }
                                                  theme={
                                                    Object {
                                                      "colors": Object {
                                                        "accent": "#f50057",
                                                        "backdrop": "rgba(0, 0, 0, 0.5)",
                                                        "background": "#f5f5f5",
                                                        "disabled": "rgba(0, 0, 0, 0.38)",
                                                        "error": "#B00020",
                                                        "notification": "#f50057",
                                                        "placeholder": "rgba(0, 0, 0, 0.38)",
                                                        "primary": "#3f51b5",
                                                        "surface": "#ffffff",
                                                        "text": "rgba(0, 0, 0, 0.87)",
                                                      },
                                                      "dark": false,
                                                      "fonts": Object {
                                                        "light": "HelveticaNeue-Light",
                                                        "medium": "HelveticaNeue-Medium",
                                                        "regular": "Helvetica Neue",
                                                        "thin": "HelveticaNeue-Thin",
                                                      },
                                                      "roundness": 4,
                                                    }
                                                  }
                                                >
                                                  <View
                                                    style={
                                                      Array [
                                                        Object {
                                                          "marginVertical": 8,
                                                        },
                                                        undefined,
                                                      ]
                                                    }
                                                    theme={
                                                      Object {
                                                        "colors": Object {
                                                          "accent": "#f50057",
                                                          "backdrop": "rgba(0, 0, 0, 0.5)",
                                                          "background": "#f5f5f5",
                                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                                          "error": "#B00020",
                                                          "notification": "#f50057",
                                                          "placeholder": "rgba(0, 0, 0, 0.38)",
                                                          "primary": "#3f51b5",
                                                          "surface": "#ffffff",
                                                          "text": "rgba(0, 0, 0, 0.87)",
                                                        },
                                                        "dark": false,
                                                        "fonts": Object {
                                                          "light": "HelveticaNeue-Light",
                                                          "medium": "HelveticaNeue-Medium",
                                                          "regular": "Helvetica Neue",
                                                          "thin": "HelveticaNeue-Thin",
                                                        },
                                                        "roundness": 4,
                                                      }
                                                    }
                                                  >
                                                    <ListItem
                                                      description={
                                                        <Text>
                                                          
                                                        </Text>
                                                      }
                                                      disabled={false}
                                                      inset={false}
                                                      onPress={[Function]}
                                                      selected={false}
                                                      title="enter label"
                                                    >
                                                      <ThemedComponent
                                                        description={
                                                          <Text>
                                                            
                                                          </Text>
                                                        }
                                                        disabled={false}
                                                        inset={false}
                                                        onPress={[Function]}
                                                        selected={false}
                                                        title="enter label"
                                                      >
                                                        <Component
                                                          description={
                                                            <Text>
                                                              
                                                            </Text>
                                                          }
                                                          disabled={false}
                                                          inset={false}
                                                          onPress={[Function]}
                                                          selected={false}
                                                          title="enter label"
                                                        >
                                                          <withTheme(List.Item)
                                                            description={
                                                              <Text>
                                                                
                                                              </Text>
                                                            }
                                                            disabled={false}
                                                            inset={false}
                                                            left={[Function]}
                                                            onPress={[Function]}
                                                            right={[Function]}
                                                            selected={false}
                                                            title="enter label"
                                                          >
                                                            <ThemeProvider
                                                              theme={
                                                                Object {
                                                                  "colors": Object {
                                                                    "accent": "#f50057",
                                                                    "backdrop": "rgba(0, 0, 0, 0.5)",
                                                                    "background": "#f5f5f5",
                                                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                                                    "error": "#B00020",
                                                                    "notification": "#f50057",
                                                                    "placeholder": "rgba(0, 0, 0, 0.38)",
                                                                    "primary": "#3f51b5",
                                                                    "surface": "#ffffff",
                                                                    "text": "rgba(0, 0, 0, 0.87)",
                                                                  },
                                                                  "dark": false,
                                                                  "fonts": Object {
                                                                    "light": "HelveticaNeue-Light",
                                                                    "medium": "HelveticaNeue-Medium",
                                                                    "regular": "Helvetica Neue",
                                                                    "thin": "HelveticaNeue-Thin",
                                                                  },
                                                                  "roundness": 4,
                                                                }
                                                              }
                                                            >
                                                              <List.Item
                                                                description={
                                                                  <Text>
                                                                    
                                                                  </Text>
                                                                }
                                                                disabled={false}
                                                                inset={false}
                                                                left={[Function]}
                                                                onPress={[Function]}
                                                                right={[Function]}
                                                                selected={false}
                                                                theme={
                                                                  Object {
                                                                    "colors": Object {
                                                                      "accent": "#f50057",
                                                                      "backdrop": "rgba(0, 0, 0, 0.5)",
                                                                      "background": "#f5f5f5",
                                                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                                                      "error": "#B00020",
                                                                      "notification": "#f50057",
                                                                      "placeholder": "rgba(0, 0, 0, 0.38)",
                                                                      "primary": "#3f51b5",
                                                                      "surface": "#ffffff",
                                                                      "text": "rgba(0, 0, 0, 0.87)",
                                                                    },
                                                                    "dark": false,
                                                                    "fonts": Object {
                                                                      "light": "HelveticaNeue-Light",
                                                                      "medium": "HelveticaNeue-Medium",
                                                                      "regular": "Helvetica Neue",
                                                                      "thin": "HelveticaNeue-Thin",
                                                                    },
                                                                    "roundness": 4,
                                                                  }
                                                                }
                                                                title="enter label"
                                                              >
                                                                <withTheme(TouchableRipple)
                                                                  disabled={false}
                                                                  inset={false}
                                                                  onPress={[Function]}
                                                                  selected={false}
                                                                  style={
                                                                    Array [
                                                                      Object {
                                                                        "padding": 8,
                                                                      },
                                                                      undefined,
                                                                    ]
                                                                  }
                                                                >
                                                                  <ThemeProvider
                                                                    theme={
                                                                      Object {
                                                                        "colors": Object {
                                                                          "accent": "#f50057",
                                                                          "backdrop": "rgba(0, 0, 0, 0.5)",
                                                                          "background": "#f5f5f5",
                                                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                                                          "error": "#B00020",
                                                                          "notification": "#f50057",
                                                                          "placeholder": "rgba(0, 0, 0, 0.38)",
                                                                          "primary": "#3f51b5",
                                                                          "surface": "#ffffff",
                                                                          "text": "rgba(0, 0, 0, 0.87)",
                                                                        },
                                                                        "dark": false,
                                                                        "fonts": Object {
                                                                          "light": "HelveticaNeue-Light",
                                                                          "medium": "HelveticaNeue-Medium",
                                                                          "regular": "Helvetica Neue",
                                                                          "thin": "HelveticaNeue-Thin",
                                                                        },
                                                                        "roundness": 4,
                                                                      }
                                                                    }
                                                                  >
                                                                    <TouchableRipple
                                                                      borderless={false}
                                                                      disabled={false}
                                                                      inset={false}
                                                                      onPress={[Function]}
                                                                      selected={false}
                                                                      style={
                                                                        Array [
                                                                          Object {
                                                                            "padding": 8,
                                                                          },
                                                                          undefined,
                                                                        ]
                                                                      }
                                                                      theme={
                                                                        Object {
                                                                          "colors": Object {
                                                                            "accent": "#f50057",
                                                                            "backdrop": "rgba(0, 0, 0, 0.5)",
                                                                            "background": "#f5f5f5",
                                                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                                                            "error": "#B00020",
                                                                            "notification": "#f50057",
                                                                            "placeholder": "rgba(0, 0, 0, 0.38)",
                                                                            "primary": "#3f51b5",
                                                                            "surface": "#ffffff",
                                                                            "text": "rgba(0, 0, 0, 0.87)",
                                                                          },
                                                                          "dark": false,
                                                                          "fonts": Object {
                                                                            "light": "HelveticaNeue-Light",
                                                                            "medium": "HelveticaNeue-Medium",
                                                                            "regular": "Helvetica Neue",
                                                                            "thin": "HelveticaNeue-Thin",
                                                                          },
                                                                          "roundness": 4,
                                                                        }
                                                                      }
                                                                    >
                                                                      <TouchableHighlight
                                                                        activeOpacity={0.85}
                                                                        delayPressOut={100}
                                                                        disabled={false}
                                                                        inset={false}
                                                                        onPress={[Function]}
                                                                        selected={false}
                                                                        style={
                                                                          Array [
                                                                            false,
                                                                            Array [
                                                                              Object {
                                                                                "padding": 8,
                                                                              },
                                                                              undefined,
                                                                            ],
                                                                          ]
                                                                        }
                                                                        underlayColor="rgba(0, 0, 0, 0.1)"
                                                                      >
                                                                        <View
                                                                          accessible={true}
                                                                          isTVSelectable={true}
                                                                          onResponderGrant={[Function]}
                                                                          onResponderMove={[Function]}
                                                                          onResponderRelease={[Function]}
                                                                          onResponderTerminate={[Function]}
                                                                          onResponderTerminationRequest={[Function]}
                                                                          onStartShouldSetResponder={[Function]}
                                                                          style={
                                                                            Array [
                                                                              false,
                                                                              Array [
                                                                                Object {
                                                                                  "padding": 8,
                                                                                },
                                                                                undefined,
                                                                              ],
                                                                            ]
                                                                          }
                                                                        >
                                                                          <View
                                                                            accessible={true}
                                                                            isTVSelectable={true}
                                                                            onResponderGrant={[Function]}
                                                                            onResponderMove={[Function]}
                                                                            onResponderRelease={[Function]}
                                                                            onResponderTerminate={[Function]}
                                                                            onResponderTerminationRequest={[Function]}
                                                                            onStartShouldSetResponder={[Function]}
                                                                            style={
                                                                              Array [
                                                                                false,
                                                                                Array [
                                                                                  Object {
                                                                                    "padding": 8,
                                                                                  },
                                                                                  undefined,
                                                                                ],
                                                                              ]
                                                                            }
                                                                          >
                                                                            <View
                                                                              style={
                                                                                Object {
                                                                                  "flexDirection": "row",
                                                                                }
                                                                              }
                                                                            >
                                                                              <View
                                                                                style={
                                                                                  Object {
                                                                                    "flexDirection": "row",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <View
                                                                                  pointerEvents="none"
                                                                                  style={
                                                                                    Array [
                                                                                      Object {
                                                                                        "margin": 8,
                                                                                      },
                                                                                      Object {
                                                                                        "flex": 1,
                                                                                        "justifyContent": "center",
                                                                                      },
                                                                                    ]
                                                                                  }
                                                                                >
                                                                                  <View
                                                                                    pointerEvents="none"
                                                                                    style={
                                                                                      Array [
                                                                                        Object {
                                                                                          "margin": 8,
                                                                                        },
                                                                                        Object {
                                                                                          "flex": 1,
                                                                                          "justifyContent": "center",
                                                                                        },
                                                                                      ]
                                                                                    }
                                                                                  >
                                                                                    <withTheme(Text)
                                                                                      numberOfLines={1}
                                                                                      style={
                                                                                        Array [
                                                                                          Object {
                                                                                            "fontSize": 16,
                                                                                          },
                                                                                          Object {
                                                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                                                          },
                                                                                          undefined,
                                                                                        ]
                                                                                      }
                                                                                    >
                                                                                      <ThemeProvider
                                                                                        theme={
                                                                                          Object {
                                                                                            "colors": Object {
                                                                                              "accent": "#f50057",
                                                                                              "backdrop": "rgba(0, 0, 0, 0.5)",
                                                                                              "background": "#f5f5f5",
                                                                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                                                                              "error": "#B00020",
                                                                                              "notification": "#f50057",
                                                                                              "placeholder": "rgba(0, 0, 0, 0.38)",
                                                                                              "primary": "#3f51b5",
                                                                                              "surface": "#ffffff",
                                                                                              "text": "rgba(0, 0, 0, 0.87)",
                                                                                            },
                                                                                            "dark": false,
                                                                                            "fonts": Object {
                                                                                              "light": "HelveticaNeue-Light",
                                                                                              "medium": "HelveticaNeue-Medium",
                                                                                              "regular": "Helvetica Neue",
                                                                                              "thin": "HelveticaNeue-Thin",
                                                                                            },
                                                                                            "roundness": 4,
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <Text
                                                                                          numberOfLines={1}
                                                                                          style={
                                                                                            Array [
                                                                                              Object {
                                                                                                "fontSize": 16,
                                                                                              },
                                                                                              Object {
                                                                                                "color": "rgba(0, 0, 0, 0.87)",
                                                                                              },
                                                                                              undefined,
                                                                                            ]
                                                                                          }
                                                                                          theme={
                                                                                            Object {
                                                                                              "colors": Object {
                                                                                                "accent": "#f50057",
                                                                                                "backdrop": "rgba(0, 0, 0, 0.5)",
                                                                                                "background": "#f5f5f5",
                                                                                                "disabled": "rgba(0, 0, 0, 0.38)",
                                                                                                "error": "#B00020",
                                                                                                "notification": "#f50057",
                                                                                                "placeholder": "rgba(0, 0, 0, 0.38)",
                                                                                                "primary": "#3f51b5",
                                                                                                "surface": "#ffffff",
                                                                                                "text": "rgba(0, 0, 0, 0.87)",
                                                                                              },
                                                                                              "dark": false,
                                                                                              "fonts": Object {
                                                                                                "light": "HelveticaNeue-Light",
                                                                                                "medium": "HelveticaNeue-Medium",
                                                                                                "regular": "Helvetica Neue",
                                                                                                "thin": "HelveticaNeue-Thin",
                                                                                              },
                                                                                              "roundness": 4,
                                                                                            }
                                                                                          }
                                                                                        >
                                                                                          <Text
                                                                                            numberOfLines={1}
                                                                                            style={
                                                                                              Array [
                                                                                                Object {
                                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                                  "fontFamily": "Helvetica Neue",
                                                                                                  "textAlign": "left",
                                                                                                  "writingDirection": "ltr",
                                                                                                },
                                                                                                Array [
                                                                                                  Object {
                                                                                                    "fontSize": 16,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "color": "rgba(0, 0, 0, 0.87)",
                                                                                                  },
                                                                                                  undefined,
                                                                                                ],
                                                                                              ]
                                                                                            }
                                                                                          >
                                                                                            <Text
                                                                                              numberOfLines={1}
                                                                                              style={
                                                                                                Array [
                                                                                                  Object {
                                                                                                    "color": "rgba(0, 0, 0, 0.87)",
                                                                                                    "fontFamily": "Helvetica Neue",
                                                                                                    "textAlign": "left",
                                                                                                    "writingDirection": "ltr",
                                                                                                  },
                                                                                                  Array [
                                                                                                    Object {
                                                                                                      "fontSize": 16,
                                                                                                    },
                                                                                                    Object {
                                                                                                      "color": "rgba(0, 0, 0, 0.87)",
                                                                                                    },
                                                                                                    undefined,
                                                                                                  ],
                                                                                                ]
                                                                                              }
                                                                                            >
                                                                                              enter label
                                                                                            </Text>
                                                                                          </Text>
                                                                                        </Text>
                                                                                      </ThemeProvider>
                                                                                    </withTheme(Text)>
                                                                                    <withTheme(Text)
                                                                                      numberOfLines={2}
                                                                                      style={
                                                                                        Array [
                                                                                          Object {
                                                                                            "fontSize": 14,
                                                                                          },
                                                                                          Object {
                                                                                            "color": "rgba(0, 0, 0, 0.54)",
                                                                                          },
                                                                                          undefined,
                                                                                        ]
                                                                                      }
                                                                                    >
                                                                                      <ThemeProvider
                                                                                        theme={
                                                                                          Object {
                                                                                            "colors": Object {
                                                                                              "accent": "#f50057",
                                                                                              "backdrop": "rgba(0, 0, 0, 0.5)",
                                                                                              "background": "#f5f5f5",
                                                                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                                                                              "error": "#B00020",
                                                                                              "notification": "#f50057",
                                                                                              "placeholder": "rgba(0, 0, 0, 0.38)",
                                                                                              "primary": "#3f51b5",
                                                                                              "surface": "#ffffff",
                                                                                              "text": "rgba(0, 0, 0, 0.87)",
                                                                                            },
                                                                                            "dark": false,
                                                                                            "fonts": Object {
                                                                                              "light": "HelveticaNeue-Light",
                                                                                              "medium": "HelveticaNeue-Medium",
                                                                                              "regular": "Helvetica Neue",
                                                                                              "thin": "HelveticaNeue-Thin",
                                                                                            },
                                                                                            "roundness": 4,
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <Text
                                                                                          numberOfLines={2}
                                                                                          style={
                                                                                            Array [
                                                                                              Object {
                                                                                                "fontSize": 14,
                                                                                              },
                                                                                              Object {
                                                                                                "color": "rgba(0, 0, 0, 0.54)",
                                                                                              },
                                                                                              undefined,
                                                                                            ]
                                                                                          }
                                                                                          theme={
                                                                                            Object {
                                                                                              "colors": Object {
                                                                                                "accent": "#f50057",
                                                                                                "backdrop": "rgba(0, 0, 0, 0.5)",
                                                                                                "background": "#f5f5f5",
                                                                                                "disabled": "rgba(0, 0, 0, 0.38)",
                                                                                                "error": "#B00020",
                                                                                                "notification": "#f50057",
                                                                                                "placeholder": "rgba(0, 0, 0, 0.38)",
                                                                                                "primary": "#3f51b5",
                                                                                                "surface": "#ffffff",
                                                                                                "text": "rgba(0, 0, 0, 0.87)",
                                                                                              },
                                                                                              "dark": false,
                                                                                              "fonts": Object {
                                                                                                "light": "HelveticaNeue-Light",
                                                                                                "medium": "HelveticaNeue-Medium",
                                                                                                "regular": "Helvetica Neue",
                                                                                                "thin": "HelveticaNeue-Thin",
                                                                                              },
                                                                                              "roundness": 4,
                                                                                            }
                                                                                          }
                                                                                        >
                                                                                          <Text
                                                                                            numberOfLines={2}
                                                                                            style={
                                                                                              Array [
                                                                                                Object {
                                                                                                  "color": "rgba(0, 0, 0, 0.87)",
                                                                                                  "fontFamily": "Helvetica Neue",
                                                                                                  "textAlign": "left",
                                                                                                  "writingDirection": "ltr",
                                                                                                },
                                                                                                Array [
                                                                                                  Object {
                                                                                                    "fontSize": 14,
                                                                                                  },
                                                                                                  Object {
                                                                                                    "color": "rgba(0, 0, 0, 0.54)",
                                                                                                  },
                                                                                                  undefined,
                                                                                                ],
                                                                                              ]
                                                                                            }
                                                                                          >
                                                                                            <Text
                                                                                              numberOfLines={2}
                                                                                              style={
                                                                                                Array [
                                                                                                  Object {
                                                                                                    "color": "rgba(0, 0, 0, 0.87)",
                                                                                                    "fontFamily": "Helvetica Neue",
                                                                                                    "textAlign": "left",
                                                                                                    "writingDirection": "ltr",
                                                                                                  },
                                                                                                  Array [
                                                                                                    Object {
                                                                                                      "fontSize": 14,
                                                                                                    },
                                                                                                    Object {
                                                                                                      "color": "rgba(0, 0, 0, 0.54)",
                                                                                                    },
                                                                                                    undefined,
                                                                                                  ],
                                                                                                ]
                                                                                              }
                                                                                            >
                                                                                              <Text>
                                                                                                <ThemedComponent>
                                                                                                  <Component
                                                                                                    styles={
                                                                                                      Object {
                                                                                                        "root": Object {
                                                                                                          "color": "rgba(0, 0, 0, 0.87)",
                                                                                                          "fontFamily": undefined,
                                                                                                          "fontSize": 16,
                                                                                                          "fontWeight": "400",
                                                                                                        },
                                                                                                      }
                                                                                                    }
                                                                                                  >
                                                                                                    <Text
                                                                                                      style={
                                                                                                        Array [
                                                                                                          Object {
                                                                                                            "color": "rgba(0, 0, 0, 0.87)",
                                                                                                            "fontFamily": undefined,
                                                                                                            "fontSize": 16,
                                                                                                            "fontWeight": "400",
                                                                                                          },
                                                                                                          undefined,
                                                                                                        ]
                                                                                                      }
                                                                                                    >
                                                                                                      <Text
                                                                                                        style={
                                                                                                          Array [
                                                                                                            Object {
                                                                                                              "color": "rgba(0, 0, 0, 0.87)",
                                                                                                              "fontFamily": undefined,
                                                                                                              "fontSize": 16,
                                                                                                              "fontWeight": "400",
                                                                                                            },
                                                                                                            undefined,
                                                                                                          ]
                                                                                                        }
                                                                                                      />
                                                                                                    </Text>
                                                                                                  </Component>
                                                                                                </ThemedComponent>
                                                                                              </Text>
                                                                                            </Text>
                                                                                          </Text>
                                                                                        </Text>
                                                                                      </ThemeProvider>
                                                                                    </withTheme(Text)>
                                                                                  </View>
                                                                                </View>
                                                                              </View>
                                                                            </View>
                                                                          </View>
                                                                        </View>
                                                                      </TouchableHighlight>
                                                                    </TouchableRipple>
                                                                  </ThemeProvider>
                                                                </withTheme(TouchableRipple)>
                                                              </List.Item>
                                                            </ThemeProvider>
                                                          </withTheme(List.Item)>
                                                        </Component>
                                                      </ThemedComponent>
                                                    </ListItem>
                                                  </View>
                                                </View>
                                              </List.Section>
                                            </ThemeProvider>
                                          </withTheme(List.Section)>
                                        </ThemedComponent>
                                      </List>
                                    </View>
                                  </View>
                                </View>
                                <Component
                                  animationType="fade"
                                  hardwareAccelerated={false}
                                  transparent={true}
                                  visible={false}
                                >
                                  <Modal
                                    animationType="fade"
                                    hardwareAccelerated={false}
                                    transparent={true}
                                    visible={false}
                                  >
                                    <TouchableOpacity
                                      activeOpacity={1}
                                      onPress={[Function]}
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(0,0,0,0.5)",
                                          "flex": 1,
                                          "justifyContent": "flex-end",
                                          "width": null,
                                        }
                                      }
                                    >
                                      <AnimatedComponent
                                        accessible={true}
                                        isTVSelectable={true}
                                        onResponderGrant={[Function]}
                                        onResponderMove={[Function]}
                                        onResponderRelease={[Function]}
                                        onResponderTerminate={[Function]}
                                        onResponderTerminationRequest={[Function]}
                                        onStartShouldSetResponder={[Function]}
                                        style={
                                          Array [
                                            Object {
                                              "backgroundColor": "rgba(0,0,0,0.5)",
                                              "flex": 1,
                                              "justifyContent": "flex-end",
                                              "width": null,
                                            },
                                            Object {
                                              "opacity": 1,
                                            },
                                          ]
                                        }
                                      >
                                        <View
                                          accessible={true}
                                          isTVSelectable={true}
                                          onResponderGrant={[Function]}
                                          onResponderMove={[Function]}
                                          onResponderRelease={[Function]}
                                          onResponderTerminate={[Function]}
                                          onResponderTerminationRequest={[Function]}
                                          onStartShouldSetResponder={[Function]}
                                          style={
                                            Object {
                                              "backgroundColor": "rgba(0,0,0,0.5)",
                                              "flex": 1,
                                              "justifyContent": "flex-end",
                                              "opacity": 1,
                                              "width": null,
                                            }
                                          }
                                        >
                                          <View
                                            accessible={true}
                                            isTVSelectable={true}
                                            onResponderGrant={[Function]}
                                            onResponderMove={[Function]}
                                            onResponderRelease={[Function]}
                                            onResponderTerminate={[Function]}
                                            onResponderTerminationRequest={[Function]}
                                            onStartShouldSetResponder={[Function]}
                                            style={
                                              Object {
                                                "backgroundColor": "rgba(0,0,0,0.5)",
                                                "flex": 1,
                                                "justifyContent": "flex-end",
                                                "opacity": 1,
                                                "width": null,
                                              }
                                            }
                                          >
                                            <View
                                              style={
                                                Object {
                                                  "backgroundColor": "white",
                                                  "borderColor": "#aaa",
                                                  "borderTopWidth": 0.5,
                                                  "padding": 10,
                                                }
                                              }
                                            >
                                              <View
                                                style={
                                                  Object {
                                                    "backgroundColor": "white",
                                                    "borderColor": "#aaa",
                                                    "borderTopWidth": 0.5,
                                                    "padding": 10,
                                                  }
                                                }
                                              >
                                                <View
                                                  style={
                                                    Object {
                                                      "backgroundColor": "white",
                                                      "borderColor": "#aaa",
                                                      "borderTopWidth": 0.5,
                                                      "padding": 10,
                                                    }
                                                  }
                                                >
                                                  <Picker
                                                    onValueChange={[Function]}
                                                    selectedValue=""
                                                  >
                                                    <ThemedComponent
                                                      onValueChange={[Function]}
                                                      selectedValue=""
                                                    >
                                                      <Picker
                                                        mode="dialog"
                                                        onValueChange={[Function]}
                                                        selectedValue=""
                                                      >
                                                        <PickerIOS
                                                          mode="dialog"
                                                          onValueChange={[Function]}
                                                          selectedValue=""
                                                        >
                                                          <View>
                                                            <View>
                                                              <_class
                                                                items={
                                                                  Array [
                                                                    Object {
                                                                      "label": "SanPyaeLin",
                                                                      "textColor": undefined,
                                                                      "value": "SanPyaeLin",
                                                                    },
                                                                    Object {
                                                                      "label": "Jhon",
                                                                      "textColor": undefined,
                                                                      "value": "Jhon",
                                                                    },
                                                                    Object {
                                                                      "label": "Marry",
                                                                      "textColor": undefined,
                                                                      "value": "Marry",
                                                                    },
                                                                  ]
                                                                }
                                                                onChange={[Function]}
                                                                onResponderTerminationRequest={[Function]}
                                                                onStartShouldSetResponder={[Function]}
                                                                selectedIndex={0}
                                                                style={
                                                                  Array [
                                                                    Object {
                                                                      "height": 216,
                                                                    },
                                                                    undefined,
                                                                  ]
                                                                }
                                                              >
                                                                <RCTPicker
                                                                  items={
                                                                    Array [
                                                                      Object {
                                                                        "label": "SanPyaeLin",
                                                                        "textColor": undefined,
                                                                        "value": "SanPyaeLin",
                                                                      },
                                                                      Object {
                                                                        "label": "Jhon",
                                                                        "textColor": undefined,
                                                                        "value": "Jhon",
                                                                      },
                                                                      Object {
                                                                        "label": "Marry",
                                                                        "textColor": undefined,
                                                                        "value": "Marry",
                                                                      },
                                                                    ]
                                                                  }
                                                                  onChange={[Function]}
                                                                  onResponderTerminationRequest={[Function]}
                                                                  onStartShouldSetResponder={[Function]}
                                                                  selectedIndex={0}
                                                                  style={
                                                                    Array [
                                                                      Object {
                                                                        "height": 216,
                                                                      },
                                                                      undefined,
                                                                    ]
                                                                  }
                                                                />
                                                              </_class>
                                                            </View>
                                                          </View>
                                                        </PickerIOS>
                                                      </Picker>
                                                    </ThemedComponent>
                                                  </Picker>
                                                </View>
                                              </View>
                                            </View>
                                          </View>
                                        </View>
                                      </AnimatedComponent>
                                    </TouchableOpacity>
                                  </Modal>
                                </Component>
                              </PickerComponent>
                            </ThemedComponent>
                          </PickerComponent>
                        </Component>
                      </ThemedComponent>
                    </ThemeProvider>
                  </View>
                </View>
                <PortalManager />
              </Portal.Host>
            </Provider>
          </ReactNativePaperProvider>
        </BlueBaseContent>
      </IntlProvider>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;
