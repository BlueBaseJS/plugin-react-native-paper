{"version":3,"sources":["/Users/adnan/Desktop/plugin-react-native-paper/src/components/Checkbox/Checkbox.tsx"],"names":[],"mappings":";;;;;;AAAA,IAAA,oBAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAEA,IAAA,kBAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AAEA,IAAA,kBAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;;AAEa,OAAA,CAAA,QAAA,GAAW,kBAAA,CAAA,eAAA,CAA+B,kBAAA,CAAA,gBAA/B,EAAiD;AAExE,EAAA,gBAAgB,EAAE;AAAA,WAAM,oBAAA,CAAA,QAAA,CAAY,OAAlB;AAAA,GAFsD;AAIxE,EAAA,KAAK,EAAE,qBAA2B;AAAA,QAAxB,MAAwB,QAAxB,KAAwB;AAAA,QAAjB,MAAiB,QAAjB,MAAiB;;AACjC,QAAI,MAAK,KAAK,SAAd,EAAyB;AACxB,aAAO,MAAM,CAAC,OAAP,CAAe,KAAtB;AACA;;AACD,QAAI,MAAK,KAAK,WAAd,EAA2B;AAC1B,aAAO,MAAM,CAAC,SAAP,CAAiB,KAAxB;AACA;;AACD,QAAI,MAAK,KAAK,SAAd,EAAyB;AACxB,aAAO,EAAP;AACA;;AAED,WAAO,MAAP;AACA,GAhBuE;AAkBxE,EAAA,MAAM,EAAE,uBAA8C;AAAA,QAA3C,OAA2C,SAA3C,OAA2C;AAAA,QAAlC,aAAkC,SAAlC,aAAkC;;AACrD,QAAI,aAAa,KAAK,IAAtB,EAA4B;AAC3B,aAAO,eAAP;AACA;;AAED,WAAO,OAAO,KAAK,IAAZ,GAAmB,SAAnB,GAA+B,WAAtC;AACA;AAxBuE,CAAjD,EAyBrB;AACF,EAAA,MAAM,EAAE,CAAC,eAAD,EAAkB,SAAlB,EAA6B,QAA7B,CADN;AAEF,EAAA,IAAI,EAAE;AAFJ,CAzBqB,CAAX;;AA+BZ,OAAA,CAAA,QAAA,CAAiB,aAAjB,GAAiC,UAAC,KAAD;AAAA,SAAmB;AACpD,IAAA,OAAO,EAAE;AAAE,MAAA,KAAK,EAAE,KAAK,CAAC,OAAN,CAAc,OAAd,CAAsB;AAA/B,KAD2C;AAEpD,IAAA,SAAS,EAAE;AAAE,MAAA,KAAK,EAAE,KAAK,CAAC,OAAN,CAAc,SAAd,CAAwB;AAAjC;AAFyC,GAAnB;AAAA,CAAjC","sourcesContent":["import { Checkbox as RNPCheckbox } from 'react-native-paper';\nimport { CheckboxProps } from '@bluebase/components';\nimport { SelectionControl } from '../SelectionControl';\nimport { Theme } from '@bluebase/core';\nimport { componentMapper } from '@bluebase/component-mapper';\n\nexport const Checkbox = componentMapper<CheckboxProps>(SelectionControl, {\n\n\tControlComponent: () => RNPCheckbox.Android,\n\n\tcolor: ({ color, styles }: any) => {\n\t\tif (color === 'primary') {\n\t\t\treturn styles.primary.color;\n\t\t}\n\t\tif (color === 'secondary') {\n\t\t\treturn styles.secondary.color;\n\t\t}\n\t\tif (color === 'default') {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn color;\n\t},\n\n\tstatus: ({ checked, indeterminate }: CheckboxProps) => {\n\t\tif (indeterminate === true) {\n\t\t\treturn 'indeterminate';\n\t\t}\n\n\t\treturn checked === true ? 'checked' : 'unchecked';\n\t}\n}, {\n\tignore: ['indeterminate', 'checked', 'styles'],\n\trest: true,\n});\n\n\n(Checkbox as any).defaultStyles = (theme: Theme) => ({\n\tprimary: { color: theme.palette.primary.main },\n\tsecondary: { color: theme.palette.secondary.main },\n});"]}