{"version":3,"sources":["VirtualizedList.js"],"names":["Batchinator","require","FillRateHelper","PropTypes","React","ReactNative","RefreshControl","ScrollView","StyleSheet","UIManager","View","ViewabilityHelper","flattenStyle","infoLog","invariant","warning","computeWindowedRenderLimits","_usedIndexForKey","_keylessItemComponentName","VirtualizedList","params","animated","veryLast","props","getItemCount","data","frame","_getFrameMetricsApprox","offset","Math","max","length","_footerLength","_scrollMetrics","visibleLength","_scrollRef","scrollTo","horizontal","x","y","getItemLayout","onScrollToIndexFailed","index","viewOffset","viewPosition","_highestMeasuredFrameIndex","averageItemLength","_averageCellLength","highestMeasuredFrameIndex","item","getItem","itemCount","scrollToIndex","_nestedChildLists","forEach","childList","ref","recordInteraction","_viewabilityTuples","t","viewabilityHelper","_updateViewableItems","flashScrollIndicators","getScrollResponder","getScrollableNode","findNodeHandle","setNativeProps","virtualizedList","getScrollMetrics","_getScrollMetrics","getOutermostParentListRef","_getOutermostParentListRef","getNestedChildState","_getNestedChildState","registerAsNestedChild","_registerAsNestedChild","unregisterAsNestedChild","_unregisterAsNestedChild","context","virtualizedCell","cellKey","_hasMore","_isNestedWithSameOrientation","key","existingChildData","get","state","childListsInCell","_cellKeysToChildListKeys","Set","add","set","_hasInteracted","keys","newProps","_cellRefs","updateSeparatorProps","Map","contentLength","dOffset","dt","timestamp","velocity","onRefresh","refreshing","JSON","stringify","refreshControl","progressViewOffset","curr","_frames","inLayout","e","measureLayoutRelativeToContainingList","_selectLength","nativeEvent","layout","onLayout","_scheduleCellsToRenderUpdate","_maybeCallOnEndReached","_headerLength","width","height","initialScrollIndex","_hasDoneInitialScroll","onContentSizeChange","metrics","_offsetFromParentVirtualizedList","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_selectOffset","contentOffset","_convertParentScrollMetrics","_hasWarned","perf","prevDt","_fillRateHelper","activate","_computeBlankness","_onScrollBeginDrag","tuple","onScrollBeginDrag","onScrollEndDrag","onMomentumScrollEnd","onEndReachedThreshold","isVirtualizationDisabled","_isVirtualizationDisabled","setState","newState","distanceFromEnd","renderAhead","maxToRenderPerBatch","first","last","min","size","newFirst","newLast","ii","cellKeyForIndex","_indicesToKeys","childListKeys","someChildHasMore","childKey","hasMore","isViewable","keyExtractor","_getFrameMetrics","__DEV__","frameType","shape","number","isRequired","checkPropTypes","__isNative","windowSize","_updateCellsToRenderBatcher","_updateCellsToRender","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","viewabilityConfig","onViewableItemsChanged","push","initialState","initialNumToRender","storedState","listKey","_getCellKey","frames","dispose","abort","deactivateAndFlush","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","CellRendererComponent","ItemSeparatorComponent","stickyOffset","ListHeaderComponent","end","prevCellKey","has","undefined","_onUpdateSeparators","_onCellLayout","_onCellUnmount","disableVirtualization","nestedContext","flatStyles","contentContainerStyle","flexWrap","ListEmptyComponent","ListFooterComponent","inverted","styles","horizontallyInverted","verticallyInverted","element","isValidElement","_onLayoutHeader","compose","ListHeaderComponentStyle","spacerKey","lastInitialIndex","_pushCells","firstAfterInitial","insertedStickySpacer","initBlock","stickyBlock","leadSpace","trailSpace","firstSpace","console","warn","lastFrame","endFrame","tailSpacerLength","cloneElement","event","_onLayoutEmpty","style","_onLayoutFooter","ListFooterComponentStyle","scrollProps","_onContentSizeChange","_onLayout","_onScrollEndDrag","_onMomentumScrollEnd","scrollEventThrottle","invertStickyHeaders","ret","renderScrollComponent","_defaultRenderScrollComponent","_captureScrollRef","debug","flex","_renderDebugOverlay","prevProps","extraData","_hasDataChangedSinceEndReached","resetViewableIndices","computeBlankness","next","_totalCellLength","_totalCellsMeasured","measureLayout","error","scrollMetrics","stack","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","baseStyle","position","top","right","bottom","borderColor","borderWidth","f","left","backgroundColor","onEndReached","_sentEndForContentLength","hiPri","scrollingThreshold","distTop","distBottom","schedule","onUpdate","_createViewToken","prevState","PureComponent","type","displayName","String","string","func","bool","CellRenderer","separatorProps","highlighted","leadingItem","highlight","onUpdateSeparators","unhighlight","updateProps","select","onUnmount","fillRateHelper","parentProps","renderItem","separators","_separators","enabled","itemSeparator","cellStyle","flexDirection","Component","VirtualizedCellWrapper","children","create","transform","scaleY","scaleX","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst Batchinator = require('Batchinator');\nconst FillRateHelper = require('FillRateHelper');\nconst PropTypes = require('prop-types');\nconst React = require('React');\nconst ReactNative = require('ReactNative');\nconst RefreshControl = require('RefreshControl');\nconst ScrollView = require('ScrollView');\nconst StyleSheet = require('StyleSheet');\nconst UIManager = require('UIManager');\nconst View = require('View');\nconst ViewabilityHelper = require('ViewabilityHelper');\n\nconst flattenStyle = require('flattenStyle');\nconst infoLog = require('infoLog');\nconst invariant = require('fbjs/lib/invariant');\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst warning = require('fbjs/lib/warning');\n\nconst {computeWindowedRenderLimits} = require('VirtualizeUtils');\n\nimport type {DangerouslyImpreciseStyleProp, ViewStyleProp} from 'StyleSheet';\nimport type {\n  ViewabilityConfig,\n  ViewToken,\n  ViewabilityConfigCallbackPair,\n} from 'ViewabilityHelper';\n\ntype Item = any;\n\nexport type renderItemType = (info: any) => ?React.Element<any>;\n\ntype ViewabilityHelperCallbackTuple = {\n  viewabilityHelper: ViewabilityHelper,\n  onViewableItemsChanged: (info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n  }) => void,\n};\n\ntype RequiredProps = {\n  // TODO: Conflicts with the optional `renderItem` in\n  // `VirtualizedSectionList`'s props.\n  renderItem: $FlowFixMe<renderItemType>,\n  /**\n   * The default accessor functions assume this is an Array<{key: string}> but you can override\n   * getItem, getItemCount, and keyExtractor to handle any type of index-based data.\n   */\n  data?: any,\n  /**\n   * A generic accessor for extracting an item from any sort of data blob.\n   */\n  getItem: (data: any, index: number) => ?Item,\n  /**\n   * Determines how many items are in the data blob.\n   */\n  getItemCount: (data: any) => number,\n};\ntype OptionalProps = {\n  /**\n   * `debug` will turn on extra logging and visual overlays to aid with debugging both usage and\n   * implementation, but with a significant perf hit.\n   */\n  debug?: ?boolean,\n  /**\n   * DEPRECATED: Virtualization provides significant performance and memory optimizations, but fully\n   * unmounts react instances that are outside of the render window. You should only need to disable\n   * this for debugging purposes.\n   */\n  disableVirtualization: boolean,\n  /**\n   * A marker property for telling the list to re-render (since it implements `PureComponent`). If\n   * any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the\n   * `data` prop, stick it here and treat it immutably.\n   */\n  extraData?: any,\n  getItemLayout?: (\n    data: any,\n    index: number,\n  ) => {length: number, offset: number, index: number}, // e.g. height, y\n  horizontal?: ?boolean,\n  /**\n   * How many items to render in the initial batch. This should be enough to fill the screen but not\n   * much more. Note these items will never be unmounted as part of the windowed rendering in order\n   * to improve perceived performance of scroll-to-top actions.\n   */\n  initialNumToRender: number,\n  /**\n   * Instead of starting at the top with the first item, start at `initialScrollIndex`. This\n   * disables the \"scroll to top\" optimization that keeps the first `initialNumToRender` items\n   * always rendered and immediately renders the items starting at this initial index. Requires\n   * `getItemLayout` to be implemented.\n   */\n  initialScrollIndex?: ?number,\n  /**\n   * Reverses the direction of scroll. Uses scale transforms of -1.\n   */\n  inverted?: ?boolean,\n  keyExtractor: (item: Item, index: number) => string,\n  /**\n   * Each cell is rendered using this element. Can be a React Component Class,\n   * or a render function. Defaults to using View.\n   */\n  CellRendererComponent?: ?React.ComponentType<any>,\n  /**\n   * Rendered when the list is empty. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListEmptyComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Rendered at the bottom of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListFooterComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListFooterComponent\n   */\n  ListFooterComponentStyle?: ViewStyleProp,\n  /**\n   * Rendered at the top of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListHeaderComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListHeaderComponent\n   */\n  ListHeaderComponentStyle?: ViewStyleProp,\n  /**\n   * A unique identifier for this list. If there are multiple VirtualizedLists at the same level of\n   * nesting within another VirtualizedList, this key is necessary for virtualization to\n   * work properly.\n   */\n  listKey?: string,\n  /**\n   * The maximum number of items to render in each incremental render batch. The more rendered at\n   * once, the better the fill rate, but responsiveness my suffer because rendering content may\n   * interfere with responding to button taps or other interactions.\n   */\n  maxToRenderPerBatch: number,\n  onEndReached?: ?(info: {distanceFromEnd: number}) => void,\n  onEndReachedThreshold?: ?number, // units of visible length\n  onLayout?: ?Function,\n  /**\n   * If provided, a standard RefreshControl will be added for \"Pull to Refresh\" functionality. Make\n   * sure to also set the `refreshing` prop correctly.\n   */\n  onRefresh?: ?Function,\n  /**\n   * Used to handle failures when scrolling to an index that has not been measured yet. Recommended\n   * action is to either compute your own offset and `scrollTo` it, or scroll as far as possible and\n   * then try again after more items have been rendered.\n   */\n  onScrollToIndexFailed?: ?(info: {\n    index: number,\n    highestMeasuredFrameIndex: number,\n    averageItemLength: number,\n  }) => void,\n  /**\n   * Called when the viewability of rows changes, as defined by the\n   * `viewabilityConfig` prop.\n   */\n  onViewableItemsChanged?: ?(info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n  }) => void,\n  /**\n   * Set this when offset is needed for the loading indicator to show correctly.\n   * @platform android\n   */\n  progressViewOffset?: number,\n  /**\n   * A custom refresh control element. When set, it overrides the default\n   * <RefreshControl> component built internally. The onRefresh and refreshing\n   * props are also ignored. Only works for vertical VirtualizedList.\n   */\n  refreshControl?: ?React.Element<any>,\n  /**\n   * Set this true while waiting for new data from a refresh.\n   */\n  refreshing?: ?boolean,\n  /**\n   * Note: may have bugs (missing content) in some circumstances - use at your own risk.\n   *\n   * This may improve scroll performance for large lists.\n   */\n  removeClippedSubviews?: boolean,\n  /**\n   * Render a custom scroll component, e.g. with a differently styled `RefreshControl`.\n   */\n  renderScrollComponent?: (props: Object) => React.Element<any>,\n  /**\n   * Amount of time between low-pri item render batches, e.g. for rendering items quite a ways off\n   * screen. Similar fill rate/responsiveness tradeoff as `maxToRenderPerBatch`.\n   */\n  updateCellsBatchingPeriod: number,\n  viewabilityConfig?: ViewabilityConfig,\n  /**\n   * List of ViewabilityConfig/onViewableItemsChanged pairs. A specific onViewableItemsChanged\n   * will be called when its corresponding ViewabilityConfig's conditions are met.\n   */\n  viewabilityConfigCallbackPairs?: Array<ViewabilityConfigCallbackPair>,\n  /**\n   * Determines the maximum number of items rendered outside of the visible area, in units of\n   * visible lengths. So if your list fills the screen, then `windowSize={21}` (the default) will\n   * render the visible screen area plus up to 10 screens above and 10 below the viewport. Reducing\n   * this number will reduce memory consumption and may improve performance, but will increase the\n   * chance that fast scrolling may reveal momentary blank areas of unrendered content.\n   */\n  windowSize: number,\n};\n/* $FlowFixMe - this Props seems to be missing a bunch of stuff. Remove this\n * comment to see the errors */\nexport type Props = RequiredProps & OptionalProps;\n\nlet _usedIndexForKey = false;\nlet _keylessItemComponentName: string = '';\n\ntype Frame = {\n  offset: number,\n  length: number,\n  index: number,\n  inLayout: boolean,\n};\n\ntype ChildListState = {\n  first: number,\n  last: number,\n  frames: {[key: number]: Frame},\n};\n\ntype State = {first: number, last: number};\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](/react-native/docs/flatlist.html)\n * and [`<SectionList>`](/react-native/docs/sectionlist.html) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n */\nclass VirtualizedList extends React.PureComponent<Props, State> {\n  props: Props;\n\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params?: ?{animated?: ?boolean}) {\n    const animated = params ? params.animated : true;\n    const veryLast = this.props.getItemCount(this.props.data) - 1;\n    const frame = this._getFrameMetricsApprox(veryLast);\n    const offset = Math.max(\n      0,\n      frame.offset +\n        frame.length +\n        this._footerLength -\n        this._scrollMetrics.visibleLength,\n    );\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.scrollTo(\n      /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This\n       * comment suppresses an error when upgrading Flow's support for React.\n       * To see the error delete this comment and run Flow. */\n      this.props.horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params: {\n    animated?: ?boolean,\n    index: number,\n    viewOffset?: number,\n    viewPosition?: number,\n  }) {\n    const {\n      data,\n      horizontal,\n      getItemCount,\n      getItemLayout,\n      onScrollToIndexFailed,\n    } = this.props;\n    const {animated, index, viewOffset, viewPosition} = params;\n    invariant(\n      index >= 0 && index < getItemCount(data),\n      `scrollToIndex out of range: ${index} vs ${getItemCount(data) - 1}`,\n    );\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(\n        !!onScrollToIndexFailed,\n        'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' +\n          'otherwise there is no way to know the location of offscreen indices or handle failures.',\n      );\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index,\n      });\n      return;\n    }\n    const frame = this._getFrameMetricsApprox(index);\n    const offset =\n      Math.max(\n        0,\n        frame.offset -\n          (viewPosition || 0) *\n            (this._scrollMetrics.visibleLength - frame.length),\n      ) - (viewOffset || 0);\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.scrollTo(\n      /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This\n       * comment suppresses an error when upgrading Flow's support for React.\n       * To see the error delete this comment and run Flow. */\n      horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params: {\n    animated?: ?boolean,\n    item: Item,\n    viewPosition?: number,\n  }) {\n    const {item} = params;\n    const {data, getItem, getItemCount} = this.props;\n    const itemCount = getItemCount(data);\n    for (let index = 0; index < itemCount; index++) {\n      if (getItem(data, index) === item) {\n        this.scrollToIndex({...params, index});\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params: {animated?: ?boolean, offset: number}) {\n    const {animated, offset} = params;\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.scrollTo(\n      /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This\n       * comment suppresses an error when upgrading Flow's support for React.\n       * To see the error delete this comment and run Flow. */\n      this.props.horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props.data);\n  }\n\n  flashScrollIndicators() {\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder() {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return ReactNative.findNodeHandle(this._scrollRef);\n    }\n  }\n\n  setNativeProps(props: Object) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  }\n\n  static defaultProps = {\n    disableVirtualization: false,\n    horizontal: false,\n    initialNumToRender: 10,\n    keyExtractor: (item: Item, index: number) => {\n      if (item.key != null) {\n        return item.key;\n      }\n      _usedIndexForKey = true;\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n      return String(index);\n    },\n    maxToRenderPerBatch: 10,\n    onEndReachedThreshold: 2, // multiples of length\n    scrollEventThrottle: 50,\n    updateCellsBatchingPeriod: 50,\n    windowSize: 21, // multiples of length\n  };\n\n  static contextTypes = {\n    virtualizedCell: PropTypes.shape({\n      cellKey: PropTypes.string,\n    }),\n    virtualizedList: PropTypes.shape({\n      getScrollMetrics: PropTypes.func,\n      horizontal: PropTypes.bool,\n      getOutermostParentListRef: PropTypes.func,\n      getNestedChildState: PropTypes.func,\n      registerAsNestedChild: PropTypes.func,\n      unregisterAsNestedChild: PropTypes.func,\n    }),\n  };\n\n  static childContextTypes = {\n    virtualizedList: PropTypes.shape({\n      getScrollMetrics: PropTypes.func,\n      horizontal: PropTypes.bool,\n      getOutermostParentListRef: PropTypes.func,\n      getNestedChildState: PropTypes.func,\n      registerAsNestedChild: PropTypes.func,\n      unregisterAsNestedChild: PropTypes.func,\n    }),\n  };\n\n  getChildContext() {\n    return {\n      virtualizedList: {\n        getScrollMetrics: this._getScrollMetrics,\n        horizontal: this.props.horizontal,\n        getOutermostParentListRef: this._getOutermostParentListRef,\n        getNestedChildState: this._getNestedChildState,\n        registerAsNestedChild: this._registerAsNestedChild,\n        unregisterAsNestedChild: this._unregisterAsNestedChild,\n      },\n    };\n  }\n\n  _getCellKey(): string {\n    return (\n      (this.context.virtualizedCell && this.context.virtualizedCell.cellKey) ||\n      'rootList'\n    );\n  }\n\n  _getScrollMetrics = () => {\n    return this._scrollMetrics;\n  };\n\n  hasMore(): boolean {\n    return this._hasMore;\n  }\n\n  _getOutermostParentListRef = () => {\n    if (this._isNestedWithSameOrientation()) {\n      return this.context.virtualizedList.getOutermostParentListRef();\n    } else {\n      return this;\n    }\n  };\n\n  _getNestedChildState = (key: string): ?ChildListState => {\n    const existingChildData = this._nestedChildLists.get(key);\n    return existingChildData && existingChildData.state;\n  };\n\n  _registerAsNestedChild = (childList: {\n    cellKey: string,\n    key: string,\n    ref: VirtualizedList,\n  }): ?ChildListState => {\n    // Register the mapping between this child key and the cellKey for its cell\n    const childListsInCell =\n      this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n    childListsInCell.add(childList.key);\n    this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n\n    const existingChildData = this._nestedChildLists.get(childList.key);\n    invariant(\n      !(existingChildData && existingChildData.ref !== null),\n      'A VirtualizedList contains a cell which itself contains ' +\n        'more than one VirtualizedList of the same orientation as the parent ' +\n        'list. You must pass a unique listKey prop to each sibling list.',\n    );\n    this._nestedChildLists.set(childList.key, {\n      ref: childList.ref,\n      state: null,\n    });\n\n    if (this._hasInteracted) {\n      childList.ref.recordInteraction();\n    }\n  };\n\n  _unregisterAsNestedChild = (childList: {\n    key: string,\n    state: ChildListState,\n  }): void => {\n    this._nestedChildLists.set(childList.key, {\n      ref: null,\n      state: childList.state,\n    });\n  };\n\n  state: State;\n\n  constructor(props: Props, context: Object) {\n    super(props, context);\n    invariant(\n      !props.onScroll || !props.onScroll.__isNative,\n      'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' +\n        'to support native onScroll events with useNativeDriver',\n    );\n\n    invariant(\n      props.windowSize > 0,\n      'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.',\n    );\n\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(\n      this._updateCellsToRender,\n      this.props.updateCellsBatchingPeriod,\n    );\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(\n        pair => ({\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged,\n        }),\n      );\n    } else if (this.props.onViewableItemsChanged) {\n      this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(this.props.viewabilityConfig),\n        onViewableItemsChanged: this.props.onViewableItemsChanged,\n      });\n    }\n\n    let initialState = {\n      first: this.props.initialScrollIndex || 0,\n      last:\n        Math.min(\n          this.props.getItemCount(this.props.data),\n          (this.props.initialScrollIndex || 0) + this.props.initialNumToRender,\n        ) - 1,\n    };\n\n    if (this._isNestedWithSameOrientation()) {\n      const storedState = this.context.virtualizedList.getNestedChildState(\n        this.props.listKey || this._getCellKey(),\n      );\n      if (storedState) {\n        initialState = storedState;\n        this.state = storedState;\n        this._frames = storedState.frames;\n      }\n    }\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.virtualizedList.registerAsNestedChild({\n        cellKey: this._getCellKey(),\n        key: this.props.listKey || this._getCellKey(),\n        ref: this,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.virtualizedList.unregisterAsNestedChild({\n        key: this.props.listKey || this._getCellKey(),\n        state: {\n          first: this.state.first,\n          last: this.state.last,\n          frames: this._frames,\n        },\n      });\n    }\n    this._updateViewableItems(null);\n    this._updateCellsToRenderBatcher.dispose({abort: true});\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n  }\n\n  static getDerivedStateFromProps(newProps: Props, prevState: State) {\n    const {data, extraData, getItemCount, maxToRenderPerBatch} = newProps;\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    return {\n      first: Math.max(\n        0,\n        Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch),\n      ),\n      last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1)),\n    };\n  }\n\n  _pushCells(\n    cells: Array<Object>,\n    stickyHeaderIndices: Array<number>,\n    stickyIndicesFromProps: Set<number>,\n    first: number,\n    last: number,\n    inversionStyle: ?DangerouslyImpreciseStyleProp,\n  ) {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      data,\n      getItem,\n      getItemCount,\n      horizontal,\n      keyExtractor,\n    } = this.props;\n    const stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n    const end = getItemCount(data) - 1;\n    let prevCellKey;\n    last = Math.min(end, last);\n    for (let ii = first; ii <= last; ii++) {\n      const item = getItem(data, ii);\n      const key = keyExtractor(item, ii);\n      this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n      cells.push(\n        <CellRenderer\n          CellRendererComponent={CellRendererComponent}\n          ItemSeparatorComponent={ii < end ? ItemSeparatorComponent : undefined}\n          cellKey={key}\n          fillRateHelper={this._fillRateHelper}\n          horizontal={horizontal}\n          index={ii}\n          inversionStyle={inversionStyle}\n          item={item}\n          key={key}\n          prevCellKey={prevCellKey}\n          onUpdateSeparators={this._onUpdateSeparators}\n          onLayout={e => this._onCellLayout(e, key, ii)}\n          onUnmount={this._onCellUnmount}\n          parentProps={this.props}\n          ref={ref => {\n            this._cellRefs[key] = ref;\n          }}\n        />,\n      );\n      prevCellKey = key;\n    }\n  }\n\n  _onUpdateSeparators = (keys: Array<?string>, newProps: Object) => {\n    keys.forEach(key => {\n      const ref = key != null && this._cellRefs[key];\n      ref && ref.updateSeparatorProps(newProps);\n    });\n  };\n\n  _isVirtualizationDisabled(): boolean {\n    return this.props.disableVirtualization;\n  }\n\n  _isNestedWithSameOrientation(): boolean {\n    const nestedContext = this.context.virtualizedList;\n    return !!(\n      nestedContext && !!nestedContext.horizontal === !!this.props.horizontal\n    );\n  }\n\n  render() {\n    if (__DEV__) {\n      const flatStyles = flattenStyle(this.props.contentContainerStyle);\n      warning(\n        flatStyles == null || flatStyles.flexWrap !== 'wrap',\n        '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' +\n          'Consider using `numColumns` with `FlatList` instead.',\n      );\n    }\n    const {\n      ListEmptyComponent,\n      ListFooterComponent,\n      ListHeaderComponent,\n    } = this.props;\n    const {data, horizontal} = this.props;\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    const inversionStyle = this.props.inverted\n      ? this.props.horizontal\n        ? styles.horizontallyInverted\n        : styles.verticallyInverted\n      : null;\n    const cells = [];\n    const stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    const stickyHeaderIndices = [];\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      const element = React.isValidElement(ListHeaderComponent) ? (\n        ListHeaderComponent\n      ) : (\n        // $FlowFixMe\n        <ListHeaderComponent />\n      );\n      cells.push(\n        <VirtualizedCellWrapper\n          cellKey={this._getCellKey() + '-header'}\n          key=\"$header\">\n          <View\n            onLayout={this._onLayoutHeader}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListHeaderComponentStyle,\n            )}>\n            {\n              // $FlowFixMe - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedCellWrapper>,\n      );\n    }\n    const itemCount = this.props.getItemCount(data);\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      const spacerKey = !horizontal ? 'height' : 'width';\n      const lastInitialIndex = this.props.initialScrollIndex\n        ? -1\n        : this.props.initialNumToRender - 1;\n      const {first, last} = this.state;\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        0,\n        lastInitialIndex,\n        inversionStyle,\n      );\n      const firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n      if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n        let insertedStickySpacer = false;\n        if (stickyIndicesFromProps.size > 0) {\n          const stickyOffset = ListHeaderComponent ? 1 : 0;\n          // See if there are any sticky headers in the virtualized space that we need to render.\n          for (let ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n            if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n              const initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n              const stickyBlock = this._getFrameMetricsApprox(ii);\n              const leadSpace = stickyBlock.offset - initBlock.offset;\n              cells.push(\n                <View key=\"$sticky_lead\" style={{[spacerKey]: leadSpace}} />,\n              );\n              this._pushCells(\n                cells,\n                stickyHeaderIndices,\n                stickyIndicesFromProps,\n                ii,\n                ii,\n                inversionStyle,\n              );\n              const trailSpace =\n                this._getFrameMetricsApprox(first).offset -\n                (stickyBlock.offset + stickyBlock.length);\n              cells.push(\n                <View key=\"$sticky_trail\" style={{[spacerKey]: trailSpace}} />,\n              );\n              insertedStickySpacer = true;\n              break;\n            }\n          }\n        }\n        if (!insertedStickySpacer) {\n          const initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n          const firstSpace =\n            this._getFrameMetricsApprox(first).offset -\n            (initBlock.offset + initBlock.length);\n          cells.push(\n            <View key=\"$lead_spacer\" style={{[spacerKey]: firstSpace}} />,\n          );\n        }\n      }\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        firstAfterInitial,\n        last,\n        inversionStyle,\n      );\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn(\n          'VirtualizedList: missing keys for items, make sure to specify a key property on each ' +\n            'item or provide a custom keyExtractor.',\n          _keylessItemComponentName,\n        );\n        this._hasWarned.keys = true;\n      }\n      if (!isVirtualizationDisabled && last < itemCount - 1) {\n        const lastFrame = this._getFrameMetricsApprox(last);\n        // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n        // prevent the user for hyperscrolling into un-measured area because otherwise content will\n        // likely jump around as it renders in above the viewport.\n        const end = this.props.getItemLayout\n          ? itemCount - 1\n          : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n        const endFrame = this._getFrameMetricsApprox(end);\n        const tailSpacerLength =\n          endFrame.offset +\n          endFrame.length -\n          (lastFrame.offset + lastFrame.length);\n        cells.push(\n          <View key=\"$tail_spacer\" style={{[spacerKey]: tailSpacerLength}} />,\n        );\n      }\n    } else if (ListEmptyComponent) {\n      const element: React.Element<any> = ((React.isValidElement(\n        ListEmptyComponent,\n      ) ? (\n        ListEmptyComponent\n      ) : (\n        // $FlowFixMe\n        <ListEmptyComponent />\n      )): any);\n      cells.push(\n        React.cloneElement(element, {\n          key: '$empty',\n          onLayout: event => {\n            this._onLayoutEmpty(event);\n            if (element.props.onLayout) {\n              element.props.onLayout(event);\n            }\n          },\n          style: [element.props.style, inversionStyle],\n        }),\n      );\n    }\n    if (ListFooterComponent) {\n      const element = React.isValidElement(ListFooterComponent) ? (\n        ListFooterComponent\n      ) : (\n        // $FlowFixMe\n        <ListFooterComponent />\n      );\n      cells.push(\n        <VirtualizedCellWrapper\n          cellKey={this._getCellKey() + '-footer'}\n          key=\"$footer\">\n          <View\n            onLayout={this._onLayoutFooter}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListFooterComponentStyle,\n            )}>\n            {\n              // $FlowFixMe - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedCellWrapper>,\n      );\n    }\n    const scrollProps = {\n      ...this.props,\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: this.props.scrollEventThrottle, // TODO: Android support\n      invertStickyHeaders:\n        this.props.invertStickyHeaders !== undefined\n          ? this.props.invertStickyHeaders\n          : this.props.inverted,\n      stickyHeaderIndices,\n    };\n    if (inversionStyle) {\n      /* $FlowFixMe(>=0.70.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.70 was deployed. To see the error delete\n       * this comment and run Flow. */\n      scrollProps.style = [inversionStyle, this.props.style];\n    }\n\n    this._hasMore =\n      this.state.last < this.props.getItemCount(this.props.data) - 1;\n\n    const ret = React.cloneElement(\n      (this.props.renderScrollComponent || this._defaultRenderScrollComponent)(\n        scrollProps,\n      ),\n      // $FlowFixMe Invalid prop usage\n      {\n        ref: this._captureScrollRef,\n      },\n      cells,\n    );\n    if (this.props.debug) {\n      return (\n        <View style={{flex: 1}}>\n          {ret}\n          {this._renderDebugOverlay()}\n        </View>\n      );\n    } else {\n      return ret;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {data, extraData} = this.props;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      this._hasDataChangedSinceEndReached = true;\n\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    this._scheduleCellsToRenderUpdate();\n  }\n\n  _averageCellLength = 0;\n  // Maps a cell key to the set of keys for all outermost child lists within that cell\n  _cellKeysToChildListKeys: Map<string, Set<string>> = new Map();\n  _cellRefs = {};\n  _fillRateHelper: FillRateHelper;\n  _frames = {};\n  _footerLength = 0;\n  _hasDataChangedSinceEndReached = true;\n  _hasInteracted = false;\n  _hasMore = false;\n  _hasWarned = {};\n  _highestMeasuredFrameIndex = 0;\n  _headerLength = 0;\n  _indicesToKeys: Map<number, string> = new Map();\n  _hasDoneInitialScroll = false;\n  _nestedChildLists: Map<\n    string,\n    {ref: ?VirtualizedList, state: ?ChildListState},\n  > = new Map();\n  _offsetFromParentVirtualizedList: number = 0;\n  _prevParentOffset: number = 0;\n  _scrollMetrics = {\n    contentLength: 0,\n    dOffset: 0,\n    dt: 10,\n    offset: 0,\n    timestamp: 0,\n    velocity: 0,\n    visibleLength: 0,\n  };\n  _scrollRef: ?React.ElementRef<any> = null;\n  _sentEndForContentLength = 0;\n  _totalCellLength = 0;\n  _totalCellsMeasured = 0;\n  _updateCellsToRenderBatcher: Batchinator;\n  _viewabilityTuples: Array<ViewabilityHelperCallbackTuple> = [];\n\n  _captureScrollRef = ref => {\n    this._scrollRef = ref;\n  };\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(\n      this.props,\n      this.state,\n      this._scrollMetrics,\n    );\n  }\n\n  _defaultRenderScrollComponent = props => {\n    const onRefresh = props.onRefresh;\n    if (this._isNestedWithSameOrientation()) {\n      // $FlowFixMe - Typing ReactNativeComponent revealed errors\n      return <View {...props} />;\n    } else if (onRefresh) {\n      invariant(\n        typeof props.refreshing === 'boolean',\n        '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' +\n          JSON.stringify(props.refreshing) +\n          '`',\n      );\n      return (\n        // $FlowFixMe Invalid prop usage\n        <ScrollView\n          {...props}\n          refreshControl={\n            props.refreshControl == null ? (\n              <RefreshControl\n                refreshing={props.refreshing}\n                onRefresh={onRefresh}\n                progressViewOffset={props.progressViewOffset}\n              />\n            ) : (\n              props.refreshControl\n            )\n          }\n        />\n      );\n    } else {\n      // $FlowFixMe Invalid prop usage\n      return <ScrollView {...props} />;\n    }\n  };\n\n  _onCellLayout(e, cellKey, index) {\n    const layout = e.nativeEvent.layout;\n    const next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index,\n      inLayout: true,\n    };\n    const curr = this._frames[cellKey];\n    if (\n      !curr ||\n      next.offset !== curr.offset ||\n      next.length !== curr.length ||\n      index !== curr.index\n    ) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength =\n        this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(\n        this._highestMeasuredFrameIndex,\n        index,\n      );\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n\n    const childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n    if (childListKeys) {\n      for (let childKey of childListKeys) {\n        const childList = this._nestedChildLists.get(childKey);\n        childList &&\n          childList.ref &&\n          childList.ref.measureLayoutRelativeToContainingList();\n      }\n    }\n\n    this._computeBlankness();\n  }\n\n  _onCellUnmount = (cellKey: string) => {\n    const curr = this._frames[cellKey];\n    if (curr) {\n      this._frames[cellKey] = {...curr, inLayout: false};\n    }\n  };\n\n  measureLayoutRelativeToContainingList(): void {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      UIManager.measureLayout(\n        ReactNative.findNodeHandle(this),\n        ReactNative.findNodeHandle(\n          this.context.virtualizedList.getOutermostParentListRef(),\n        ),\n        error => {\n          console.warn(\n            \"VirtualizedList: Encountered an error while measuring a list's\" +\n              ' offset from its containing VirtualizedList.',\n          );\n        },\n        (x, y, width, height) => {\n          this._offsetFromParentVirtualizedList = this._selectOffset({x, y});\n          this._scrollMetrics.contentLength = this._selectLength({\n            width,\n            height,\n          });\n\n          const scrollMetrics = this._convertParentScrollMetrics(\n            this.context.virtualizedList.getScrollMetrics(),\n          );\n          this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n          this._scrollMetrics.offset = scrollMetrics.offset;\n        },\n      );\n    } catch (error) {\n      console.warn(\n        'measureLayoutRelativeToContainingList threw an error',\n        error.stack,\n      );\n    }\n  }\n\n  _onLayout = (e: Object) => {\n    if (this._isNestedWithSameOrientation()) {\n      // Need to adjust our scroll metrics to be relative to our containing\n      // VirtualizedList before we can make claims about list item viewability\n      this.measureLayoutRelativeToContainingList();\n    } else {\n      this._scrollMetrics.visibleLength = this._selectLength(\n        e.nativeEvent.layout,\n      );\n    }\n    this.props.onLayout && this.props.onLayout(e);\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  _onLayoutEmpty = e => {\n    this.props.onLayout && this.props.onLayout(e);\n  };\n\n  _onLayoutFooter = e => {\n    this._footerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _onLayoutHeader = e => {\n    this._headerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _renderDebugOverlay() {\n    const normalize =\n      this._scrollMetrics.visibleLength / this._scrollMetrics.contentLength;\n    const framesInLayout = [];\n    const itemCount = this.props.getItemCount(this.props.data);\n    for (let ii = 0; ii < itemCount; ii++) {\n      const frame = this._getFrameMetricsApprox(ii);\n      /* $FlowFixMe(>=0.68.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.68 was deployed. To see the error delete this\n       * comment and run Flow. */\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n    const windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n    const frameLast = this._getFrameMetricsApprox(this.state.last);\n    const windowLen = frameLast.offset + frameLast.length - windowTop;\n    const visTop = this._scrollMetrics.offset;\n    const visLen = this._scrollMetrics.visibleLength;\n    const baseStyle = {position: 'absolute', top: 0, right: 0};\n    return (\n      <View\n        style={{\n          ...baseStyle,\n          bottom: 0,\n          width: 20,\n          borderColor: 'blue',\n          borderWidth: 1,\n        }}>\n        {framesInLayout.map((f, ii) => (\n          <View\n            key={'f' + ii}\n            style={{\n              ...baseStyle,\n              left: 0,\n              top: f.offset * normalize,\n              height: f.length * normalize,\n              backgroundColor: 'orange',\n            }}\n          />\n        ))}\n        <View\n          style={{\n            ...baseStyle,\n            left: 0,\n            top: windowTop * normalize,\n            height: windowLen * normalize,\n            borderColor: 'green',\n            borderWidth: 2,\n          }}\n        />\n        <View\n          style={{\n            ...baseStyle,\n            left: 0,\n            top: visTop * normalize,\n            height: visLen * normalize,\n            borderColor: 'red',\n            borderWidth: 2,\n          }}\n        />\n      </View>\n    );\n  }\n\n  _selectLength(metrics: $ReadOnly<{height: number, width: number}>): number {\n    return !this.props.horizontal ? metrics.height : metrics.width;\n  }\n\n  _selectOffset(metrics: $ReadOnly<{x: number, y: number}>): number {\n    return !this.props.horizontal ? metrics.y : metrics.x;\n  }\n\n  _maybeCallOnEndReached() {\n    const {\n      data,\n      getItemCount,\n      onEndReached,\n      onEndReachedThreshold,\n    } = this.props;\n    const {contentLength, visibleLength, offset} = this._scrollMetrics;\n    const distanceFromEnd = contentLength - visibleLength - offset;\n    if (\n      onEndReached &&\n      this.state.last === getItemCount(data) - 1 &&\n      /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.63 was deployed. To see the error delete this\n       * comment and run Flow. */\n      distanceFromEnd < onEndReachedThreshold * visibleLength &&\n      (this._hasDataChangedSinceEndReached ||\n        this._scrollMetrics.contentLength !== this._sentEndForContentLength)\n    ) {\n      // Only call onEndReached once for a given dataset + content length.\n      this._hasDataChangedSinceEndReached = false;\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({distanceFromEnd});\n    }\n  }\n\n  _onContentSizeChange = (width: number, height: number) => {\n    if (\n      width > 0 &&\n      height > 0 &&\n      this.props.initialScrollIndex != null &&\n      this.props.initialScrollIndex > 0 &&\n      !this._hasDoneInitialScroll\n    ) {\n      this.scrollToIndex({\n        animated: false,\n        index: this.props.initialScrollIndex,\n      });\n      this._hasDoneInitialScroll = true;\n    }\n    if (this.props.onContentSizeChange) {\n      this.props.onContentSizeChange(width, height);\n    }\n    this._scrollMetrics.contentLength = this._selectLength({height, width});\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  /* Translates metrics from a scroll event in a parent VirtualizedList into\n   * coordinates relative to the child list.\n   */\n  _convertParentScrollMetrics = (metrics: {\n    visibleLength: number,\n    offset: number,\n  }) => {\n    // Offset of the top of the nested list relative to the top of its parent's viewport\n    const offset = metrics.offset - this._offsetFromParentVirtualizedList;\n    // Child's visible length is the same as its parent's\n    const visibleLength = metrics.visibleLength;\n    const dOffset = offset - this._scrollMetrics.offset;\n    const contentLength = this._scrollMetrics.contentLength;\n\n    return {\n      visibleLength,\n      contentLength,\n      offset,\n      dOffset,\n    };\n  };\n\n  _onScroll = (e: Object) => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScroll(e);\n    });\n    if (this.props.onScroll) {\n      this.props.onScroll(e);\n    }\n    const timestamp = e.timeStamp;\n    let visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n    let contentLength = this._selectLength(e.nativeEvent.contentSize);\n    let offset = this._selectOffset(e.nativeEvent.contentOffset);\n    let dOffset = offset - this._scrollMetrics.offset;\n\n    if (this._isNestedWithSameOrientation()) {\n      if (this._scrollMetrics.contentLength === 0) {\n        // Ignore scroll events until onLayout has been called and we\n        // know our offset from our offset from our parent\n        return;\n      }\n      ({\n        visibleLength,\n        contentLength,\n        offset,\n        dOffset,\n      } = this._convertParentScrollMetrics({\n        visibleLength,\n        offset,\n      }));\n    }\n\n    const dt = this._scrollMetrics.timestamp\n      ? Math.max(1, timestamp - this._scrollMetrics.timestamp)\n      : 1;\n    const velocity = dOffset / dt;\n\n    if (\n      dt > 500 &&\n      this._scrollMetrics.dt > 500 &&\n      contentLength > 5 * visibleLength &&\n      !this._hasWarned.perf\n    ) {\n      infoLog(\n        'VirtualizedList: You have a large list that is slow to update - make sure your ' +\n          'renderItem function renders components that follow React performance best practices ' +\n          'like PureComponent, shouldComponentUpdate, etc.',\n        {dt, prevDt: this._scrollMetrics.dt, contentLength},\n      );\n      this._hasWarned.perf = true;\n    }\n    this._scrollMetrics = {\n      contentLength,\n      dt,\n      dOffset,\n      offset,\n      timestamp,\n      velocity,\n      visibleLength,\n    };\n    this._updateViewableItems(this.props.data);\n    if (!this.props) {\n      return;\n    }\n    this._maybeCallOnEndReached();\n    if (velocity !== 0) {\n      this._fillRateHelper.activate();\n    }\n    this._computeBlankness();\n    this._scheduleCellsToRenderUpdate();\n  };\n\n  _scheduleCellsToRenderUpdate() {\n    const {first, last} = this.state;\n    const {offset, visibleLength, velocity} = this._scrollMetrics;\n    const itemCount = this.props.getItemCount(this.props.data);\n    let hiPri = false;\n    const scrollingThreshold =\n      /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.63 was deployed. To see the error delete\n       * this comment and run Flow. */\n      (this.props.onEndReachedThreshold * visibleLength) / 2;\n    // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n    if (first > 0) {\n      const distTop = offset - this._getFrameMetricsApprox(first).offset;\n      hiPri =\n        hiPri || distTop < 0 || (velocity < -2 && distTop < scrollingThreshold);\n    }\n    // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n    if (last < itemCount - 1) {\n      const distBottom =\n        this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n      hiPri =\n        hiPri ||\n        distBottom < 0 ||\n        (velocity > 2 && distBottom < scrollingThreshold);\n    }\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    if (hiPri && this._averageCellLength) {\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({abort: true});\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  _onScrollBeginDrag = (e): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScrollBeginDrag(e);\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.recordInteraction();\n    });\n    this._hasInteracted = true;\n    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n  };\n\n  _onScrollEndDrag = (e): void => {\n    const {velocity} = e.nativeEvent;\n    if (velocity) {\n      this._scrollMetrics.velocity = this._selectOffset(velocity);\n    }\n    this._computeBlankness();\n    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n  };\n\n  _onMomentumScrollEnd = (e): void => {\n    this._scrollMetrics.velocity = 0;\n    this._computeBlankness();\n    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n  };\n\n  _updateCellsToRender = () => {\n    const {data, getItemCount, onEndReachedThreshold} = this.props;\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    this._updateViewableItems(data);\n    if (!data) {\n      return;\n    }\n    this.setState(state => {\n      let newState;\n      if (!isVirtualizationDisabled) {\n        // If we run this with bogus data, we'll force-render window {first: 0, last: 0},\n        // and wipe out the initialNumToRender rendered elements.\n        // So let's wait until the scroll view metrics have been set up. And until then,\n        // we will trust the initialNumToRender suggestion\n        if (this._scrollMetrics.visibleLength) {\n          // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n          // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n          // So let's wait until we've scrolled the view to the right place. And until then,\n          // we will trust the initialScrollIndex suggestion.\n          if (!this.props.initialScrollIndex || this._scrollMetrics.offset) {\n            newState = computeWindowedRenderLimits(\n              this.props,\n              state,\n              this._getFrameMetricsApprox,\n              this._scrollMetrics,\n            );\n          }\n        }\n      } else {\n        const {contentLength, offset, visibleLength} = this._scrollMetrics;\n        const distanceFromEnd = contentLength - visibleLength - offset;\n        const renderAhead =\n          /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses\n           * an error found when Flow v0.63 was deployed. To see the error\n           * delete this comment and run Flow. */\n          distanceFromEnd < onEndReachedThreshold * visibleLength\n            ? this.props.maxToRenderPerBatch\n            : 0;\n        newState = {\n          first: 0,\n          last: Math.min(state.last + renderAhead, getItemCount(data) - 1),\n        };\n      }\n      if (newState && this._nestedChildLists.size > 0) {\n        const newFirst = newState.first;\n        const newLast = newState.last;\n        // If some cell in the new state has a child list in it, we should only render\n        // up through that item, so that we give that list a chance to render.\n        // Otherwise there's churn from multiple child lists mounting and un-mounting\n        // their items.\n        for (let ii = newFirst; ii <= newLast; ii++) {\n          const cellKeyForIndex = this._indicesToKeys.get(ii);\n          const childListKeys =\n            cellKeyForIndex &&\n            this._cellKeysToChildListKeys.get(cellKeyForIndex);\n          if (!childListKeys) {\n            continue;\n          }\n          let someChildHasMore = false;\n          // For each cell, need to check whether any child list in it has more elements to render\n          for (let childKey of childListKeys) {\n            const childList = this._nestedChildLists.get(childKey);\n            if (childList && childList.ref && childList.ref.hasMore()) {\n              someChildHasMore = true;\n              break;\n            }\n          }\n          if (someChildHasMore) {\n            newState.last = ii;\n            break;\n          }\n        }\n      }\n      return newState;\n    });\n  };\n\n  _createViewToken = (index: number, isViewable: boolean) => {\n    const {data, getItem, keyExtractor} = this.props;\n    const item = getItem(data, index);\n    return {index, item, key: keyExtractor(item, index), isViewable};\n  };\n\n  _getFrameMetricsApprox = (\n    index: number,\n  ): {length: number, offset: number} => {\n    const frame = this._getFrameMetrics(index);\n    if (frame && frame.index === index) {\n      // check for invalid frames due to row re-ordering\n      return frame;\n    } else {\n      const {getItemLayout} = this.props;\n      invariant(\n        !getItemLayout,\n        'Should not have to estimate frames when a measurement metrics function is provided',\n      );\n      return {\n        length: this._averageCellLength,\n        offset: this._averageCellLength * index,\n      };\n    }\n  };\n\n  _getFrameMetrics = (\n    index: number,\n  ): ?{\n    length: number,\n    offset: number,\n    index: number,\n    inLayout?: boolean,\n  } => {\n    const {\n      data,\n      getItem,\n      getItemCount,\n      getItemLayout,\n      keyExtractor,\n    } = this.props;\n    invariant(\n      getItemCount(data) > index,\n      'Tried to get frame for out of range index ' + index,\n    );\n    const item = getItem(data, index);\n    let frame = item && this._frames[keyExtractor(item, index)];\n    if (!frame || frame.index !== index) {\n      if (getItemLayout) {\n        frame = getItemLayout(data, index);\n        if (__DEV__) {\n          const frameType = PropTypes.shape({\n            length: PropTypes.number.isRequired,\n            offset: PropTypes.number.isRequired,\n            index: PropTypes.number.isRequired,\n          }).isRequired;\n          PropTypes.checkPropTypes(\n            {frame: frameType},\n            {frame},\n            'frame',\n            'VirtualizedList.getItemLayout',\n          );\n        }\n      }\n    }\n    /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n     * error found when Flow v0.63 was deployed. To see the error delete this\n     * comment and run Flow. */\n    return frame;\n  };\n\n  _updateViewableItems(data: any) {\n    const {getItemCount} = this.props;\n\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(\n        getItemCount(data),\n        this._scrollMetrics.offset,\n        this._scrollMetrics.visibleLength,\n        this._getFrameMetrics,\n        this._createViewToken,\n        tuple.onViewableItemsChanged,\n        this.state,\n      );\n    });\n  }\n}\n\nclass CellRenderer extends React.Component<\n  {\n    CellRendererComponent?: ?React.ComponentType<any>,\n    ItemSeparatorComponent: ?React.ComponentType<*>,\n    cellKey: string,\n    fillRateHelper: FillRateHelper,\n    horizontal: ?boolean,\n    index: number,\n    inversionStyle: ?DangerouslyImpreciseStyleProp,\n    item: Item,\n    onLayout: (event: Object) => void, // This is extracted by ScrollViewStickyHeader\n    onUnmount: (cellKey: string) => void,\n    onUpdateSeparators: (cellKeys: Array<?string>, props: Object) => void,\n    parentProps: {\n      getItemLayout?: ?Function,\n      renderItem: renderItemType,\n    },\n    prevCellKey: ?string,\n  },\n  $FlowFixMeState,\n> {\n  state = {\n    separatorProps: {\n      highlighted: false,\n      leadingItem: this.props.item,\n    },\n  };\n\n  static childContextTypes = {\n    virtualizedCell: PropTypes.shape({\n      cellKey: PropTypes.string,\n    }),\n  };\n\n  getChildContext() {\n    return {\n      virtualizedCell: {\n        cellKey: this.props.cellKey,\n      },\n    };\n  }\n\n  // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not\n  // reused by SectionList and we can keep VirtualizedList simpler.\n  _separators = {\n    highlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: true,\n      });\n    },\n    unhighlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: false,\n      });\n    },\n    updateProps: (select: 'leading' | 'trailing', newProps: Object) => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators(\n        [select === 'leading' ? prevCellKey : cellKey],\n        newProps,\n      );\n    },\n  };\n\n  updateSeparatorProps(newProps: Object) {\n    this.setState(state => ({\n      separatorProps: {...state.separatorProps, ...newProps},\n    }));\n  }\n\n  componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  }\n\n  render() {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      fillRateHelper,\n      horizontal,\n      item,\n      index,\n      inversionStyle,\n      parentProps,\n    } = this.props;\n    const {renderItem, getItemLayout} = parentProps;\n    invariant(renderItem, 'no renderItem!');\n    const element = renderItem({\n      item,\n      index,\n      separators: this._separators,\n    });\n    const onLayout =\n      /* $FlowFixMe(>=0.68.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.68 was deployed. To see the error delete this\n       * comment and run Flow. */\n      getItemLayout && !parentProps.debug && !fillRateHelper.enabled()\n        ? undefined\n        : this.props.onLayout;\n    // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and\n    // called explicitly by `ScrollViewStickyHeader`.\n    const itemSeparator = ItemSeparatorComponent && (\n      <ItemSeparatorComponent {...this.state.separatorProps} />\n    );\n    const cellStyle = inversionStyle\n      ? horizontal\n        ? [{flexDirection: 'row-reverse'}, inversionStyle]\n        : [{flexDirection: 'column-reverse'}, inversionStyle]\n      : horizontal\n        ? [{flexDirection: 'row'}, inversionStyle]\n        : inversionStyle;\n    if (!CellRendererComponent) {\n      return (\n        <View style={cellStyle} onLayout={onLayout}>\n          {element}\n          {itemSeparator}\n        </View>\n      );\n    }\n    return (\n      <CellRendererComponent\n        {...this.props}\n        style={cellStyle}\n        onLayout={onLayout}>\n        {element}\n        {itemSeparator}\n      </CellRendererComponent>\n    );\n  }\n}\n\nclass VirtualizedCellWrapper extends React.Component<{\n  cellKey: string,\n  children: React.Node,\n}> {\n  static childContextTypes = {\n    virtualizedCell: PropTypes.shape({\n      cellKey: PropTypes.string,\n    }),\n  };\n\n  getChildContext() {\n    return {\n      virtualizedCell: {\n        cellKey: this.props.cellKey,\n      },\n    };\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nconst styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{scaleY: -1}],\n  },\n  horizontallyInverted: {\n    transform: [{scaleX: -1}],\n  },\n});\n\nmodule.exports = VirtualizedList;\n"]}