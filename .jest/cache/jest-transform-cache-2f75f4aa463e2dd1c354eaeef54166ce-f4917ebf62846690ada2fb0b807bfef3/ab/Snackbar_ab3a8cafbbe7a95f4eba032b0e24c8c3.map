{"version":3,"sources":["Snackbar.js"],"names":["DURATION_SHORT","DURATION_MEDIUM","DURATION_LONG","Snackbar","opacity","Animated","Value","hidden","props","visible","_show","_hide","clearTimeout","_hideTimeout","setState","timing","state","toValue","duration","useNativeDriver","start","finished","isInfinity","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","setTimeout","onDismiss","prevProps","_toggle","children","action","theme","style","colors","roundness","styles","wrapper","container","borderRadius","transform","scale","interpolate","inputRange","outputRange","content","marginRight","accessibilityLabel","onPress","button","accent","label","toUpperCase","React","Component","StyleSheet","create","position","bottom","width","elevation","backgroundColor","flexDirection","justifyContent","alignItems","margin","color","white","marginLeft","marginVertical","flexWrap","flex","marginHorizontal"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { StyleSheet, Animated, SafeAreaView } from 'react-native';\n\nimport Button from './Button';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\nimport { withTheme } from '../core/theming';\nimport { white } from '../styles/colors';\nimport type { Theme } from '../types';\n\ntype Props = {|\n  /**\n   * Whether the Snackbar is currently visible.\n   */\n  visible: boolean,\n  /**\n   * Label and press callback for the action button. It should contain the following properties:\n   * - `label` - Label of the action button\n   * - `onPress` - Callback that is called when action button is pressed.\n   */\n  action?: {\n    label: string,\n    accessibilityLabel?: string,\n    onPress: () => mixed,\n  },\n  /**\n   * The duration for which the Snackbar is shown.\n   */\n  duration?: number,\n  /**\n   * Callback called when Snackbar is dismissed. The `visible` prop needs to be updated when this is called.\n   */\n  onDismiss: () => mixed,\n  /**\n   * Text content of the Snackbar.\n   */\n  children: React.Node,\n  style?: any,\n  /**\n   * @optional\n   */\n  theme: Theme,\n|};\n\ntype State = {\n  opacity: Animated.Value,\n  hidden: boolean,\n};\n\nconst DURATION_SHORT = 4000;\nconst DURATION_MEDIUM = 7000;\nconst DURATION_LONG = 10000;\n\n/**\n * Snackbars provide brief feedback about an operation through a message at the bottom of the screen.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/snackbar.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { Snackbar } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     visible: false,\n *   };\n *\n *   render() {\n *     const { visible } = this.state;\n *     return (\n *       <View style={styles.container}>\n *         <Button\n *           onPress={() => this.setState(state => ({ visible: !state.visible }))}\n *         >\n *           {this.state.visible ? 'Hide' : 'Show'}\n *         </Button>\n *         <Snackbar\n *           visible={this.state.visible}\n *           onDismiss={() => this.setState({ visible: false })}\n *           action={{\n *             label: 'Undo',\n *             onPress: () => {\n *               // Do something\n *             },\n *           }}\n *         >\n *           Hey there! I'm a Snackbar.\n *         </Snackbar>\n *       </View>\n *     );\n *   }\n * }\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     justifyContent: 'space-between',\n *   },\n * });\n * ```\n */\nclass Snackbar extends React.Component<Props, State> {\n  /**\n   * Show the Snackbar for a short duration.\n   */\n  static DURATION_SHORT = DURATION_SHORT;\n\n  /**\n   * Show the Snackbar for a medium duration.\n   */\n  static DURATION_MEDIUM = DURATION_MEDIUM;\n\n  /**\n   * Show the Snackbar for a long duration.\n   */\n  static DURATION_LONG = DURATION_LONG;\n\n  static defaultProps = {\n    duration: DURATION_MEDIUM,\n  };\n\n  state = {\n    opacity: new Animated.Value(0.0),\n    hidden: !this.props.visible,\n  };\n\n  componentDidMount() {\n    if (this.props.visible) {\n      this._show();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.visible !== this.props.visible) {\n      this._toggle();\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this._hideTimeout);\n  }\n\n  _toggle = () => {\n    if (this.props.visible) {\n      this._show();\n    } else {\n      this._hide();\n    }\n  };\n\n  _show = () => {\n    clearTimeout(this._hideTimeout);\n    this.setState({\n      hidden: false,\n    });\n    Animated.timing(this.state.opacity, {\n      toValue: 1,\n      duration: 200,\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (finished) {\n        const { duration } = this.props;\n        const isInfinity =\n          duration === Number.POSITIVE_INFINITY ||\n          duration === Number.NEGATIVE_INFINITY;\n\n        if (finished && !isInfinity) {\n          this._hideTimeout = setTimeout(this.props.onDismiss, duration);\n        }\n      }\n    });\n  };\n\n  _hide = () => {\n    clearTimeout(this._hideTimeout);\n\n    Animated.timing(this.state.opacity, {\n      toValue: 0,\n      duration: 100,\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (finished) {\n        this.setState({ hidden: true });\n      }\n    });\n  };\n\n  _hideTimeout: TimeoutID;\n\n  render() {\n    const { children, visible, action, onDismiss, theme, style } = this.props;\n    const { colors, roundness } = theme;\n\n    if (this.state.hidden) {\n      return null;\n    }\n\n    return (\n      <SafeAreaView pointerEvents=\"box-none\" style={styles.wrapper}>\n        <Surface\n          pointerEvents=\"box-none\"\n          accessibilityLiveRegion=\"polite\"\n          style={[\n            styles.container,\n            {\n              borderRadius: roundness,\n              opacity: this.state.opacity,\n              transform: [\n                {\n                  scale: visible\n                    ? this.state.opacity.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [0.9, 1],\n                      })\n                    : 1,\n                },\n              ],\n            },\n            style,\n          ]}\n        >\n          <Text style={[styles.content, { marginRight: action ? 0 : 16 }]}>\n            {children}\n          </Text>\n          {action ? (\n            <Button\n              accessibilityLabel={action.accessibilityLabel}\n              onPress={() => {\n                action.onPress();\n                onDismiss();\n              }}\n              style={styles.button}\n              color={colors.accent}\n              compact\n              mode=\"text\"\n            >\n              {action.label.toUpperCase()}\n            </Button>\n          ) : null}\n        </Surface>\n      </SafeAreaView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n  },\n  container: {\n    elevation: 6,\n    backgroundColor: '#323232',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: 8,\n    borderRadius: 4,\n  },\n  content: {\n    color: white,\n    marginLeft: 16,\n    marginVertical: 14,\n    flexWrap: 'wrap',\n    flex: 1,\n  },\n  button: {\n    marginHorizontal: 8,\n    marginVertical: 6,\n  },\n});\n\nexport default withTheme(Snackbar);\n"]}