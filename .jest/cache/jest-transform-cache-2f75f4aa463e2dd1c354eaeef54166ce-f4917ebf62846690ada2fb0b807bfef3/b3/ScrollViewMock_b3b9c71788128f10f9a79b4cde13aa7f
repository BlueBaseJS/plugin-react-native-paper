ad93eaff2f88fdf5cfcdbd4c11046906
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var React = require('React');

var View = require('View');

var requireNativeComponent = require('requireNativeComponent');

var RCTScrollView = requireNativeComponent('RCTScrollView');
var ScrollViewComponent = jest.genMockFromModule('ScrollView');

var ScrollViewMock = function (_ScrollViewComponent) {
  (0, _inherits2.default)(ScrollViewMock, _ScrollViewComponent);

  function ScrollViewMock() {
    (0, _classCallCheck2.default)(this, ScrollViewMock);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ScrollViewMock).apply(this, arguments));
  }

  (0, _createClass2.default)(ScrollViewMock, [{
    key: "render",
    value: function render() {
      return React.createElement(RCTScrollView, this.props, this.props.refreshControl, React.createElement(View, null, this.props.children));
    }
  }]);
  return ScrollViewMock;
}(ScrollViewComponent);

module.exports = ScrollViewMock;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNjcm9sbFZpZXdNb2NrLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsIlZpZXciLCJyZXF1aXJlTmF0aXZlQ29tcG9uZW50IiwiUkNUU2Nyb2xsVmlldyIsIlNjcm9sbFZpZXdDb21wb25lbnQiLCJqZXN0IiwiZ2VuTW9ja0Zyb21Nb2R1bGUiLCJTY3JvbGxWaWV3TW9jayIsInByb3BzIiwicmVmcmVzaENvbnRyb2wiLCJjaGlsZHJlbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQVlBOzs7Ozs7Ozs7Ozs7OztBQUlBLElBQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0EsSUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFFQSxJQUFNRSxzQkFBc0IsR0FBR0YsT0FBTyxDQUFDLHdCQUFELENBQXRDOztBQUVBLElBQU1HLGFBQWEsR0FBR0Qsc0JBQXNCLENBQUMsZUFBRCxDQUE1QztBQUVBLElBQU1FLG1CQUFtQixHQUFHQyxJQUFJLENBQUNDLGlCQUFMLENBQXVCLFlBQXZCLENBQTVCOztJQUVNQyxjOzs7Ozs7Ozs7OzZCQUNLO0FBQ1AsYUFDRSxvQkFBQyxhQUFELEVBQW1CLEtBQUtDLEtBQXhCLEVBQ0csS0FBS0EsS0FBTCxDQUFXQyxjQURkLEVBRUUsb0JBQUMsSUFBRCxRQUFPLEtBQUtELEtBQUwsQ0FBV0UsUUFBbEIsQ0FGRixDQURGO0FBTUQ7OztFQVIwQk4sbUI7O0FBVzdCTyxNQUFNLENBQUNDLE9BQVAsR0FBaUJMLGNBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBAZmxvd1xuICovXG5cbi8qIGVzbGludC1lbnYgamVzdCAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmRlY2xhcmUgdmFyIGplc3Q6IGFueTtcblxuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdSZWFjdCcpO1xuY29uc3QgVmlldyA9IHJlcXVpcmUoJ1ZpZXcnKTtcblxuY29uc3QgcmVxdWlyZU5hdGl2ZUNvbXBvbmVudCA9IHJlcXVpcmUoJ3JlcXVpcmVOYXRpdmVDb21wb25lbnQnKTtcblxuY29uc3QgUkNUU2Nyb2xsVmlldyA9IHJlcXVpcmVOYXRpdmVDb21wb25lbnQoJ1JDVFNjcm9sbFZpZXcnKTtcblxuY29uc3QgU2Nyb2xsVmlld0NvbXBvbmVudCA9IGplc3QuZ2VuTW9ja0Zyb21Nb2R1bGUoJ1Njcm9sbFZpZXcnKTtcblxuY2xhc3MgU2Nyb2xsVmlld01vY2sgZXh0ZW5kcyBTY3JvbGxWaWV3Q29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8UkNUU2Nyb2xsVmlldyB7Li4udGhpcy5wcm9wc30+XG4gICAgICAgIHt0aGlzLnByb3BzLnJlZnJlc2hDb250cm9sfVxuICAgICAgICA8Vmlldz57dGhpcy5wcm9wcy5jaGlsZHJlbn08L1ZpZXc+XG4gICAgICA8L1JDVFNjcm9sbFZpZXc+XG4gICAgKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFNjcm9sbFZpZXdNb2NrO1xuIl19