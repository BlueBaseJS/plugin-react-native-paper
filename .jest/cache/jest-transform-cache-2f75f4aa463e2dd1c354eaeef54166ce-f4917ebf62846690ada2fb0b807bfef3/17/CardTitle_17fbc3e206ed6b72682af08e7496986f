db19b38b000db83f8e74f9eb976f0658
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _theming = require("../../core/theming");

var _Caption = _interopRequireDefault(require("./../Typography/Caption"));

var _Title = _interopRequireDefault(require("./../Typography/Title"));

var LEFT_SIZE = 40;

var CardTitle = function (_React$Component) {
  (0, _inherits2.default)(CardTitle, _React$Component);

  function CardTitle() {
    (0, _classCallCheck2.default)(this, CardTitle);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CardTitle).apply(this, arguments));
  }

  (0, _createClass2.default)(CardTitle, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          left = _this$props.left,
          right = _this$props.right,
          subtitle = _this$props.subtitle,
          subtitleStyle = _this$props.subtitleStyle,
          style = _this$props.style,
          title = _this$props.title,
          titleStyle = _this$props.titleStyle;
      return React.createElement(_reactNative.View, {
        style: [styles.container, {
          height: subtitle || left || right ? 72 : 50
        }, style]
      }, left ? React.createElement(_reactNative.View, {
        style: [styles.left]
      }, left({
        size: LEFT_SIZE
      })) : null, React.createElement(_reactNative.View, {
        style: [styles.titles]
      }, title ? React.createElement(_Title.default, {
        style: [styles.title, {
          marginBottom: subtitle ? 0 : 2
        }, titleStyle],
        numberOfLines: 1
      }, title) : null, subtitle ? React.createElement(_Caption.default, {
        style: [styles.subtitle, subtitleStyle],
        numberOfLines: 1
      }, subtitle) : null), React.createElement(_reactNative.View, null, right ? right({
        size: 24
      }) : null));
    }
  }]);
  return CardTitle;
}(React.Component);

(0, _defineProperty2.default)(CardTitle, "displayName", 'Card.Title');

var styles = _reactNative.StyleSheet.create({
  container: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    paddingLeft: 16
  },
  left: {
    justifyContent: 'center',
    marginRight: 16,
    height: LEFT_SIZE,
    width: LEFT_SIZE
  },
  titles: {
    flex: 1,
    flexDirection: 'column',
    justifyContent: 'center',
    height: 50
  },
  title: {
    minHeight: 30
  },
  subtitle: {
    minHeight: 20,
    marginVertical: 0
  }
});

var _default = (0, _theming.withTheme)(CardTitle);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhcmRUaXRsZS5qcyJdLCJuYW1lcyI6WyJMRUZUX1NJWkUiLCJDYXJkVGl0bGUiLCJwcm9wcyIsImxlZnQiLCJyaWdodCIsInN1YnRpdGxlIiwic3VidGl0bGVTdHlsZSIsInN0eWxlIiwidGl0bGUiLCJ0aXRsZVN0eWxlIiwic3R5bGVzIiwiY29udGFpbmVyIiwiaGVpZ2h0Iiwic2l6ZSIsInRpdGxlcyIsIm1hcmdpbkJvdHRvbSIsIlJlYWN0IiwiQ29tcG9uZW50IiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsImZsZXhEaXJlY3Rpb24iLCJhbGlnbkl0ZW1zIiwianVzdGlmeUNvbnRlbnQiLCJwYWRkaW5nTGVmdCIsIm1hcmdpblJpZ2h0Iiwid2lkdGgiLCJmbGV4IiwibWluSGVpZ2h0IiwibWFyZ2luVmVydGljYWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQTJDQSxJQUFNQSxTQUFTLEdBQUcsRUFBbEI7O0lBMEJNQyxTOzs7Ozs7Ozs7OzZCQUdLO0FBQUEsd0JBU0gsS0FBS0MsS0FURjtBQUFBLFVBRUxDLElBRkssZUFFTEEsSUFGSztBQUFBLFVBR0xDLEtBSEssZUFHTEEsS0FISztBQUFBLFVBSUxDLFFBSkssZUFJTEEsUUFKSztBQUFBLFVBS0xDLGFBTEssZUFLTEEsYUFMSztBQUFBLFVBTUxDLEtBTkssZUFNTEEsS0FOSztBQUFBLFVBT0xDLEtBUEssZUFPTEEsS0FQSztBQUFBLFVBUUxDLFVBUkssZUFRTEEsVUFSSztBQVdQLGFBQ0Usb0JBQUMsaUJBQUQ7QUFDRSxRQUFBLEtBQUssRUFBRSxDQUNMQyxNQUFNLENBQUNDLFNBREYsRUFFTDtBQUFFQyxVQUFBQSxNQUFNLEVBQUVQLFFBQVEsSUFBSUYsSUFBWixJQUFvQkMsS0FBcEIsR0FBNEIsRUFBNUIsR0FBaUM7QUFBM0MsU0FGSyxFQUdMRyxLQUhLO0FBRFQsU0FPR0osSUFBSSxHQUNILG9CQUFDLGlCQUFEO0FBQU0sUUFBQSxLQUFLLEVBQUUsQ0FBQ08sTUFBTSxDQUFDUCxJQUFSO0FBQWIsU0FDR0EsSUFBSSxDQUFDO0FBQ0pVLFFBQUFBLElBQUksRUFBRWI7QUFERixPQUFELENBRFAsQ0FERyxHQU1ELElBYk4sRUFlRSxvQkFBQyxpQkFBRDtBQUFNLFFBQUEsS0FBSyxFQUFFLENBQUNVLE1BQU0sQ0FBQ0ksTUFBUjtBQUFiLFNBQ0dOLEtBQUssR0FDSixvQkFBQyxjQUFEO0FBQ0UsUUFBQSxLQUFLLEVBQUUsQ0FDTEUsTUFBTSxDQUFDRixLQURGLEVBRUw7QUFBRU8sVUFBQUEsWUFBWSxFQUFFVixRQUFRLEdBQUcsQ0FBSCxHQUFPO0FBQS9CLFNBRkssRUFHTEksVUFISyxDQURUO0FBTUUsUUFBQSxhQUFhLEVBQUU7QUFOakIsU0FRR0QsS0FSSCxDQURJLEdBV0YsSUFaTixFQWNHSCxRQUFRLEdBQ1Asb0JBQUMsZ0JBQUQ7QUFBUyxRQUFBLEtBQUssRUFBRSxDQUFDSyxNQUFNLENBQUNMLFFBQVIsRUFBa0JDLGFBQWxCLENBQWhCO0FBQWtELFFBQUEsYUFBYSxFQUFFO0FBQWpFLFNBQ0dELFFBREgsQ0FETyxHQUlMLElBbEJOLENBZkYsRUFvQ0Usb0JBQUMsaUJBQUQsUUFBT0QsS0FBSyxHQUFHQSxLQUFLLENBQUM7QUFBRVMsUUFBQUEsSUFBSSxFQUFFO0FBQVIsT0FBRCxDQUFSLEdBQXlCLElBQXJDLENBcENGLENBREY7QUF3Q0Q7OztFQXREcUJHLEtBQUssQ0FBQ0MsUzs7OEJBQXhCaEIsUyxpQkFDaUIsWTs7QUF3RHZCLElBQU1TLE1BQU0sR0FBR1Esd0JBQVdDLE1BQVgsQ0FBa0I7QUFDL0JSLEVBQUFBLFNBQVMsRUFBRTtBQUNUUyxJQUFBQSxhQUFhLEVBQUUsS0FETjtBQUVUQyxJQUFBQSxVQUFVLEVBQUUsUUFGSDtBQUdUQyxJQUFBQSxjQUFjLEVBQUUsZUFIUDtBQUlUQyxJQUFBQSxXQUFXLEVBQUU7QUFKSixHQURvQjtBQVEvQnBCLEVBQUFBLElBQUksRUFBRTtBQUNKbUIsSUFBQUEsY0FBYyxFQUFFLFFBRFo7QUFFSkUsSUFBQUEsV0FBVyxFQUFFLEVBRlQ7QUFHSlosSUFBQUEsTUFBTSxFQUFFWixTQUhKO0FBSUp5QixJQUFBQSxLQUFLLEVBQUV6QjtBQUpILEdBUnlCO0FBZS9CYyxFQUFBQSxNQUFNLEVBQUU7QUFDTlksSUFBQUEsSUFBSSxFQUFFLENBREE7QUFFTk4sSUFBQUEsYUFBYSxFQUFFLFFBRlQ7QUFHTkUsSUFBQUEsY0FBYyxFQUFFLFFBSFY7QUFJTlYsSUFBQUEsTUFBTSxFQUFFO0FBSkYsR0FmdUI7QUFzQi9CSixFQUFBQSxLQUFLLEVBQUU7QUFDTG1CLElBQUFBLFNBQVMsRUFBRTtBQUROLEdBdEJ3QjtBQTBCL0J0QixFQUFBQSxRQUFRLEVBQUU7QUFDUnNCLElBQUFBLFNBQVMsRUFBRSxFQURIO0FBRVJDLElBQUFBLGNBQWMsRUFBRTtBQUZSO0FBMUJxQixDQUFsQixDQUFmOztlQWdDZSx3QkFBVTNCLFNBQVYsQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEBmbG93ICovXG5cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFN0eWxlU2hlZXQsIFZpZXcgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IHsgd2l0aFRoZW1lIH0gZnJvbSAnLi4vLi4vY29yZS90aGVtaW5nJztcbmltcG9ydCBDYXB0aW9uIGZyb20gJy4vLi4vVHlwb2dyYXBoeS9DYXB0aW9uJztcbmltcG9ydCBUaXRsZSBmcm9tICcuLy4uL1R5cG9ncmFwaHkvVGl0bGUnO1xuaW1wb3J0IHR5cGUgeyBUaGVtZSB9IGZyb20gJy4uLy4uL3R5cGVzJztcblxudHlwZSBQcm9wcyA9IFJlYWN0LkVsZW1lbnRDb25maWc8dHlwZW9mIFZpZXc+ICYge3xcbiAgLyoqXG4gICAqIFRleHQgZm9yIHRoZSB0aXRsZS5cbiAgICovXG4gIHRpdGxlOiBSZWFjdC5Ob2RlLFxuICAvKipcbiAgICogU3R5bGUgZm9yIHRoZSB0aXRsZS5cbiAgICovXG4gIHRpdGxlU3R5bGU/OiBhbnksXG4gIC8qKlxuICAgKiBUZXh0IGZvciB0aGUgc3VidGl0bGUuXG4gICAqL1xuICBzdWJ0aXRsZT86IFJlYWN0Lk5vZGUsXG4gIC8qKlxuICAgKiBTdHlsZSBmb3IgdGhlIHN1YnRpdGxlLlxuICAgKi9cbiAgc3VidGl0bGVTdHlsZT86IGFueSxcbiAgLyoqXG4gICAqIENhbGxiYWNrIHdoaWNoIHJldHVybnMgYSBSZWFjdCBlbGVtZW50IHRvIGRpc3BsYXkgb24gdGhlIGxlZnQgc2lkZS5cbiAgICovXG4gIGxlZnQ/OiAocHJvcHM6IHsgc2l6ZTogbnVtYmVyIH0pID0+IFJlYWN0Lk5vZGUsXG4gIC8qKlxuICAgKiBDYWxsYmFjayB3aGljaCByZXR1cm5zIGEgUmVhY3QgZWxlbWVudCB0byBkaXNwbGF5IG9uIHRoZSByaWdodCBzaWRlLlxuICAgKi9cbiAgcmlnaHQ/OiAocHJvcHM6IHsgc2l6ZTogbnVtYmVyIH0pID0+IFJlYWN0Lk5vZGUsXG4gIC8qKlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIGluZGV4PzogbnVtYmVyLFxuICAvKipcbiAgICogQGludGVybmFsXG4gICAqL1xuICB0b3RhbD86IG51bWJlcixcbiAgc3R5bGU/OiBhbnksXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICovXG4gIHRoZW1lOiBUaGVtZSxcbnx9O1xuXG5jb25zdCBMRUZUX1NJWkUgPSA0MDtcblxuLyoqXG4gKiBBIGNvbXBvbmVudCB0byBzaG93IGEgdGl0bGUsIHN1YnRpdGxlIGFuZCBhbiBhdmF0YXIgaW5zaWRlIGEgQ2FyZC5cbiAqXG4gKiA8ZGl2IGNsYXNzPVwic2NyZWVuc2hvdHNcIj5cbiAqICAgPGltZyBjbGFzcz1cIm1lZGl1bVwiIHNyYz1cInNjcmVlbnNob3RzL2NhcmQtdGl0bGUtMS5wbmdcIiAvPlxuICogPC9kaXY+XG4gKlxuICogIyMgVXNhZ2VcbiAqIGBgYGpzXG4gKiBpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG4gKiBpbXBvcnQgeyBBdmF0YXIsIENhcmQsIEljb25CdXR0b24gfSBmcm9tICdyZWFjdC1uYXRpdmUtcGFwZXInO1xuICpcbiAqIGNvbnN0IE15Q29tcG9uZW50ID0gKCkgPT4gKFxuICogICA8Q2FyZC5UaXRsZVxuICogICAgIHRpdGxlPVwiQ2FyZCBUaXRsZVwiXG4gKiAgICAgc3VidGl0bGU9XCJDYXJkIFN1YnRpdGxlXCJcbiAqICAgICBsZWZ0PXsocHJvcHMpID0+IDxBdmF0YXIuSWNvbiB7Li4ucHJvcHN9IGljb249XCJmb2xkZXJcIiAvPn1cbiAqICAgICByaWdodD17KHByb3BzKSA9PiA8SWNvbkJ1dHRvbiB7Li4ucHJvcHN9IGljb249XCJtb3JlLXZlcnRcIiBvblByZXNzPXsoKSA9PiB7fX0gLz59XG4gKiAgIC8+XG4gKiApO1xuICpcbiAqIGV4cG9ydCBkZWZhdWx0IE15Q29tcG9uZW50O1xuICogYGBgXG4gKi9cbmNsYXNzIENhcmRUaXRsZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxQcm9wcz4ge1xuICBzdGF0aWMgZGlzcGxheU5hbWUgPSAnQ2FyZC5UaXRsZSc7XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIGxlZnQsXG4gICAgICByaWdodCxcbiAgICAgIHN1YnRpdGxlLFxuICAgICAgc3VidGl0bGVTdHlsZSxcbiAgICAgIHN0eWxlLFxuICAgICAgdGl0bGUsXG4gICAgICB0aXRsZVN0eWxlLFxuICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxWaWV3XG4gICAgICAgIHN0eWxlPXtbXG4gICAgICAgICAgc3R5bGVzLmNvbnRhaW5lcixcbiAgICAgICAgICB7IGhlaWdodDogc3VidGl0bGUgfHwgbGVmdCB8fCByaWdodCA/IDcyIDogNTAgfSxcbiAgICAgICAgICBzdHlsZSxcbiAgICAgICAgXX1cbiAgICAgID5cbiAgICAgICAge2xlZnQgPyAoXG4gICAgICAgICAgPFZpZXcgc3R5bGU9e1tzdHlsZXMubGVmdF19PlxuICAgICAgICAgICAge2xlZnQoe1xuICAgICAgICAgICAgICBzaXplOiBMRUZUX1NJWkUsXG4gICAgICAgICAgICB9KX1cbiAgICAgICAgICA8L1ZpZXc+XG4gICAgICAgICkgOiBudWxsfVxuXG4gICAgICAgIDxWaWV3IHN0eWxlPXtbc3R5bGVzLnRpdGxlc119PlxuICAgICAgICAgIHt0aXRsZSA/IChcbiAgICAgICAgICAgIDxUaXRsZVxuICAgICAgICAgICAgICBzdHlsZT17W1xuICAgICAgICAgICAgICAgIHN0eWxlcy50aXRsZSxcbiAgICAgICAgICAgICAgICB7IG1hcmdpbkJvdHRvbTogc3VidGl0bGUgPyAwIDogMiB9LFxuICAgICAgICAgICAgICAgIHRpdGxlU3R5bGUsXG4gICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgIG51bWJlck9mTGluZXM9ezF9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHt0aXRsZX1cbiAgICAgICAgICAgIDwvVGl0bGU+XG4gICAgICAgICAgKSA6IG51bGx9XG5cbiAgICAgICAgICB7c3VidGl0bGUgPyAoXG4gICAgICAgICAgICA8Q2FwdGlvbiBzdHlsZT17W3N0eWxlcy5zdWJ0aXRsZSwgc3VidGl0bGVTdHlsZV19IG51bWJlck9mTGluZXM9ezF9PlxuICAgICAgICAgICAgICB7c3VidGl0bGV9XG4gICAgICAgICAgICA8L0NhcHRpb24+XG4gICAgICAgICAgKSA6IG51bGx9XG4gICAgICAgIDwvVmlldz5cblxuICAgICAgICA8Vmlldz57cmlnaHQgPyByaWdodCh7IHNpemU6IDI0IH0pIDogbnVsbH08L1ZpZXc+XG4gICAgICA8L1ZpZXc+XG4gICAgKTtcbiAgfVxufVxuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIGNvbnRhaW5lcjoge1xuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIGp1c3RpZnlDb250ZW50OiAnc3BhY2UtYmV0d2VlbicsXG4gICAgcGFkZGluZ0xlZnQ6IDE2LFxuICB9LFxuXG4gIGxlZnQ6IHtcbiAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgbWFyZ2luUmlnaHQ6IDE2LFxuICAgIGhlaWdodDogTEVGVF9TSVpFLFxuICAgIHdpZHRoOiBMRUZUX1NJWkUsXG4gIH0sXG5cbiAgdGl0bGVzOiB7XG4gICAgZmxleDogMSxcbiAgICBmbGV4RGlyZWN0aW9uOiAnY29sdW1uJyxcbiAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgaGVpZ2h0OiA1MCxcbiAgfSxcblxuICB0aXRsZToge1xuICAgIG1pbkhlaWdodDogMzAsXG4gIH0sXG5cbiAgc3VidGl0bGU6IHtcbiAgICBtaW5IZWlnaHQ6IDIwLFxuICAgIG1hcmdpblZlcnRpY2FsOiAwLFxuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhUaGVtZShDYXJkVGl0bGUpO1xuIl19