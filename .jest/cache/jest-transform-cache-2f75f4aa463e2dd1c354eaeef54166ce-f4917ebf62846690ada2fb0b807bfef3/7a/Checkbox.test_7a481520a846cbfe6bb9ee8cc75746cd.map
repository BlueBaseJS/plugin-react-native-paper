{"version":3,"sources":["/Users/adnan/Desktop/plugin-react-native-paper/src/components/Checkbox/__tests__/Checkbox.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { BlueBaseApp } from '@bluebase/core';\nimport { Checkbox } from '../Checkbox';\nimport React from 'react';\nimport { getComponent } from '@bluebase/components';\nimport { mount } from 'enzyme';\nimport { waitForElement } from 'enzyme-async-helpers';\n\ndescribe.only('Checkbox', () => {\n\n\tit('should set the status to checked when checked is true', () => {\n\t\tconst component = mount(\n\t\t\t<Checkbox checked />\n\t\t);\n\n\t\t// expect(component).toMatchSnapshot();\n\t\texpect(component.childAt(0).prop('status')).toEqual('checked');\n\t});\n\n\tit('should set the status to unchecked when checked is false', () => {\n\t\tconst component = mount(\n\t\t\t<Checkbox checked={false} />\n\t\t);\n\n\t\texpect(component.childAt(0).prop('status')).toEqual('unchecked');\n\t});\n\n\tit('should set the status to indeterminate when indeterminate flag is true', () => {\n\t\tconst component = mount(\n\t\t\t<Checkbox checked={false} indeterminate />\n\t\t);\n\n\t\t// expect(component).toMatchSnapshot();\n\t\texpect(component.childAt(0).prop('status')).toEqual('indeterminate');\n\t});\n\n\tit('should pass the color as is when set to \"primary\"', async () => {\n\n\t\tconst BBCheckbox = getComponent('Checkbox');\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp components={{ Checkbox }}>\n\t\t\t\t<BBCheckbox color=\"primary\" />\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, BBCheckbox);\n\n\t\t// expect(component).toMatchSnapshot();\n\t\texpect(component.find('TouchableHighlight').last().prop('color')).toEqual('#3f51b5');\n\t});\n\n\tit('should pass the color as is when set to \"secondary\"', async () => {\n\n\t\tconst BBCheckbox = getComponent('Checkbox');\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp components={{ Checkbox }}>\n\t\t\t\t<BBCheckbox color=\"secondary\" />\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, BBCheckbox);\n\n\t\t// expect(component).toMatchSnapshot();\n\t\texpect(component.find('TouchableHighlight').last().prop('color')).toEqual('#f50057');\n\t});\n\n\tit('should pass the color as is when set to \"default\"', async () => {\n\n\t\tconst BBCheckbox = getComponent('Checkbox');\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp components={{ Checkbox }}>\n\t\t\t\t<BBCheckbox color=\"default\" />\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, BBCheckbox);\n\n\t\texpect(component.find('TouchableHighlight').last().prop('color')).toEqual('');\n\t\t// expect(component).toMatchSnapshot();\n\t});\n\n\tit('should set the color prop to undefined and create classes for custom colors', async () => {\n\t\tconst BBCheckbox = getComponent('Checkbox');\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp components={{ Checkbox }}>\n\t\t\t\t<BBCheckbox color=\"red\" />\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, BBCheckbox);\n\n\t\t// expect(component).toMatchSnapshot();\n\t\texpect(component.find('TouchableHighlight').last().prop('color')).toEqual('red');\n\t});\n\n\tit('should set the label component', async () => {\n\t\tconst BBCheckbox = getComponent('Checkbox');\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp components={{ Checkbox }}>\n\t\t\t\t<BBCheckbox label=\"Foo\" />\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, BBCheckbox);\n\n\t\t// expect(component).toMatchSnapshot();\n\t\texpect(component.find('Checkbox Text').last().text()).toEqual('Foo');\n\t});\n\n});\n\n\n"]}