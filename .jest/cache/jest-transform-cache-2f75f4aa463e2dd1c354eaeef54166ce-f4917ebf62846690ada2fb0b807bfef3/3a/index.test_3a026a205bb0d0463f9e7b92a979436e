3b2032b2f6c35f24918e78b1dae6ee94
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var core_1 = require("@bluebase/core");

var react_native_paper_1 = require("react-native-paper");

var index_1 = tslib_1.__importDefault(require("../index"));

var react_1 = tslib_1.__importDefault(require("react"));

var react_test_renderer_1 = tslib_1.__importDefault(require("react-test-renderer"));

var react_native_1 = require("react-native");

var deepmerge_1 = tslib_1.__importDefault(require("deepmerge"));

var Button = core_1.getComponent('Button');
test('Plugin should be correctly registered', function _callee() {
  var BB;
  return _regenerator.default.async(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          BB = new core_1.BlueBase();
          _context.next = 3;
          return _regenerator.default.awrap(BB.Plugins.register(index_1.default));

        case 3:
          expect(BB.Plugins.has('@bluebase/plugin-react-native-paper')).toBeTruthy();

        case 4:
        case "end":
          return _context.stop();
      }
    }
  });
});
test('should apply bluebase theme to react native paper components', function (done) {
  var rendered = react_test_renderer_1.default.create(react_1.default.createElement(core_1.BlueBaseApp, {
    plugins: [index_1.default]
  }, react_1.default.createElement(Button, null, "A Button")));
  setTimeout(function () {
    var props = rendered.root.findByType(react_native_1.Text).props;
    var style = deepmerge_1.default(props.style[0], deepmerge_1.default.all(props.style[1].filter(function (x) {
      return x !== undefined;
    })));
    expect(style.color).toBe('#3f51b5');
    done();
  });
});
test('should apply bluebase dark theme to react native paper components', function (done) {
  var configs = {
    'theme.name': 'bluebase-dark'
  };
  var rendered = react_test_renderer_1.default.create(react_1.default.createElement(core_1.BlueBaseApp, {
    configs: configs,
    plugins: [index_1.default]
  }, react_1.default.createElement(react_native_paper_1.Card, {
    testID: "dark-card"
  }, react_1.default.createElement(Button, null, "A Button"))));
  setTimeout(function () {
    expect(rendered.toJSON().children[0].props.style.backgroundColor).toBe('#424242');
    done();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZG5hbi9EZXNrdG9wL3BsdWdpbi1yZWFjdC1uYXRpdmUtcGFwZXIvc3JjL19fdGVzdHNfXy9pbmRleC50ZXN0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSxJQUFBLE1BQUEsR0FBQSxPQUFBLENBQUEsZ0JBQUEsQ0FBQTs7QUFDQSxJQUFBLG9CQUFBLEdBQUEsT0FBQSxDQUFBLG9CQUFBLENBQUE7O0FBQ0EsSUFBQSxPQUFBLEdBQUEsT0FBQSxDQUFBLGVBQUEsQ0FBQSxPQUFBLENBQUEsVUFBQSxDQUFBLENBQUE7O0FBQ0EsSUFBQSxPQUFBLEdBQUEsT0FBQSxDQUFBLGVBQUEsQ0FBQSxPQUFBLENBQUEsT0FBQSxDQUFBLENBQUE7O0FBQ0EsSUFBQSxxQkFBQSxHQUFBLE9BQUEsQ0FBQSxlQUFBLENBQUEsT0FBQSxDQUFBLHFCQUFBLENBQUEsQ0FBQTs7QUFDQSxJQUFBLGNBQUEsR0FBQSxPQUFBLENBQUEsY0FBQSxDQUFBOztBQUNBLElBQUEsV0FBQSxHQUFBLE9BQUEsQ0FBQSxlQUFBLENBQUEsT0FBQSxDQUFBLFdBQUEsQ0FBQSxDQUFBOztBQUdBLElBQU0sTUFBTSxHQUFHLE1BQUEsQ0FBQSxZQUFBLENBQWEsUUFBYixDQUFmO0FBRUEsSUFBSSxDQUFDLHVDQUFELEVBQTBDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUN2QyxVQUFBLEVBRHVDLEdBQ2xDLElBQUksTUFBQSxDQUFBLFFBQUosRUFEa0M7QUFBQTtBQUFBLDRDQUV2QyxFQUFFLENBQUMsT0FBSCxDQUFXLFFBQVgsQ0FBb0IsT0FBQSxDQUFBLE9BQXBCLENBRnVDOztBQUFBO0FBSTdDLFVBQUEsTUFBTSxDQUFDLEVBQUUsQ0FBQyxPQUFILENBQVcsR0FBWCxDQUFlLHFDQUFmLENBQUQsQ0FBTixDQUE4RCxVQUE5RDs7QUFKNkM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsQ0FBMUMsQ0FBSjtBQU9BLElBQUksQ0FBQyw4REFBRCxFQUFpRSxVQUFDLElBQUQsRUFBUztBQUM3RSxNQUFNLFFBQVEsR0FBRyxxQkFBQSxDQUFBLE9BQUEsQ0FBYSxNQUFiLENBQ2QsT0FBQSxDQUFBLE9BQUEsQ0FBQSxhQUFBLENBQUMsTUFBQSxDQUFBLFdBQUQsRUFBWTtBQUFDLElBQUEsT0FBTyxFQUFFLENBQUMsT0FBQSxDQUFBLE9BQUQ7QUFBVixHQUFaLEVBQ0QsT0FBQSxDQUFBLE9BQUEsQ0FBQSxhQUFBLENBQUMsTUFBRCxFQUFPLElBQVAsRUFBTyxVQUFQLENBREMsQ0FEYyxDQUFqQjtBQU1BLEVBQUEsVUFBVSxDQUFDLFlBQUs7QUFFZixRQUFNLEtBQUssR0FBRyxRQUFRLENBQUMsSUFBVCxDQUFjLFVBQWQsQ0FBeUIsY0FBQSxDQUFBLElBQXpCLEVBQStCLEtBQTdDO0FBQ0EsUUFBTSxLQUFLLEdBQVEsV0FBQSxDQUFBLE9BQUEsQ0FDbEIsS0FBSyxDQUFDLEtBQU4sQ0FBWSxDQUFaLENBRGtCLEVBRWxCLFdBQUEsQ0FBQSxPQUFBLENBQVUsR0FBVixDQUNDLEtBQUssQ0FBQyxLQUFOLENBQVksQ0FBWixFQUFlLE1BQWYsQ0FBc0IsVUFBQyxDQUFEO0FBQUEsYUFBWSxDQUFDLEtBQUssU0FBbEI7QUFBQSxLQUF0QixDQURELENBRmtCLENBQW5CO0FBTUEsSUFBQSxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQVAsQ0FBTixDQUFvQixJQUFwQixDQUF5QixTQUF6QjtBQUdBLElBQUEsSUFBSTtBQUNKLEdBYlMsQ0FBVjtBQWNBLENBckJHLENBQUo7QUF1QkEsSUFBSSxDQUFDLG1FQUFELEVBQXNFLFVBQUMsSUFBRCxFQUFTO0FBRWxGLE1BQU0sT0FBTyxHQUFHO0FBQ2Ysa0JBQWM7QUFEQyxHQUFoQjtBQUlBLE1BQU0sUUFBUSxHQUFHLHFCQUFBLENBQUEsT0FBQSxDQUFhLE1BQWIsQ0FDaEIsT0FBQSxDQUFBLE9BQUEsQ0FBQSxhQUFBLENBQUMsTUFBQSxDQUFBLFdBQUQsRUFBWTtBQUFDLElBQUEsT0FBTyxFQUFFLE9BQVY7QUFBbUIsSUFBQSxPQUFPLEVBQUUsQ0FBQyxPQUFBLENBQUEsT0FBRDtBQUE1QixHQUFaLEVBQ0MsT0FBQSxDQUFBLE9BQUEsQ0FBQSxhQUFBLENBQUMsb0JBQUEsQ0FBQSxJQUFELEVBQUs7QUFBQyxJQUFBLE1BQU0sRUFBQztBQUFSLEdBQUwsRUFBeUIsT0FBQSxDQUFBLE9BQUEsQ0FBQSxhQUFBLENBQUMsTUFBRCxFQUFPLElBQVAsRUFBTyxVQUFQLENBQXpCLENBREQsQ0FEZ0IsQ0FBakI7QUFNQSxFQUFBLFVBQVUsQ0FBQyxZQUFLO0FBQ2YsSUFBQSxNQUFNLENBQUUsUUFBZ0IsQ0FBQyxNQUFqQixHQUEwQixRQUExQixDQUFtQyxDQUFuQyxFQUFzQyxLQUF0QyxDQUE0QyxLQUE1QyxDQUFrRCxlQUFwRCxDQUFOLENBQTJFLElBQTNFLENBQWdGLFNBQWhGO0FBQ0EsSUFBQSxJQUFJO0FBQ0osR0FIUyxDQUFWO0FBSUEsQ0FoQkcsQ0FBSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJsdWVCYXNlLCBCbHVlQmFzZUFwcCwgZ2V0Q29tcG9uZW50IH0gZnJvbSAnQGJsdWViYXNlL2NvcmUnO1xuaW1wb3J0IHsgQ2FyZCB9IGZyb20gJ3JlYWN0LW5hdGl2ZS1wYXBlcic7XG5pbXBvcnQgUGx1Z2luIGZyb20gJy4uL2luZGV4JztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgVGVzdFJlbmRlcmVyIGZyb20gJ3JlYWN0LXRlc3QtcmVuZGVyZXInO1xuaW1wb3J0IHsgVGV4dCB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgZGVlcG1lcmdlIGZyb20gJ2RlZXBtZXJnZSc7XG5cblxuY29uc3QgQnV0dG9uID0gZ2V0Q29tcG9uZW50KCdCdXR0b24nKTtcblxudGVzdCgnUGx1Z2luIHNob3VsZCBiZSBjb3JyZWN0bHkgcmVnaXN0ZXJlZCcsIGFzeW5jICgpID0+IHtcblx0Y29uc3QgQkIgPSBuZXcgQmx1ZUJhc2UoKTtcblx0YXdhaXQgQkIuUGx1Z2lucy5yZWdpc3RlcihQbHVnaW4pO1xuXG5cdGV4cGVjdChCQi5QbHVnaW5zLmhhcygnQGJsdWViYXNlL3BsdWdpbi1yZWFjdC1uYXRpdmUtcGFwZXInKSkudG9CZVRydXRoeSgpO1xufSk7XG5cbnRlc3QoJ3Nob3VsZCBhcHBseSBibHVlYmFzZSB0aGVtZSB0byByZWFjdCBuYXRpdmUgcGFwZXIgY29tcG9uZW50cycsIChkb25lKSA9PiB7XG5cdGNvbnN0IHJlbmRlcmVkID0gVGVzdFJlbmRlcmVyLmNyZWF0ZShcbiAgICA8Qmx1ZUJhc2VBcHAgcGx1Z2lucz17W1BsdWdpbl19PlxuXHRcdFx0PEJ1dHRvbj5BIEJ1dHRvbjwvQnV0dG9uPlxuXHRcdDwvQmx1ZUJhc2VBcHA+XG5cdCk7XG5cblx0c2V0VGltZW91dCgoKSA9PiB7XG5cblx0XHRjb25zdCBwcm9wcyA9IHJlbmRlcmVkLnJvb3QuZmluZEJ5VHlwZShUZXh0KS5wcm9wcztcblx0XHRjb25zdCBzdHlsZTogYW55ID0gZGVlcG1lcmdlKFxuXHRcdFx0cHJvcHMuc3R5bGVbMF0sXG5cdFx0XHRkZWVwbWVyZ2UuYWxsKFxuXHRcdFx0XHRwcm9wcy5zdHlsZVsxXS5maWx0ZXIoKHg6IGFueSkgPT4geCAhPT0gdW5kZWZpbmVkKVxuXHRcdFx0KVxuXHRcdCk7XG5cdFx0ZXhwZWN0KHN0eWxlLmNvbG9yKS50b0JlKCcjM2Y1MWI1Jyk7XG5cdFx0Ly8gZXhwZWN0KHJlbmRlcmVkKS50b01hdGNoU25hcHNob3QoKTtcblx0XHQvLyBleHBlY3QocmVuZGVyZWQudG9KU09OKCkpLnRvTWF0Y2hTbmFwc2hvdCgpO1xuXHRcdGRvbmUoKTtcblx0fSk7XG59KTtcblxudGVzdCgnc2hvdWxkIGFwcGx5IGJsdWViYXNlIGRhcmsgdGhlbWUgdG8gcmVhY3QgbmF0aXZlIHBhcGVyIGNvbXBvbmVudHMnLCAoZG9uZSkgPT4ge1xuXG5cdGNvbnN0IGNvbmZpZ3MgPSB7XG5cdFx0J3RoZW1lLm5hbWUnOiAnYmx1ZWJhc2UtZGFyaydcblx0fTtcblxuXHRjb25zdCByZW5kZXJlZCA9IFRlc3RSZW5kZXJlci5jcmVhdGUoXG5cdFx0PEJsdWVCYXNlQXBwIGNvbmZpZ3M9e2NvbmZpZ3N9IHBsdWdpbnM9e1tQbHVnaW5dfT5cblx0XHRcdDxDYXJkIHRlc3RJRD1cImRhcmstY2FyZFwiPjxCdXR0b24+QSBCdXR0b248L0J1dHRvbj48L0NhcmQ+XG5cdFx0PC9CbHVlQmFzZUFwcD5cblx0KTtcblxuXHRzZXRUaW1lb3V0KCgpID0+IHtcblx0XHRleHBlY3QoKHJlbmRlcmVkIGFzIGFueSkudG9KU09OKCkuY2hpbGRyZW5bMF0ucHJvcHMuc3R5bGUuYmFja2dyb3VuZENvbG9yKS50b0JlKCcjNDI0MjQyJyk7XG5cdFx0ZG9uZSgpO1xuXHR9KTtcbn0pO1xuIl19