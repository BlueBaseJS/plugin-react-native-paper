{"version":3,"sources":["/Users/adnan/Desktop/plugin-react-native-paper/src/__tests__/index.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { BlueBase, BlueBaseApp, getComponent } from '@bluebase/core';\nimport { Card } from 'react-native-paper';\nimport Plugin from '../index';\nimport React from 'react';\nimport TestRenderer from 'react-test-renderer';\nimport { Text } from 'react-native';\nimport deepmerge from 'deepmerge';\n\n\nconst Button = getComponent('Button');\n\ntest('Plugin should be correctly registered', async () => {\n\tconst BB = new BlueBase();\n\tawait BB.Plugins.register(Plugin);\n\n\texpect(BB.Plugins.has('@bluebase/plugin-react-native-paper')).toBeTruthy();\n});\n\ntest('should apply bluebase theme to react native paper components', (done) => {\n\tconst rendered = TestRenderer.create(\n    <BlueBaseApp plugins={[Plugin]}>\n\t\t\t<Button>A Button</Button>\n\t\t</BlueBaseApp>\n\t);\n\n\tsetTimeout(() => {\n\n\t\tconst props = rendered.root.findByType(Text).props;\n\t\tconst style: any = deepmerge(\n\t\t\tprops.style[0],\n\t\t\tdeepmerge.all(\n\t\t\t\tprops.style[1].filter((x: any) => x !== undefined)\n\t\t\t)\n\t\t);\n\t\texpect(style.color).toBe('#3f51b5');\n\t\t// expect(rendered).toMatchSnapshot();\n\t\t// expect(rendered.toJSON()).toMatchSnapshot();\n\t\tdone();\n\t});\n});\n\ntest('should apply bluebase dark theme to react native paper components', (done) => {\n\n\tconst configs = {\n\t\t'theme.name': 'bluebase-dark'\n\t};\n\n\tconst rendered = TestRenderer.create(\n\t\t<BlueBaseApp configs={configs} plugins={[Plugin]}>\n\t\t\t<Card testID=\"dark-card\"><Button>A Button</Button></Card>\n\t\t</BlueBaseApp>\n\t);\n\n\tsetTimeout(() => {\n\t\texpect((rendered as any).toJSON().children[0].props.style.backgroundColor).toBe('#424242');\n\t\tdone();\n\t});\n});\n"]}