{"version":3,"sources":["ListViewMock.js"],"names":["ListViewDataSource","require","React","ScrollView","StaticRenderer","ListViewMock","latestRef","props","dataSource","renderFooter","renderHeader","rows","allRowIDs","rowIdentities","sectionIdx","length","sectionID","sectionIdentities","rowIDs","rowIdx","rowID","push","renderRow","bind","getRowData","renderScrollComponent","children","Component","module","exports"],"mappings":"AASA;;;;;;;;;;;;;;;;;;AAEA,IAAMA,kBAAkB,GAAGC,OAAO,CAAC,oBAAD,CAAlC;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AACA,IAAME,UAAU,GAAGF,OAAO,CAAC,YAAD,CAA1B;;AACA,IAAMG,cAAc,GAAGH,OAAO,CAAC,gBAAD,CAA9B;;IAEMI,Y;;;;;;;;;;wCAUgB;AAClBA,MAAAA,YAAY,CAACC,SAAb,GAAyB,IAAzB;AACD;;;6BACQ;AAAA,wBAC0C,KAAKC,KAD/C;AAAA,UACAC,UADA,eACAA,UADA;AAAA,UACYC,YADZ,eACYA,YADZ;AAAA,UAC0BC,YAD1B,eAC0BA,YAD1B;AAEP,UAAMC,IAAI,GAAG,CAACD,YAAY,IAAIA,YAAY,EAA7B,CAAb;AACA,UAAME,SAAS,GAAGJ,UAAU,CAACK,aAA7B;;AACA,WAAK,IAAIC,UAAU,GAAG,CAAtB,EAAyBA,UAAU,GAAGF,SAAS,CAACG,MAAhD,EAAwDD,UAAU,EAAlE,EAAsE;AACpE,YAAME,SAAS,GAAGR,UAAU,CAACS,iBAAX,CAA6BH,UAA7B,CAAlB;AACA,YAAMI,MAAM,GAAGN,SAAS,CAACE,UAAD,CAAxB;;AACA,aAAK,IAAIK,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAGD,MAAM,CAACH,MAArC,EAA6CI,MAAM,EAAnD,EAAuD;AACrD,cAAMC,KAAK,GAAGF,MAAM,CAACC,MAAD,CAApB;AAEAR,UAAAA,IAAI,CAACU,IAAL,CACE,oBAAC,cAAD;AACE,YAAA,GAAG,EAAE,aAAaL,SAAb,GAAyB,OAAzB,GAAmCI,KAD1C;AAEE,YAAA,YAAY,EAAE,IAFhB;AAGE,YAAA,MAAM,EAAE,KAAKb,KAAL,CAAWe,SAAX,CAAqBC,IAArB,CACN,IADM,EAENf,UAAU,CAACgB,UAAX,CAAsBV,UAAtB,EAAkCK,MAAlC,CAFM,EAGNH,SAHM,EAINI,KAJM;AAHV,YADF;AAYD;AACF;;AACDX,MAAAA,YAAY,IAAIE,IAAI,CAACU,IAAL,CAAUZ,YAAY,EAAtB,CAAhB;AACA,aAAO,KAAKF,KAAL,CAAWkB,qBAAX,iCAAqC,KAAKlB,KAA1C;AAAiDmB,QAAAA,QAAQ,EAAEf;AAA3D,SAAP;AACD;;;EAvCwBT,KAAK,CAACyB,S;;8BAA3BtB,Y,kBAEkB;AAMpBoB,EAAAA,qBAAqB,EAAE,+BAAAlB,KAAK;AAAA,WAAI,oBAAC,UAAD,EAAgBA,KAAhB,CAAJ;AAAA;AANR,C;8BAFlBF,Y,gBAwCgBL,kB;AAGtB4B,MAAM,CAACC,OAAP,GAAiBxB,YAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n'use strict';\n\nconst ListViewDataSource = require('ListViewDataSource');\nconst React = require('React');\nconst ScrollView = require('ScrollView');\nconst StaticRenderer = require('StaticRenderer');\n\nclass ListViewMock extends React.Component<$FlowFixMeProps> {\n  static latestRef: ?ListViewMock;\n  static defaultProps = {\n    /* $FlowFixMe(>=0.59.0 site=react_native_fb) This comment suppresses an\n     * error caught by Flow 0.59 which was not caught before. Most likely, this\n     * error is because an exported function parameter is missing an\n     * annotation. Without an annotation, these parameters are uncovered by\n     * Flow. */\n    renderScrollComponent: props => <ScrollView {...props} />,\n  };\n  componentDidMount() {\n    ListViewMock.latestRef = this;\n  }\n  render() {\n    const {dataSource, renderFooter, renderHeader} = this.props;\n    const rows = [renderHeader && renderHeader()];\n    const allRowIDs = dataSource.rowIdentities;\n    for (let sectionIdx = 0; sectionIdx < allRowIDs.length; sectionIdx++) {\n      const sectionID = dataSource.sectionIdentities[sectionIdx];\n      const rowIDs = allRowIDs[sectionIdx];\n      for (let rowIdx = 0; rowIdx < rowIDs.length; rowIdx++) {\n        const rowID = rowIDs[rowIdx];\n        // Row IDs are only unique in a section\n        rows.push(\n          <StaticRenderer\n            key={'section_' + sectionID + '_row_' + rowID}\n            shouldUpdate={true}\n            render={this.props.renderRow.bind(\n              null,\n              dataSource.getRowData(sectionIdx, rowIdx),\n              sectionID,\n              rowID,\n            )}\n          />,\n        );\n      }\n    }\n    renderFooter && rows.push(renderFooter());\n    return this.props.renderScrollComponent({...this.props, children: rows});\n  }\n  static DataSource = ListViewDataSource;\n}\n\nmodule.exports = ListViewMock;\n"]}