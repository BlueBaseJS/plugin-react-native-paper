{"version":3,"sources":["/Users/adnan/Desktop/plugin-react-native-paper/src/components/SelectionControl/SelectionControl.tsx"],"names":[],"mappings":";;;;;;;;;;;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAkBa,OAAA,CAAA,gBAAA,GAAmB,UAAC,KAAD,EAAiC;AAAA,MAExD,gBAFwD,GAEK,KAFL,CAExD,gBAFwD;AAAA,MAEtC,KAFsC,GAEK,KAFL,CAEtC,KAFsC;AAAA,MAE/B,cAF+B,GAEK,KAFL,CAE/B,cAF+B;AAAA,MAEf,MAFe,GAEK,KAFL,CAEf,MAFe;AAAA,MAEP,IAFO,GAEP,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,kBAAA,EAAA,OAAA,EAAA,gBAAA,EAAA,QAAA,CAAA,CAFO;;AAIhE,MAAM,IAAI,GAAG,OAAA,CAAA,OAAA,CAAM,aAAN,CAAoB,gBAApB,EAAoC,uBAAA,EAAA,EAC7C,IAD6C,CAApC,CAAb;;AAKA,MAAI,CAAC,KAAL,EAAY;AACX,WAAO,IAAP;AACA;;AAED,MAAM,UAAU,GAAyB;AACxC,IAAA,aAAa,EAAE;AADyB,GAAzC;;AAIA,MAAI,cAAc,KAAK,KAAvB,EAA8B;AAC7B,IAAA,UAAU,CAAC,aAAX,GAA2B,aAA3B;AACA;;AAED,MAAI,cAAc,KAAK,KAAvB,EAA8B;AAC7B,IAAA,UAAU,CAAC,aAAX,GAA2B,QAA3B;AACA,IAAA,UAAU,CAAC,cAAX,GAA4B,QAA5B;AACA;;AAED,MAAI,cAAc,KAAK,QAAvB,EAAiC;AAChC,IAAA,UAAU,CAAC,aAAX,GAA2B,gBAA3B;AACA,IAAA,UAAU,CAAC,cAAX,GAA4B,QAA5B;AACA;;AAED,SACC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,MAAA,CAAA,aAAD,EAAc,IAAd,EACE;AAAA,QAAG,KAAH,QAAG,KAAH;AAAA,WACA,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAA,IAAD,EAAK;AAAC,MAAA,KAAK,EAAE;AAAR,KAAL,EACE,IADF,EAEC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAA,IAAD,EAAK;AAAC,MAAA,KAAK,EAAE,CAAC;AAAE,QAAA,OAAO,EAAE,KAAK,CAAC,OAAN,CAAc;AAAzB,OAAD;AAAR,KAAL,EAAkD,KAAlD,CAFD,CADA;AAAA,GADF,CADD;AAUA,CAzCY","sourcesContent":["import { StyleProp, ViewStyle } from 'react-native';\nimport { Text, View } from '@bluebase/components';\nimport { ThemeConsumer, ThemeContextData } from '@bluebase/core';\nimport React from 'react';\n\nexport interface SelectionControlProps {\n\tControlComponent: React.ComponentType<any>;\n\n\t/**\n\t * The text to be used in an enclosing label element.\n\t */\n\tlabel?: React.ReactNode;\n\n\t/**\n\t * The position of the label.\n\t */\n\tlabelPlacement?: 'end' | 'start' | 'top' | 'bottom';\n\n\t[key: string]: any;\n}\n\nexport const SelectionControl = (props: SelectionControlProps) => {\n\n\tconst { ControlComponent, label, labelPlacement, styles, ...rest } = props;\n\n\tconst node = React.createElement(ControlComponent, {\n\t\t...rest,\n\t\t// style: [{ padding: 20, ...rest.style }],\n\t});\n\n\tif (!label) {\n\t\treturn node;\n\t}\n\n\tconst rootStyles: StyleProp<ViewStyle> = {\n\t\tflexDirection: 'row'\n\t};\n\n\tif (labelPlacement === 'end') {\n\t\trootStyles.flexDirection = 'row-reverse';\n\t}\n\n\tif (labelPlacement === 'top') {\n\t\trootStyles.flexDirection = 'column';\n\t\trootStyles.justifyContent = 'center';\n\t}\n\n\tif (labelPlacement === 'bottom') {\n\t\trootStyles.flexDirection = 'column-reverse';\n\t\trootStyles.justifyContent = 'center';\n\t}\n\n\treturn (\n\t\t<ThemeConsumer>\n\t\t\t{({ theme }: ThemeContextData) => (\n\t\t\t\t<View style={rootStyles}>\n\t\t\t\t\t{node}\n\t\t\t\t\t<Text style={[{ padding: theme.spacing.unit, }]}>{label}</Text>\n\t\t\t\t</View>\n\t\t\t)}\n\t\t</ThemeConsumer>\n\t);\n};\n"]}