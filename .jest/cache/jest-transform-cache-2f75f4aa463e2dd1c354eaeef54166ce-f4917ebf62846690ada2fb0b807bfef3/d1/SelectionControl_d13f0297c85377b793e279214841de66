4bc026393b3afd0ee0126ac570d489ed
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var components_1 = require("@bluebase/components");

var core_1 = require("@bluebase/core");

var react_1 = tslib_1.__importDefault(require("react"));

exports.SelectionControl = function (props) {
  var ControlComponent = props.ControlComponent,
      label = props.label,
      labelPlacement = props.labelPlacement,
      styles = props.styles,
      rest = tslib_1.__rest(props, ["ControlComponent", "label", "labelPlacement", "styles"]);

  var node = react_1.default.createElement(ControlComponent, (0, _extends2.default)({}, rest));

  if (!label) {
    return node;
  }

  var rootStyles = {
    flexDirection: 'row'
  };

  if (labelPlacement === 'end') {
    rootStyles.flexDirection = 'row-reverse';
  }

  if (labelPlacement === 'top') {
    rootStyles.flexDirection = 'column';
    rootStyles.justifyContent = 'center';
  }

  if (labelPlacement === 'bottom') {
    rootStyles.flexDirection = 'column-reverse';
    rootStyles.justifyContent = 'center';
  }

  return react_1.default.createElement(core_1.ThemeConsumer, null, function (_ref) {
    var theme = _ref.theme;
    return react_1.default.createElement(components_1.View, {
      style: rootStyles
    }, node, react_1.default.createElement(components_1.Text, {
      style: [{
        padding: theme.spacing.unit
      }]
    }, label));
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZG5hbi9EZXNrdG9wL3BsdWdpbi1yZWFjdC1uYXRpdmUtcGFwZXIvc3JjL2NvbXBvbmVudHMvU2VsZWN0aW9uQ29udHJvbC9TZWxlY3Rpb25Db250cm9sLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFDQSxJQUFBLFlBQUEsR0FBQSxPQUFBLENBQUEsc0JBQUEsQ0FBQTs7QUFDQSxJQUFBLE1BQUEsR0FBQSxPQUFBLENBQUEsZ0JBQUEsQ0FBQTs7QUFDQSxJQUFBLE9BQUEsR0FBQSxPQUFBLENBQUEsZUFBQSxDQUFBLE9BQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQTs7QUFrQmEsT0FBQSxDQUFBLGdCQUFBLEdBQW1CLFVBQUMsS0FBRCxFQUFpQztBQUFBLE1BRXhELGdCQUZ3RCxHQUVLLEtBRkwsQ0FFeEQsZ0JBRndEO0FBQUEsTUFFdEMsS0FGc0MsR0FFSyxLQUZMLENBRXRDLEtBRnNDO0FBQUEsTUFFL0IsY0FGK0IsR0FFSyxLQUZMLENBRS9CLGNBRitCO0FBQUEsTUFFZixNQUZlLEdBRUssS0FGTCxDQUVmLE1BRmU7QUFBQSxNQUVQLElBRk8sR0FFUCxPQUFBLENBQUEsTUFBQSxDQUFBLEtBQUEsRUFBQSxDQUFBLGtCQUFBLEVBQUEsT0FBQSxFQUFBLGdCQUFBLEVBQUEsUUFBQSxDQUFBLENBRk87O0FBSWhFLE1BQU0sSUFBSSxHQUFHLE9BQUEsQ0FBQSxPQUFBLENBQU0sYUFBTixDQUFvQixnQkFBcEIsRUFBb0MsdUJBQUEsRUFBQSxFQUM3QyxJQUQ2QyxDQUFwQyxDQUFiOztBQUtBLE1BQUksQ0FBQyxLQUFMLEVBQVk7QUFDWCxXQUFPLElBQVA7QUFDQTs7QUFFRCxNQUFNLFVBQVUsR0FBeUI7QUFDeEMsSUFBQSxhQUFhLEVBQUU7QUFEeUIsR0FBekM7O0FBSUEsTUFBSSxjQUFjLEtBQUssS0FBdkIsRUFBOEI7QUFDN0IsSUFBQSxVQUFVLENBQUMsYUFBWCxHQUEyQixhQUEzQjtBQUNBOztBQUVELE1BQUksY0FBYyxLQUFLLEtBQXZCLEVBQThCO0FBQzdCLElBQUEsVUFBVSxDQUFDLGFBQVgsR0FBMkIsUUFBM0I7QUFDQSxJQUFBLFVBQVUsQ0FBQyxjQUFYLEdBQTRCLFFBQTVCO0FBQ0E7O0FBRUQsTUFBSSxjQUFjLEtBQUssUUFBdkIsRUFBaUM7QUFDaEMsSUFBQSxVQUFVLENBQUMsYUFBWCxHQUEyQixnQkFBM0I7QUFDQSxJQUFBLFVBQVUsQ0FBQyxjQUFYLEdBQTRCLFFBQTVCO0FBQ0E7O0FBRUQsU0FDQyxPQUFBLENBQUEsT0FBQSxDQUFBLGFBQUEsQ0FBQyxNQUFBLENBQUEsYUFBRCxFQUFjLElBQWQsRUFDRTtBQUFBLFFBQUcsS0FBSCxRQUFHLEtBQUg7QUFBQSxXQUNBLE9BQUEsQ0FBQSxPQUFBLENBQUEsYUFBQSxDQUFDLFlBQUEsQ0FBQSxJQUFELEVBQUs7QUFBQyxNQUFBLEtBQUssRUFBRTtBQUFSLEtBQUwsRUFDRSxJQURGLEVBRUMsT0FBQSxDQUFBLE9BQUEsQ0FBQSxhQUFBLENBQUMsWUFBQSxDQUFBLElBQUQsRUFBSztBQUFDLE1BQUEsS0FBSyxFQUFFLENBQUM7QUFBRSxRQUFBLE9BQU8sRUFBRSxLQUFLLENBQUMsT0FBTixDQUFjO0FBQXpCLE9BQUQ7QUFBUixLQUFMLEVBQWtELEtBQWxELENBRkQsQ0FEQTtBQUFBLEdBREYsQ0FERDtBQVVBLENBekNZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3R5bGVQcm9wLCBWaWV3U3R5bGUgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IHsgVGV4dCwgVmlldyB9IGZyb20gJ0BibHVlYmFzZS9jb21wb25lbnRzJztcbmltcG9ydCB7IFRoZW1lQ29uc3VtZXIsIFRoZW1lQ29udGV4dERhdGEgfSBmcm9tICdAYmx1ZWJhc2UvY29yZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFNlbGVjdGlvbkNvbnRyb2xQcm9wcyB7XG5cdENvbnRyb2xDb21wb25lbnQ6IFJlYWN0LkNvbXBvbmVudFR5cGU8YW55PjtcblxuXHQvKipcblx0ICogVGhlIHRleHQgdG8gYmUgdXNlZCBpbiBhbiBlbmNsb3NpbmcgbGFiZWwgZWxlbWVudC5cblx0ICovXG5cdGxhYmVsPzogUmVhY3QuUmVhY3ROb2RlO1xuXG5cdC8qKlxuXHQgKiBUaGUgcG9zaXRpb24gb2YgdGhlIGxhYmVsLlxuXHQgKi9cblx0bGFiZWxQbGFjZW1lbnQ/OiAnZW5kJyB8ICdzdGFydCcgfCAndG9wJyB8ICdib3R0b20nO1xuXG5cdFtrZXk6IHN0cmluZ106IGFueTtcbn1cblxuZXhwb3J0IGNvbnN0IFNlbGVjdGlvbkNvbnRyb2wgPSAocHJvcHM6IFNlbGVjdGlvbkNvbnRyb2xQcm9wcykgPT4ge1xuXG5cdGNvbnN0IHsgQ29udHJvbENvbXBvbmVudCwgbGFiZWwsIGxhYmVsUGxhY2VtZW50LCBzdHlsZXMsIC4uLnJlc3QgfSA9IHByb3BzO1xuXG5cdGNvbnN0IG5vZGUgPSBSZWFjdC5jcmVhdGVFbGVtZW50KENvbnRyb2xDb21wb25lbnQsIHtcblx0XHQuLi5yZXN0LFxuXHRcdC8vIHN0eWxlOiBbeyBwYWRkaW5nOiAyMCwgLi4ucmVzdC5zdHlsZSB9XSxcblx0fSk7XG5cblx0aWYgKCFsYWJlbCkge1xuXHRcdHJldHVybiBub2RlO1xuXHR9XG5cblx0Y29uc3Qgcm9vdFN0eWxlczogU3R5bGVQcm9wPFZpZXdTdHlsZT4gPSB7XG5cdFx0ZmxleERpcmVjdGlvbjogJ3Jvdydcblx0fTtcblxuXHRpZiAobGFiZWxQbGFjZW1lbnQgPT09ICdlbmQnKSB7XG5cdFx0cm9vdFN0eWxlcy5mbGV4RGlyZWN0aW9uID0gJ3Jvdy1yZXZlcnNlJztcblx0fVxuXG5cdGlmIChsYWJlbFBsYWNlbWVudCA9PT0gJ3RvcCcpIHtcblx0XHRyb290U3R5bGVzLmZsZXhEaXJlY3Rpb24gPSAnY29sdW1uJztcblx0XHRyb290U3R5bGVzLmp1c3RpZnlDb250ZW50ID0gJ2NlbnRlcic7XG5cdH1cblxuXHRpZiAobGFiZWxQbGFjZW1lbnQgPT09ICdib3R0b20nKSB7XG5cdFx0cm9vdFN0eWxlcy5mbGV4RGlyZWN0aW9uID0gJ2NvbHVtbi1yZXZlcnNlJztcblx0XHRyb290U3R5bGVzLmp1c3RpZnlDb250ZW50ID0gJ2NlbnRlcic7XG5cdH1cblxuXHRyZXR1cm4gKFxuXHRcdDxUaGVtZUNvbnN1bWVyPlxuXHRcdFx0eyh7IHRoZW1lIH06IFRoZW1lQ29udGV4dERhdGEpID0+IChcblx0XHRcdFx0PFZpZXcgc3R5bGU9e3Jvb3RTdHlsZXN9PlxuXHRcdFx0XHRcdHtub2RlfVxuXHRcdFx0XHRcdDxUZXh0IHN0eWxlPXtbeyBwYWRkaW5nOiB0aGVtZS5zcGFjaW5nLnVuaXQsIH1dfT57bGFiZWx9PC9UZXh0PlxuXHRcdFx0XHQ8L1ZpZXc+XG5cdFx0XHQpfVxuXHRcdDwvVGhlbWVDb25zdW1lcj5cblx0KTtcbn07XG4iXX0=