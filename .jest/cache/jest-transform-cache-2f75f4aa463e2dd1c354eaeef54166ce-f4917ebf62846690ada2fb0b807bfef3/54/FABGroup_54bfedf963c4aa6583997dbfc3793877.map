{"version":3,"sources":["FABGroup.js"],"names":["FABGroup","backdrop","Animated","Value","animations","props","onStateChange","open","prevProps","parallel","timing","state","toValue","duration","useNativeDriver","stagger","map","animation","reverse","start","actions","icon","onPress","accessibilityLabel","theme","style","fabStyle","visible","colors","labelColor","dark","text","fade","rgb","string","backdropOpacity","interpolate","inputRange","outputRange","opacities","scales","opacity","styles","container","_close","backgroundColor","safeArea","it","i","item","label","transform","scale","color","surface","_toggle","fab","nextProps","prevState","_","React","Component","StyleSheet","create","alignItems","absoluteFillObject","justifyContent","marginHorizontal","marginBottom","marginTop","borderRadius","paddingHorizontal","paddingVertical","marginVertical","elevation","flexDirection"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport {\n  View,\n  StyleSheet,\n  Animated,\n  TouchableWithoutFeedback,\n  StatusBar,\n  SafeAreaView,\n} from 'react-native';\nimport { polyfill } from 'react-lifecycles-compat';\nimport color from 'color';\nimport FAB from './FAB';\nimport Text from '../Typography/Text';\nimport Card from '../Card/Card';\nimport { withTheme } from '../../core/theming';\nimport type { Theme } from '../../types';\nimport type { IconSource } from '../Icon';\n\ntype Props = {|\n  /**\n   * Action items to display in the form of a speed dial.\n   * An action item should contain the following properties:\n   * - `icon`: icon to display (required)\n   * - `label`: optional label text\n   * - `accessibilityLabel`: accessibility label for the action, uses label by default if specified\n   * - `color`: custom icon color of the action item\n   * - `style`: pass additional styles for the fab item, for example, `backgroundColor`\n   * - `onPress`: callback that is called when `FAB` is pressed (required)\n   */\n  actions: Array<{\n    icon: string,\n    label?: string,\n    color?: string,\n    accessibilityLabel?: string,\n    style?: any,\n    onPress: () => mixed,\n  }>,\n  /**\n   * Icon to display for the `FAB`.\n   * You can toggle it based on whether the speed dial is open to display a different icon.\n   */\n  icon: IconSource,\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityLabel?: string,\n  /**\n   * Custom color for the `FAB`.\n   */\n  color?: string,\n  /**\n   * Function to execute on pressing the `FAB`.\n   */\n  onPress?: () => mixed,\n  /**\n   * Whether the speed dial is open.\n   */\n  open: boolean,\n  /**\n   * Callback which is called on opening and closing the speed dial.\n   * The open state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onStateChange: (state: { open: boolean }) => mixed,\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible: boolean,\n  /**\n   * Style for the group. You can use it to pass additional styles if you need.\n   * For example, you can set an additional padding if you have a tab bar at the bottom.\n   */\n  style?: any,\n  /**\n   * Style for the FAB. It allows to pass the FAB button styles, such as backgroundColor.\n   */\n  fabStyle?: any,\n  /**\n   * @optional\n   */\n  theme: Theme,\n|};\n\ntype State = {\n  backdrop: Animated.Value,\n  animations: Animated.Value[],\n};\n\n/**\n * A component to display a stack of FABs with related actions in a speed dial.\n * To render the group above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/fab-group.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { FAB, Portal } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     open: false,\n *   };\n *\n *   render() {\n *     return (\n *       <Portal>\n *         <FAB.Group\n *           open={this.state.open}\n *           icon={this.state.open ? 'today' : 'add'}\n *           actions={[\n *             { icon: 'add', onPress: () => console.log('Pressed add') },\n *             { icon: 'star', label: 'Star', onPress: () => console.log('Pressed star')},\n *             { icon: 'email', label: 'Email', onPress: () => console.log('Pressed email') },\n *             { icon: 'notifications', label: 'Remind', onPress: () => console.log('Pressed notifications') },\n *           ]}\n *           onStateChange={({ open }) => this.setState({ open })}\n *           onPress={() => {\n *             if (this.state.open) {\n *               // do something if the speed dial is open\n *             }\n *           }}\n *         />\n *       </Portal>\n *     );\n *   }\n * }\n * ```\n */\nclass FABGroup extends React.Component<Props, State> {\n  static displayName = 'FAB.Group';\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    return {\n      animations: nextProps.actions.map(\n        (_, i) =>\n          prevState.animations[i] || new Animated.Value(nextProps.open ? 1 : 0)\n      ),\n    };\n  }\n\n  state = {\n    backdrop: new Animated.Value(0),\n    animations: [],\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.open === prevProps.open) {\n      return;\n    }\n\n    if (this.props.open) {\n      Animated.parallel([\n        Animated.timing(this.state.backdrop, {\n          toValue: 1,\n          duration: 250,\n          useNativeDriver: true,\n        }),\n        Animated.stagger(\n          50,\n          this.state.animations\n            .map(animation =>\n              Animated.timing(animation, {\n                toValue: 1,\n                duration: 150,\n                useNativeDriver: true,\n              })\n            )\n            .reverse()\n        ),\n      ]).start();\n    } else {\n      Animated.parallel([\n        Animated.timing(this.state.backdrop, {\n          toValue: 0,\n          duration: 200,\n          useNativeDriver: true,\n        }),\n        ...this.state.animations.map(animation =>\n          Animated.timing(animation, {\n            toValue: 0,\n            duration: 150,\n            useNativeDriver: true,\n          })\n        ),\n      ]).start();\n    }\n  }\n\n  _close = () => this.props.onStateChange({ open: false });\n\n  _toggle = () => this.props.onStateChange({ open: !this.props.open });\n\n  render() {\n    const {\n      actions,\n      icon,\n      open,\n      onPress,\n      accessibilityLabel,\n      theme,\n      style,\n      fabStyle,\n      visible,\n    } = this.props;\n    const { colors } = theme;\n\n    const labelColor = theme.dark\n      ? colors.text\n      : color(colors.text)\n          .fade(0.54)\n          .rgb()\n          .string();\n    const backdropOpacity = open\n      ? this.state.backdrop.interpolate({\n          inputRange: [0, 0.5, 1],\n          outputRange: [0, 1, 1],\n        })\n      : this.state.backdrop;\n\n    const opacities = this.state.animations;\n    const scales = opacities.map(\n      opacity =>\n        open\n          ? opacity.interpolate({\n              inputRange: [0, 1],\n              outputRange: [0.8, 1],\n            })\n          : 1\n    );\n\n    return (\n      <View pointerEvents=\"box-none\" style={[styles.container, style]}>\n        {open ? <StatusBar barStyle=\"light-content\" /> : null}\n        <TouchableWithoutFeedback onPress={this._close}>\n          <Animated.View\n            pointerEvents={open ? 'auto' : 'none'}\n            style={[\n              styles.backdrop,\n              {\n                opacity: backdropOpacity,\n                backgroundColor: colors.backdrop,\n              },\n            ]}\n          />\n        </TouchableWithoutFeedback>\n        <SafeAreaView pointerEvents=\"box-none\" style={styles.safeArea}>\n          <View pointerEvents={open ? 'box-none' : 'none'}>\n            {actions.map((it, i) => (\n              <View\n                key={i} // eslint-disable-line react/no-array-index-key\n                style={styles.item}\n                pointerEvents=\"box-none\"\n              >\n                {it.label && (\n                  <Card\n                    style={[\n                      styles.label,\n                      {\n                        transform: [{ scale: scales[i] }],\n                        opacity: opacities[i],\n                      },\n                    ]}\n                    onPress={() => {\n                      it.onPress();\n                      this._close();\n                    }}\n                    accessibilityLabel={\n                      it.accessibilityLabel !== 'undefined'\n                        ? it.accessibilityLabel\n                        : it.label\n                    }\n                    accessibilityTraits=\"button\"\n                    accessibilityComponentType=\"button\"\n                    accessibilityRole=\"button\"\n                  >\n                    <Text style={{ color: labelColor }}>{it.label}</Text>\n                  </Card>\n                )}\n                <FAB\n                  small\n                  icon={it.icon}\n                  color={it.color}\n                  style={[\n                    {\n                      transform: [{ scale: scales[i] }],\n                      opacity: opacities[i],\n                      backgroundColor: theme.colors.surface,\n                    },\n                    it.style,\n                  ]}\n                  onPress={() => {\n                    it.onPress();\n                    this._close();\n                  }}\n                  accessibilityLabel={\n                    typeof it.accessibilityLabel !== 'undefined'\n                      ? it.accessibilityLabel\n                      : it.label\n                  }\n                  accessibilityTraits=\"button\"\n                  accessibilityComponentType=\"button\"\n                  accessibilityRole=\"button\"\n                />\n              </View>\n            ))}\n          </View>\n          <FAB\n            onPress={() => {\n              onPress && onPress();\n              this._toggle();\n            }}\n            icon={icon}\n            color={this.props.color}\n            accessibilityLabel={accessibilityLabel}\n            accessibilityTraits=\"button\"\n            accessibilityComponentType=\"button\"\n            accessibilityRole=\"button\"\n            style={[styles.fab, fabStyle]}\n            visible={visible}\n          />\n        </SafeAreaView>\n      </View>\n    );\n  }\n}\n\npolyfill(FABGroup);\n\nexport default withTheme(FABGroup);\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end',\n  },\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'flex-end',\n  },\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0,\n  },\n  backdrop: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  label: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2,\n  },\n  item: {\n    marginHorizontal: 24,\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n});\n"]}