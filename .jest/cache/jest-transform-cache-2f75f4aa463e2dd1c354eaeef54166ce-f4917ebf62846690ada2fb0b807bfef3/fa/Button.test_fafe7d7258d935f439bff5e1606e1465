c549f544e5462e0d6648c9414c3e0636
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var core_1 = require("@bluebase/core");

var __1 = require("../");

var components_1 = require("@bluebase/components");

var react_1 = tslib_1.__importDefault(require("react"));

var react_test_renderer_1 = tslib_1.__importDefault(require("react-test-renderer"));

var react_native_1 = require("react-native");

var deepmerge_1 = tslib_1.__importDefault(require("deepmerge"));

test('render and contained button with primary color', function (done) {
  var rendered = react_test_renderer_1.default.create(react_1.default.createElement(core_1.BlueBaseApp, {
    components: {
      Button: __1.Button
    }
  }, react_1.default.createElement(components_1.Button, {
    variant: "contained",
    color: "primary"
  })));
  setTimeout(function () {
    var style = rendered.toJSON().props.style;
    expect(style.backgroundColor).toBe('#3f51b5');
    done();
  });
});
test('render and outline button with secondary color', function (done) {
  var rendered = react_test_renderer_1.default.create(react_1.default.createElement(core_1.BlueBaseApp, {
    components: {
      Button: __1.Button
    }
  }, react_1.default.createElement(components_1.Button, {
    variant: "outlined",
    color: "secondary"
  })));
  setTimeout(function () {
    var style = rendered.toJSON().props.style;
    expect(style.backgroundColor).toBe('transparent');
    var textProps = rendered.root.findByType(react_native_1.Text).props;
    var textStyle = deepmerge_1.default(textProps.style[0], deepmerge_1.default.all(textProps.style[1].filter(function (x) {
      return x !== undefined;
    })));
    expect(textStyle.color).toBe('#f50057');
    done();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hZG5hbi9EZXNrdG9wL3BsdWdpbi1yZWFjdC1uYXRpdmUtcGFwZXIvc3JjL2NvbXBvbmVudHMvQnV0dG9uL19fdGVzdHNfXy9CdXR0b24udGVzdC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxJQUFBLE1BQUEsR0FBQSxPQUFBLENBQUEsZ0JBQUEsQ0FBQTs7QUFDQSxJQUFBLEdBQUEsR0FBQSxPQUFBLENBQUEsS0FBQSxDQUFBOztBQUNBLElBQUEsWUFBQSxHQUFBLE9BQUEsQ0FBQSxzQkFBQSxDQUFBOztBQUNBLElBQUEsT0FBQSxHQUFBLE9BQUEsQ0FBQSxlQUFBLENBQUEsT0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBOztBQUNBLElBQUEscUJBQUEsR0FBQSxPQUFBLENBQUEsZUFBQSxDQUFBLE9BQUEsQ0FBQSxxQkFBQSxDQUFBLENBQUE7O0FBQ0EsSUFBQSxjQUFBLEdBQUEsT0FBQSxDQUFBLGNBQUEsQ0FBQTs7QUFDQSxJQUFBLFdBQUEsR0FBQSxPQUFBLENBQUEsZUFBQSxDQUFBLE9BQUEsQ0FBQSxXQUFBLENBQUEsQ0FBQTs7QUFFQSxJQUFJLENBQUMsZ0RBQUQsRUFBbUQsVUFBQyxJQUFELEVBQVM7QUFFL0QsTUFBTSxRQUFRLEdBQUcscUJBQUEsQ0FBQSxPQUFBLENBQWEsTUFBYixDQUNkLE9BQUEsQ0FBQSxPQUFBLENBQUEsYUFBQSxDQUFDLE1BQUEsQ0FBQSxXQUFELEVBQVk7QUFBQyxJQUFBLFVBQVUsRUFBRTtBQUFFLE1BQUEsTUFBTSxFQUFOLEdBQUEsQ0FBQTtBQUFGO0FBQWIsR0FBWixFQUNELE9BQUEsQ0FBQSxPQUFBLENBQUEsYUFBQSxDQUFDLFlBQUEsQ0FBQSxNQUFELEVBQVU7QUFBQyxJQUFBLE9BQU8sRUFBQyxXQUFUO0FBQXFCLElBQUEsS0FBSyxFQUFDO0FBQTNCLEdBQVYsQ0FEQyxDQURjLENBQWpCO0FBTUEsRUFBQSxVQUFVLENBQUMsWUFBSztBQUdmLFFBQU0sS0FBSyxHQUFXLFFBQWdCLENBQUMsTUFBakIsR0FBMEIsS0FBMUIsQ0FBZ0MsS0FBdEQ7QUFHQSxJQUFBLE1BQU0sQ0FBRSxLQUFhLENBQUMsZUFBaEIsQ0FBTixDQUF1QyxJQUF2QyxDQUE0QyxTQUE1QztBQUNBLElBQUEsSUFBSTtBQUNKLEdBUlMsQ0FBVjtBQVVBLENBbEJHLENBQUo7QUFvQkEsSUFBSSxDQUFDLGdEQUFELEVBQW1ELFVBQUMsSUFBRCxFQUFTO0FBRS9ELE1BQU0sUUFBUSxHQUFHLHFCQUFBLENBQUEsT0FBQSxDQUFhLE1BQWIsQ0FDZCxPQUFBLENBQUEsT0FBQSxDQUFBLGFBQUEsQ0FBQyxNQUFBLENBQUEsV0FBRCxFQUFZO0FBQUMsSUFBQSxVQUFVLEVBQUU7QUFBRSxNQUFBLE1BQU0sRUFBTixHQUFBLENBQUE7QUFBRjtBQUFiLEdBQVosRUFDRCxPQUFBLENBQUEsT0FBQSxDQUFBLGFBQUEsQ0FBQyxZQUFBLENBQUEsTUFBRCxFQUFVO0FBQUMsSUFBQSxPQUFPLEVBQUMsVUFBVDtBQUFvQixJQUFBLEtBQUssRUFBQztBQUExQixHQUFWLENBREMsQ0FEYyxDQUFqQjtBQU1BLEVBQUEsVUFBVSxDQUFDLFlBQUs7QUFDZixRQUFNLEtBQUssR0FBVyxRQUFnQixDQUFDLE1BQWpCLEdBQTBCLEtBQTFCLENBQWdDLEtBQXREO0FBQ0EsSUFBQSxNQUFNLENBQUUsS0FBYSxDQUFDLGVBQWhCLENBQU4sQ0FBdUMsSUFBdkMsQ0FBNEMsYUFBNUM7QUFHQSxRQUFNLFNBQVMsR0FBRyxRQUFRLENBQUMsSUFBVCxDQUFjLFVBQWQsQ0FBeUIsY0FBQSxDQUFBLElBQXpCLEVBQStCLEtBQWpEO0FBRUEsUUFBTSxTQUFTLEdBQVEsV0FBQSxDQUFBLE9BQUEsQ0FDdEIsU0FBUyxDQUFDLEtBQVYsQ0FBZ0IsQ0FBaEIsQ0FEc0IsRUFFdEIsV0FBQSxDQUFBLE9BQUEsQ0FBVSxHQUFWLENBQ0MsU0FBUyxDQUFDLEtBQVYsQ0FBZ0IsQ0FBaEIsRUFBbUIsTUFBbkIsQ0FBMEIsVUFBQyxDQUFEO0FBQUEsYUFBWSxDQUFDLEtBQUssU0FBbEI7QUFBQSxLQUExQixDQURELENBRnNCLENBQXZCO0FBT0EsSUFBQSxNQUFNLENBQUUsU0FBaUIsQ0FBQyxLQUFwQixDQUFOLENBQWlDLElBQWpDLENBQXNDLFNBQXRDO0FBQ0EsSUFBQSxJQUFJO0FBQ0osR0FoQlMsQ0FBVjtBQWtCQSxDQTFCRyxDQUFKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmx1ZUJhc2VBcHAgfSBmcm9tICdAYmx1ZWJhc2UvY29yZSc7XG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICcuLi8nO1xuaW1wb3J0IHsgQnV0dG9uIGFzIEJCX0J1dHRvbiB9IGZyb20gJ0BibHVlYmFzZS9jb21wb25lbnRzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgVGVzdFJlbmRlcmVyIGZyb20gJ3JlYWN0LXRlc3QtcmVuZGVyZXInO1xuaW1wb3J0IHsgVGV4dCB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgZGVlcG1lcmdlIGZyb20gJ2RlZXBtZXJnZSc7XG5cbnRlc3QoJ3JlbmRlciBhbmQgY29udGFpbmVkIGJ1dHRvbiB3aXRoIHByaW1hcnkgY29sb3InLCAoZG9uZSkgPT4ge1xuXG5cdGNvbnN0IHJlbmRlcmVkID0gVGVzdFJlbmRlcmVyLmNyZWF0ZShcbiAgICA8Qmx1ZUJhc2VBcHAgY29tcG9uZW50cz17eyBCdXR0b24gfX0+XG5cdFx0XHQ8QkJfQnV0dG9uIHZhcmlhbnQ9XCJjb250YWluZWRcIiBjb2xvcj1cInByaW1hcnlcIiAvPlxuXHRcdDwvQmx1ZUJhc2VBcHA+XG5cdCk7XG5cblx0c2V0VGltZW91dCgoKSA9PiB7XG5cdFx0Ly8gZXhwZWN0KHJlbmRlcmVkKS50b01hdGNoU25hcHNob3QoKTtcblxuXHRcdGNvbnN0IHN0eWxlOiBhbnlbXSA9IChyZW5kZXJlZCBhcyBhbnkpLnRvSlNPTigpLnByb3BzLnN0eWxlO1xuXHRcdC8vIGNvbnN0IHN0eWxlID0gZGVlcG1lcmdlLmFsbChzdHlsZVByb3AuZmlsdGVyKHggPT4geCAhPT0gdW5kZWZpbmVkKSk7XG5cblx0XHRleHBlY3QoKHN0eWxlIGFzIGFueSkuYmFja2dyb3VuZENvbG9yKS50b0JlKCcjM2Y1MWI1Jyk7XG5cdFx0ZG9uZSgpO1xuXHR9KTtcblxufSk7XG5cbnRlc3QoJ3JlbmRlciBhbmQgb3V0bGluZSBidXR0b24gd2l0aCBzZWNvbmRhcnkgY29sb3InLCAoZG9uZSkgPT4ge1xuXG5cdGNvbnN0IHJlbmRlcmVkID0gVGVzdFJlbmRlcmVyLmNyZWF0ZShcbiAgICA8Qmx1ZUJhc2VBcHAgY29tcG9uZW50cz17eyBCdXR0b24gfX0+XG5cdFx0XHQ8QkJfQnV0dG9uIHZhcmlhbnQ9XCJvdXRsaW5lZFwiIGNvbG9yPVwic2Vjb25kYXJ5XCIgLz5cblx0XHQ8L0JsdWVCYXNlQXBwPlxuXHQpO1xuXG5cdHNldFRpbWVvdXQoKCkgPT4ge1xuXHRcdGNvbnN0IHN0eWxlOiBhbnlbXSA9IChyZW5kZXJlZCBhcyBhbnkpLnRvSlNPTigpLnByb3BzLnN0eWxlO1xuXHRcdGV4cGVjdCgoc3R5bGUgYXMgYW55KS5iYWNrZ3JvdW5kQ29sb3IpLnRvQmUoJ3RyYW5zcGFyZW50Jyk7XG5cblx0XHQvLyBUZXh0XG5cdFx0Y29uc3QgdGV4dFByb3BzID0gcmVuZGVyZWQucm9vdC5maW5kQnlUeXBlKFRleHQpLnByb3BzO1xuXG5cdFx0Y29uc3QgdGV4dFN0eWxlOiBhbnkgPSBkZWVwbWVyZ2UoXG5cdFx0XHR0ZXh0UHJvcHMuc3R5bGVbMF0sXG5cdFx0XHRkZWVwbWVyZ2UuYWxsKFxuXHRcdFx0XHR0ZXh0UHJvcHMuc3R5bGVbMV0uZmlsdGVyKCh4OiBhbnkpID0+IHggIT09IHVuZGVmaW5lZClcblx0XHRcdClcblx0XHQpO1xuXG5cdFx0ZXhwZWN0KCh0ZXh0U3R5bGUgYXMgYW55KS5jb2xvcikudG9CZSgnI2Y1MDA1NycpO1xuXHRcdGRvbmUoKTtcblx0fSk7XG5cbn0pO1xuIl19